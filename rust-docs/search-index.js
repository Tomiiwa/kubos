var N=null,E="",T="t",U="u",searchIndex={};
var R=["command","result","stream","Writes an I2C command","Reads command result","transfer","Writes I2C command and reads result","usize","duration","try_from","try_into","borrow_mut","type_id","I2CStream","Connection","spi_command_status","string","supervisorversion","supervisorhousekeeping","formatter","SupervisorVersion","SupervisorEnableStatus","SupervisorHousekeeping","borrow","typeid","EpsError","eps_api::EpsError","eps_api","epserror","backtrace","AdcsError","to_string","option","GenericError","Error resulting from underlying Io functions","Underlying cause captured from io function","description","Error description","isis_ants_api","antsresult","deploystatus","antstelemetry","kantsant","to_owned","clone_into","as_fail","configure","kantscontroller","auto_deploy","cancel_deploy","Cancel all current deployment actions","get_deploy","get_uptime","get_system_telemetry","get_activation_count","Get an antenna's activation count","get_activation_time","watchdog_kick","watchdog_start","watchdog_stop","passthrough","AntsTelemetry","DeployStatus","AntsError","KANTSAnt","KANTSController","radio_api","radioresult","RadioError","adcsresult","connection","stateofhealth","Retrieves a count of messages that have been received by…","georecord","iresult","GeoRecord","StateOfHealth","DuplexD2","Checksum","motherboard","daughterboard","statuscode","clyde_3g_eps_api","Telemetry variants","BoardTemperature","Telemetry parsing function","epsresult","Helper function storing telemetry command information","boardstatus","checksum","versioninfo","lasterror","clyde_3g_eps_api::DaughterboardTelemetry","clyde_3g_eps_api::MotherboardTelemetry","clyde_3g_eps_api::ResetTelemetry","get_board_status","Get Board Status","get_checksum","Get Checksum","get_version_info","Get Version","get_last_error","Get Last Error","manual_reset","Manual Reset","reset_comms_watchdog","Reset Communications Watchdog","get_motherboard_telemetry","Get Motherboard Telemetry","get_daughterboard_telemetry","Get Daughterboard Telemetry","get_reset_telemetry","Get Reset Telemetry","set_comms_watchdog_period","Set Communications Watchdog Period","get_comms_watchdog_period","Get Communications Watchdog Period","raw_command","Issue Raw Command","errorcode","ordering","intoiterator","BoardStatus","LastError","VersionInfo","ErrorCode","StatusCode","Clyde3gEps","Constructor","cbor_protocol","cbor_protocol::ProtocolError","protocolerror","socketaddr","ProtocolError","file_protocol","file_protocol::ProtocolError","Underlying error encountered","Protocol","file_protocol::protocol","file_protocol::protocol::State","channel_id","Destination file path","Transaction identifier","File hash","File mode","protocolconfig","ProtocolConfig","channel_protocol","channel_protocol::ProtocolError","recv_message","ChannelMessage","ChannelProtocol","CborError","message","MessageParseError","A general error was encountered when parsing a message","ReceiveError","An error was encountered when receiving a message","ReceiveTimeout","A timeout occurred when receiving data","parse_channel_id","Parse out just the channel ID from a message","Send CBOR packet to the destination port","generate_channel","Generates a new random channel ID for use when initiating…","rust_uart","rust_uart::UartError","The underlying error type","set_result","uartresult","from_path","rust_uart::mock","uarterror","UartError","MockStream","WriteStruct","ReadStruct","The specific CBOR protocol error","shell_protocol::error","shell_protocol::error::ProtocolError","MessageCreationError","An error was encountered when creating a message","Underlying error","shell_protocol","shell_protocol::messages","shell_protocol::messages::Message","Channel ID of shell session","This message is sent by the shell service when a process…","Optional stdout data","parse_message","channelmessage","from_cbor","to_cbor","Stdout -> CBOR","processhandler","message_engine","ProcessHandler","ShellProtocol","deserialize","mai400_api","mai400_api::UartError","minor_version","major_version","Catch-all error","mai400_api::MAIError","mairesult","Returns an empty set of flags","Returns the set containing all flags.","thermopileflags","Returns the raw value of the flags currently stored.","from_bits","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","from_bits_unchecked","Convert from underlying bit representation, preserving all…","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","intersects","Returns `true` if there are flags common to both `self`…","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","Convert the flags byte into a vector containing the string…","Constructor. Converts a raw data array received from the…","IREHSTelemetry","IR Earth Horizon Sensor telemetry data","thermopiles_a","IREHS A Thermopile Sensors 12-bit ADC (0.8059 mV per lsb)…","thermopiles_b","IREHS B Thermopile Sensors 12-bit ADC (0.8059 mV per lsb)…","Thermistor Temp 12-bit ADC for A (0.8059 mV per lsb)…","Thermistor Temp 12-bit ADC for B (0.8059 mV per lsb)…","dip_angle_a","Calculated dip angle of Earth limb for A in degrees","dip_angle_b","Calculated dip angle of Earth limb for B in degrees","solution_degraded","Degradation codes for thermopiles [{A}, {B}]","ThermopileFlags","Thermopile error flags","Raw accelerometer and gyroscope data","Accelerometer (X, Y, Z)  (3.9 mg/lsb)","Gyroscope (X, Y, Z) (8.75 mdps/lsb)","gyro_temp","Gyroscope temperature (-1C/lsb)","RotatingTelemetry","Structure to contain all possible variables which can be…","b_field_igrf","IGRF magnetic fields (X, Y, Z) (Tesla)","sun_vec_eph","ECI Sun Vector from Ephemeris (X, Y, Z) (Unit)","sc_pos_eci","ECI Spacecraft Position (X, Y, Z) (km)","sc_vel_eci","ECI Spacecraft Velocity (X, Y, Z) (km)","kepler_elem","Keplerian elements","Bdot Gain Acquisition Mode (X, Y, Z)","Proportional Gain Normal Mode (X, Y, Z)","Derivative Gain Normal Mode (X, Y, Z)","Unloading Gain Normal Mode (X, Y, Z)","CSS{n} Bias (1, 2, 3, 4, 5, 6)","MAG Bias (X, Y, Z)","RWS Bus Voltage (0.00483516483 v/lsb)","rws_press","att_det_mode","Attitude Determination Mode","rws_reset_cntr","RWS Reset Counter (X, Y, Z)","sun_mag_aligned","Sun and Mag Field are aligned","Software Minor Version","Software Unit Serial Number","orbit_prop_mode","Orbit Propagation Mode","acs_op_mode","ACS Mode in Operation","proc_reset_cntr","ADACS Processor Reset Counter","Software Major Version","ads_op_mode","ADS Mode in Operation","CSS{n} Gain (1, 2, 3, 4, 5, 6)","Mag Gain (X, Y, Z)","orbit_epoch","Epoch of Current Orbit (GPS sec)","true_anomoly_epoch","True Anomaly at Epoch – Kepler (deg)","orbit_epoch_next","Epoch of Next Updated RV (GPS sec)","sc_pos_eci_epoch","ECI Position at Next Epoch (X, Y, Z) (km)","sc_vel_eci_epoch","ECI Velocity at Next Epoch (X, Y, Z) (km/sec)","qb_x_wheel_speed","QbX Wheel Speed Command (rpm)","qb_x_filter_gain","QbX Filter Gain","qb_x_dipole_gain","QbX Dipole Gain","dipole_gain","Dipole Gain (X, Y, Z)","wheel_speed_bias","Wheel Speed Bias (X, Y, Z) (rpm)","cos_sun_mag_align_thresh","Cosine of Sun/Mag Align Threshold Angle","unload_ang_thresh","Max AngleToGo for Unloading (rad)","Quaternion feedback saturation.","rwa_trq_max","Maximum RWA Torque (mNm)","rws_motor_current","Reaction Wheel Motor Current (X, Y, Z) (A)…","rws_motor_temp","RWS Motor Temperature (Temperature oC = rwsMotorTemp *…","KeplerElem","Structure for keplarian elements returned in the standard…","semi_major_axis","Semi major axis (km)","eccentricity","Eccentricity","inclination","Inclination (deg)","Right ascension of ascending node (deg)","arg_parigee","Argument of perigee (deg)","true_anomoly","True anomaly (deg)","StandardTelemetry","Standard telemetry packet sent by the MAI-400 every 250ms","tlm_counter","Rotating variable indicator","UTC Time in Seconds","time_subsec","4 Hz Subsecond counter","cmd_valid_cntr","Valid Command Counter","cmd_invalid_cntr","Invalid Command Counter. Number of commands which did not…","cmd_invalid_chksum_cntr","Invalid Command CRC Counter. Number of command messages…","last_command","Last valid CCT command received","Commanded ACS Mode","Raw sun sensor outputs","eclipse_flag","Whether the device is eclipsed or not","sun_vec_b","Unit Sun Vector in Body Frame","i_b_field_meas","Magnetometer Reading (inc. bias and gain)","Rate of Change of Magnetic field Vector in Body Frame","rws_speed_cmd","RWS Commanded Wheel Speed, lsb: 1 RPM","rws_speed_tach","RWS Wheel Speeds, lsb: 1 RPM","rwa_torque_cmd","Commanded Wheel Torque computed by ADACS (mNm)","gc_rwa_torque_cmd","RWS Torque Command to wheel","torque_coil_cmd","Torque Coil Command computed by ADACS (Am2)","gc_torque_coil_cmd","Torque Coil Command (lsb)","Commanded orbit-to-body quaternion","Current Estimated Orbit-to-Body Quaternion","angle_to_go","Angle to Go in radians","Error between command and estimate Qbo","Body rate in body frame (rad/sec).","rotating_variable_a","Rotating variable A. Use RotatingTelemetry struct if…","rotating_variable_b","Rotating variable B. Use RotatingTelemetry struct if…","rotating_variable_c","Rotating variable C. Use RotatingTelemetry struct if…","Nadir vectors in Body","Nadir vectors in ECI frame","mai400_api::mock","default","standardtelemetry","irehstelemetry","rotatingtelemetry","keplerelem","partial_cmp","maierror","Returns the set difference of the two sets of flags.","sub_assign","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","from_iter","Wrapper for UART stream","Any boxed stream that allows for communication over serial…","Custom errors for UART actions","Catch-all error case","A read/write call was made while another call was already…","An I/O error was thrown by the kernel","SerialError","An error was thrown by the serial driver","Mock objects for use with unit tests","Structure containing the input data to verify and/or…","Structure containing the output data or result to return…","Mock object for simulating a UART data stream","Information to use when write() calls are made","Information to use when read() calls are made","Set the result to be returned for any write() calls","set_input","Set the input to validate for any write() calls","Set the result to be returned for any read() calls","set_output","Set the output data","Constructor to creation connection with provided stream","Convenience constructor to create connection from bus path","portsettings","Writes out raw bytes to the stream","Reads messages upto specified length recieved on the bus","novatel_oem6_api","novatel_oem6_api::UartError","recv_status","Current status of receiver","time_status","Validity of the time information","GPS reference week","Milliseconds into GPS reference week","Device connection structure","RxStatusEvent","NoResponse","ThreadCommError","The thread reading messages from the device is no longer…","CommandError","The underlying error","UnknownMessage","Received a valid message, but the message ID doesn't match…","novatel_oem6_api::OEMError","ID of message received","An error was thrown by the serial communication driver","syncsender","Convert a raw data buffer into a useable struct","receiverstatusflags","is_empty","contains","oemresult","messageid","Directly send a message without formatting or checksum…","novatel_oem6_api::mock","mockstream","baudrate","bestxyzlog","rxstatuseventlog","versionlog","component","responseid","oemerror","BestXYZLog","RxStatusEventLog","VersionLog","Component","ResponseID","MessageID","ReceiverStatusFlags","PortBusy","IoError","Creates and parses configuration data from the passed in…","kubos_system","new_from_path","The default configuration file path","cloneany","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","KubosVersions","UBootVars","recv_loop","serviceconfig","reserved1","reserved2","EpsResult","Universal return type for EPS api functions","epspowerstate","epssystemconfig","epsbatteryconfig","equivalent","configure_system","configure_battery","save_battery_config","set_single_output","epschannels","set_input_value","set_input_mode","Set the MPPT mode","set_heater","heaterselect","reset_system_config","reset_battery_config","reset_counters","get_housekeeping","get_system_config","get_battery_config","get_heater","to_input_value","inputvalue","from_input_value","registry","metatype","executor","EpsBatteryConfig","EpsSystemConfig","EpsPowerState","EpsChannels","HeaterSelect","ConfigError","Configuration error. Thrown when a parameter passed to a C…","Kick the hardware watchdog","Pass a data packet directly through to the device","ServiceConfig","KubOS config used by either Apps or Services. KubOS config…","Creates and parses configuration data from the system…","new_from_str","Returns the configured hosturl string in the following…","Returns the category's configuration information in the…","Performs a get on the raw config data","TestCommand","TestService","ServiceListener","kubos_service","subsystem","Common structure and functions for setting up service…","Initialize logging for the service All messages will be…","Any errors encountered by the request","Request completion success or failure","Set System and Battery,heater and MPPT configuration","Save Battery Configuration","ackcommand","concrete_type_name","resolve_field","arguments","executionresult","GenericResponse","RawCommandResponse","AckCommand","Common response fields structure for requests which don't…","Current power status","success","Response fields for 'issueRawCommand' mutation","Command response from system","Nominal telemetry","Debug telemetry","Return field for 'ack' query","No mutations have been executed","TestHardware","A hardware test was performed","IssueRawCommand","A raw command was passed through to the system","Secondary","Integration","antennastats","configurecontroller","powerstate","deploymentstatus","telemetrynominal","telemetrydebug","armstatus","deploytype","resolve","defaultscalarvalue","ConfigureHardwareResponse","GetPowerResponse","ControlPowerResponse","GetDeployResponse","IntegrationTestResults","HardwareTestResults","Telemetry","TelemetryNominal","TelemetryDebug","AntennaStats","ArmStatus","ConfigureController","PowerState","DeploymentStatus","DeployType","TestResults","Response fields for 'configureHardware' mutation","Response fields for 'power' query","Response fields for 'controlPower' mutation","Response fields for 'testHardware(test: INTEGRATION)'…","telemetry_nominal","telemetry_debug","Response fields for 'testHardware(test: HARDWARE)' mutation","Test results","Raw IMU telemetry values","ControlPower","System power state was changed","ConfigureHardware","System configuration was updated","Input field for 'controlPower' mutation and response field…","System is on","System is off or unavailable","System will be reset","TestType","Input field for 'testHardware' mutation","Integration (non-invasive) test","Hardware","Hardware (invasive) test","Enum for the 'testHardware' mutation response union","Integration test results","Hardware test results","Reserved1","Reserved2","Reserved for future use","rotating","stdtelem","irehstelem","rawimutelem","testtype","resolve_into_type","IREHSTelem","RawIMUTelem","ThermopileStruct","ThermopileSensor","Current power state of the system","Response fields for `telemetry` query","Response fields for 'telemetry(telem: NOMINAL)' query","num_components","components","Input field for 'configureHardware' mutation","Fixed position","KubosInvalid","lockstatus","configoption","solutionstatus","posveltype","reftimestatus","receiverstatus","ConfigStruct","LockStatus","SystemStatus","ReceiverStatus","VersionComponent","ConfigOption","SolutionStatus","PosVelType","RefTimeStatus","kubos_telemetry_db","timestamp","parameter","kubos_telemetry_db::telemetry","queryresult","kubos_telemetry_db::models","predicate","kubos_telemetry_db::telemetry::columns","all_columns","join_target","walk_ast","into_update_target","updatetarget","Generic mutation response struct","clyde_3g_eps_service::models","VoltageFeedingBcr4","CurrentBcr4Sa4a","CurrentBcr4Sa4b","ArrayTempSa4a","ArrayTempSa4b","SunDetectorSa4a","SunDetectorSa4b","VoltageFeedingBcr5","CurrentBcr5Sa5a","CurrentBcr5Sa5b","ArrayTempSa5a","ArrayTempSa5b","SunDetectorSa5a","SunDetectorSa5b","VoltageFeedingBcr6","CurrentBcr6Sa6a","CurrentBcr6Sa6b","ArrayTempSa6a","ArrayTempSa6b","SunDetectorSa6a","SunDetectorSa6b","VoltageFeedingBcr7","CurrentBcr7Sa7a","CurrentBcr7Sa7b","ArrayTempSa7a","ArrayTempSa7b","SunDetectorSa7a","SunDetectorSa7b","VoltageFeedingBcr8","CurrentBcr8Sa8a","CurrentBcr8Sa8b","ArrayTempSa8a","ArrayTempSa8b","SunDetectorSa8a","SunDetectorSa8b","VoltageFeedingBcr9","CurrentBcr9Sa9a","CurrentBcr9Sa9b","ArrayTempSa9a","ArrayTempSa9b","SunDetectorSa9a","SunDetectorSa9b","UnknownCommand","Unknown command received","CommandDataIncorrect","Supplied data incorrect when processing command","ChannelDoesNotExist","Selected channel does not exist","ChannelInactive","Selected channel is currently inactive","ResetOccurred","A reset had to occur","BadADCAcquisition","FailReadingEEPROM","Reading from EEPROM generated an error","InternalSPIError","Generic warning about an error on the internal SPI bus","The command to fetch the last error failed","UnknownError","Catch all for future error values","VoltageFeedingBcr1","CurrentBcr1Sa1a","CurrentBcr1Sa1b","ArrayTempSa1a","ArrayTempSa1b","SunDetectorSa1a","SunDetectorSa1b","VoltageFeedingBcr2","CurrentBcr2Sa2a","CurrentBcr2Sa2b","ArrayTempSa2a","ArrayTempSa2b","SunDetectorSa2a","SunDetectorSa2b","VoltageFeedingBcr3","CurrentBcr3Sa3a","CurrentBcr3Sa3b","ArrayTempSa3a","ArrayTempSa3b","SunDetectorSa3a","SunDetectorSa3b","BcrOutputCurrent","BcrOutputVoltage","CurrentDraw3V3","CurrentDraw5V","OutputCurrent12V","OutputVoltage12V","OutputCurrentBattery","OutputVoltageBattery","OutputCurrent5V","OutputVoltage5V","OutputCurrent33V","OutputVoltage33V","OutputVoltageSwitch1","OutputCurrentSwitch1","OutputVoltageSwitch2","OutputCurrentSwitch2","OutputVoltageSwitch3","OutputCurrentSwitch3","OutputVoltageSwitch4","OutputCurrentSwitch4","OutputVoltageSwitch5","OutputCurrentSwitch5","OutputVoltageSwitch6","OutputCurrentSwitch6","OutputVoltageSwitch7","OutputCurrentSwitch7","OutputVoltageSwitch8","OutputCurrentSwitch8","OutputVoltageSwitch9","OutputCurrentSwitch9","OutputVoltageSwitch10","OutputCurrentSwitch10","AutomaticSoftware","Manual reset","clyde3geps","versiondata","boarddata","errordata","getpowerresponse","mutationresponse","firmware_number","Motherboard version information","clyde_3g_eps_service","clyde_3g_eps_service::schema","clyde_3g_eps_service::models::board_status","clyde_3g_eps_service::models::daughterboard_telemetry","clyde_3g_eps_service::models::last_error","clyde_3g_eps_service::models::motherboard_telemetry","clyde_3g_eps_service::models::reset_telemetry","clyde_3g_eps_service::models::subsystem","clyde_3g_eps_service::models::version","clyde_3g_eps_service::schema::mutation","clyde_3g_eps_service::schema::query","mutations","MutationResponse","BoardData","ErrorData","Subsystem","Mutations","VersionNum","VersionData","max_num_handlers","downlink_ports","Optional list of ports used by downlink endpoints that…","Timeout for the completion of GraphQL operations within…","commsresult","payloadtype","command_id","payload_type","destination","commsconfig","commscontrolblock","commsserviceerror","spacepacket","Validate the contents of the link packet","The maximum allowed size of the packet We are still…","CommsControlBlock","CommsTelemetry","CommsConfig","CommsServiceError","PayloadType","CommsService","LinkPacket","SpacePacket","InvalidChecksum"];
searchIndex["adcs_api"]={"doc":"High level ADCS interfaces","i":[[4,R[30],"adcs_api","Errors for ADCS devices",N,N],[13,"Generic",E,"Generic error",0,N],[13,"Config",E,"Configuration error",0,N],[13,R[438],E,"No response received from subsystem",0,N],[13,"Internal",E,"An error was thrown by the subsystem",0,N],[13,"Mutex",E,"Mutex-related error",0,N],[13,"NotImplemented",E,"Requested function has not been implemented",0,N],[6,"AdcsResult",E,"ADCS specific result type",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[31],E,E,0,[[["self"]],[R[16]]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[45],E,E,0,[[["self"]],["fail"]]],[11,"eq",E,E,0,[[["self"],["adcserror"]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,0,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[4,R[30]]]};
searchIndex["cbor_protocol"]={"doc":"Kubos CBOR over UDP communication crate","i":[[3,R[137],R[129],"CBOR protocol communication structure",N,N],[4,R[133],E,"An error generated during protocol execution",N,N],[13,"Timeout",E,"Indicates a timeout when sending or receiving",0,N],[13,"NoDataReceived",E,"Indicates no data was received",0,N],[13,"ReceiveFailed",E,"Indicates a failure to receive",0,N],[12,"err",R[130],"Cause of receive failure",0,N],[13,"SendFailed",R[129],"Indicates a failure to send",0,N],[12,"dest",R[130],"Intended send destination",0,N],[12,"err",E,"Cause of send failure",0,N],[13,R[473],R[129],"Indicates a non-send/received Io error",0,N],[12,"err",R[130],"Root Io Error",0,N],[13,"ParseFail",R[129],"Indicates a failure to parse a message",0,N],[12,"err",R[130],"Cause of parsing failure",0,N],[11,"new",R[129],"Binds a UDP listener socket and saves it in a new protocol…",1,[[["str"],[R[7]]],["self"]]],[11,"send_message",E,"Send a CBOR packet to a specified UDP socket destination",1,[[["self"],[R[132]]],[[R[1],[R[131]]],[R[131]]]]],[11,"send_pause",E,"Send a pause message to a specified UDP socket destination",1,[[["self"],[R[132]]],[[R[1],[R[131]]],[R[131]]]]],[11,"send_resume",E,"Send a resume message to a specified UDP socket destination",1,[[["self"],[R[132]]],[[R[1],[R[131]]],[R[131]]]]],[11,R[149],E,"Receive a UDP message (no timeout)",1,[[["self"]],[[R[131]],[R[1],["value",R[131]]],["value"]]]],[11,"peek_peer",E,"Peek at the sender information for the next message in the…",1,[[["self"]],[[R[131]],[R[1],[R[132],R[131]]],[R[132]]]]],[11,"recv_message_peer",E,"Receive a UDP message and take note of the sender (no…",1,[[["self"]],[[R[1],[R[131]]],[R[131]]]]],[11,"recv_message_peer_timeout",E,"Receive a UDP message and take note of the sender (with…",1,[[["self"],[R[8]]],[[R[1],[R[131]]],[R[131]]]]],[11,"recv_message_timeout",E,"Receive a UDP message (with timeout)",1,[[["self"],[R[8]]],[[R[131]],[R[1],["value",R[131]]],["value"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[31],E,E,0,[[["self"]],[R[16]]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[45],E,E,0,[[["self"]],["fail"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,0,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[4,R[133]],[3,R[137]]]};
searchIndex["channel_protocol"]={"doc":"Channel Protocol","i":[[3,R[150],R[147],"Channel message structure",N,N],[12,R[140],E,"Channel ID",0,N],[12,"name",E,"Message name",0,N],[12,"payload",E,"Message payload",0,N],[3,R[151],E,"Channel protocol structure",N,N],[4,R[133],E,"Errors which occur when using ChannelProtocol",N,N],[13,R[152],E,"An error was encountered by serde_cbor",1,N],[12,"err",R[148],R[177],1,N],[13,R[154],R[147],R[155],1,N],[12,"err",R[148],R[136],1,N],[13,R[158],R[147],R[159],1,N],[13,R[156],E,R[157],1,N],[12,"err",R[148],R[136],1,N],[5,R[160],R[147],R[161],N,[[["value"]],[[R[1],["u32",R[131]]],["u32"],[R[131]]]]],[5,R[189],E,"Parses raw cbor message into ChannelMessage",N,[[["value"]],[[R[153]],[R[1],[R[153],R[131]]],[R[131]]]]],[5,R[163],E,R[164],N,[[],["u32"]]],[11,"new",E,"Create a new channel protocol instance using an…",2,[[["u32"],["str"]],["self"]]],[11,"set_remote",E,"Set new remote address on existing channel procotol…",2,[[["self"],[R[132]]]]],[11,"send",E,R[162],2,[[["self"]],[[R[1],[R[131]]],[R[131]]]]],[11,"recv_raw",E,"Receive a raw cbor message message",2,[[["self"],[R[32],[R[8]]],[R[8]]],[[R[1],["value",R[131]]],["value"],[R[131]]]]],[11,R[149],E,"Receive a parsed channel procotol message",2,[[["self"],[R[32],[R[8]]],[R[8]]],[[R[153]],[R[1],[R[153],R[131]]],[R[131]]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[31],E,E,1,[[["self"]],[R[16]]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[45],E,E,1,[[["self"]],["fail"]]],[11,"clone",E,E,0,[[["self"]],[R[153]]]],[11,"from",E,E,1,[[[R[131]]],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,1,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,1,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[3,R[150]],[4,R[133]],[3,R[151]]]};
searchIndex["clyde_3g_eps_api"]={"doc":"Low level interface for interacting with a ClydeSpace 3G EPS","i":[[3,R[122],R[82],"Status of EPS Motherboard and Daughterboard",N,N],[12,R[79],E,"Motherboard status code",0,N],[12,R[80],E,"Daughterboard status code",0,N],[3,R[126],E,"EPS Board Status Codes",N,N],[3,R[78],E,R[78],N,N],[12,R[79],E,"Motherboard ROM checksum",1,N],[12,R[80],E,"Daughterboard ROM checksum",1,N],[3,R[123],E,"Struct holding EPS last error information",N,N],[12,R[79],E,"Last error reported by motherboard",2,N],[12,R[80],E,"Last error reported by daughterboard",2,N],[3,"Version",E,"Version",N,N],[12,"revision",E,"Current firmware revision on board",3,N],[12,R[791],E,"Current firmware on board",3,N],[3,R[124],E,"Structure containing version information for the EPS…",N,N],[12,R[79],E,R[792],4,N],[12,R[80],E,"Optional daughterboard version information",4,N],[3,"Eps",E,"EPS structure containing low level connection and…",N,N],[4,R[125],E,"Last Error",N,N],[13,"None",E,"No error was encountered",5,N],[13,R[712],E,R[713],5,N],[13,R[714],E,R[715],5,N],[13,R[716],E,R[717],5,N],[13,R[718],E,R[719],5,N],[13,"BadCRC",E,"CRC code does not match data",5,N],[13,R[720],E,R[721],5,N],[13,R[722],E,"There was an error with the ADC acquisition",5,N],[13,R[723],E,R[724],5,N],[13,R[725],E,R[726],5,N],[13,R[441],E,R[727],5,N],[13,R[728],E,R[729],5,N],[18,"LAST_COMMAND_FAILED",E,"Last Command Failed",6,N],[18,"WATCHDOG_ERROR",E,"Watchdog Error",6,N],[18,"BAD_COMMAND_DATA",E,"Bad Command Data",6,N],[18,"BAD_COMMAND_CHANNEL",E,"Bad Command Channel",6,N],[18,"ERROR_READING_EEPROM",E,"Error Reading EEPROM",6,N],[18,"POWER_ON_RESET",E,"Power On Reset",6,N],[18,"BROWN_OUT_RESET",E,"Brown Out Reset",6,N],[11,"empty",E,R[206],6,[[],[R[81]]]],[11,"all",E,R[207],6,[[],[R[81]]]],[11,"bits",E,R[209],6,[[["self"]],["u8"]]],[11,R[210],E,R[211],6,[[["u8"]],[[R[81]],[R[32],[R[81]]]]]],[11,R[212],E,R[213],6,[[["u8"]],[R[81]]]],[11,R[214],E,R[215],6,[[["u8"]],[R[81]]]],[11,R[451],E,R[216],6,[[["self"]],["bool"]]],[11,"is_all",E,R[217],6,[[["self"]],["bool"]]],[11,R[218],E,R[219],6,[[["self"],[R[81]]],["bool"]]],[11,R[452],E,R[220],6,[[["self"],[R[81]]],["bool"]]],[11,"insert",E,R[221],6,[[["self"],[R[81]]]]],[11,"remove",E,R[222],6,[[["self"],[R[81]]]]],[11,"toggle",E,R[223],6,[[["self"],[R[81]]]]],[11,"set",E,R[224],6,[[["self"],[R[81]],["bool"]]]],[11,"to_vec",E,R[225],6,[[],[["vec",[R[16]]],[R[16]]]]],[11,"new",E,R[128],7,[[[R[70]]],["self"]]],[0,"DaughterboardTelemetry",E,"Daughterboard Telemetry",N,N],[4,"Type",R[92],R[83],N,N],[13,R[670],E,"VBCR4 - Voltage feeding BRC4 (V)",8,N],[13,R[671],E,"IBCR4A - Current BCR4, Connector SA4A (A)",8,N],[13,R[672],E,"IBCR4B - Current BCR4, Connection SA4B (A)",8,N],[13,R[673],E,"TBCR4A - Array Temp, Connector SA4A (*C)",8,N],[13,R[674],E,"TBCR4B - Array Temp, Connector SA4B (*C)",8,N],[13,R[675],E,"SDBCR4A - Sun Detector, Connector SA4A (W/m^2)",8,N],[13,R[676],E,"SDBCR4B - Sun Detector, Connector SA4B (W/m^2)",8,N],[13,R[677],E,"VBCR5 - Voltage Feeding BCR5 (V)",8,N],[13,R[678],E,"IBCR5A - Current BCR5, Connection SA5A (A)",8,N],[13,R[679],E,"IBCR5B - Current BCR5, Connector SA5B (A)",8,N],[13,R[680],E,"TBCR5A - Array Temp, Connector SA5A (*C)",8,N],[13,R[681],E,"TBCR5B - Array Temp, Connector SA5B (*C)",8,N],[13,R[682],E,"SDBCR5A - Sun Detector, Connector SA5A (W/m^2)",8,N],[13,R[683],E,"SDBCR5B - Sun Detector, Connector SA5B (W/m^2)",8,N],[13,R[684],E,"VBCR6 - Voltage Feeding BCR6 (V)",8,N],[13,R[685],E,"IBCR6A - Current BCR6, Connection SA6A (A)",8,N],[13,R[686],E,"IBCR6B - Current BCR6, Connector SA6B (A)",8,N],[13,R[687],E,"TBCR6A - Array Temp, Connector SA6A (*C)",8,N],[13,R[688],E,"TBCR6B - Array Temp, Connector SA6B (*C)",8,N],[13,R[689],E,"SDBCR6A - Sun Detector, Connector SA6A (W/m^2)",8,N],[13,R[690],E,"SDBCR6B - Sun Detector, Connector SA6B (W/m^2)",8,N],[13,R[691],E,"VBCR7 - Voltage Feeding BCR7 (V)",8,N],[13,R[692],E,"IBCR7A - Current BCR7, Connection SA7A (A)",8,N],[13,R[693],E,"IBCR7B - Current BCR7, Connector SA7B (A)",8,N],[13,R[694],E,"TBCR7A - Array Temp, Connector SA7A (*C)",8,N],[13,R[695],E,"TBCR7B - Array Temp, Connector SA7B (*C)",8,N],[13,R[696],E,"SDBCR7A - Sun Detector, Connector SA7A (W/m^2)",8,N],[13,R[697],E,"SDBCR7B - Sun Detector, Connector SA7B (W/m^2)",8,N],[13,R[698],E,"VBCR8 - Voltage Feeding BCR8 (V)",8,N],[13,R[699],E,"IBCR8A - Current BCR8, Connection SA8A (A)",8,N],[13,R[700],E,"IBCR8B - Current BCR8, Connector SA8B (A)",8,N],[13,R[701],E,"TBCR8A - Array Temp, Connector SA8A (*C)",8,N],[13,R[702],E,"TBCR8B - Array Temp, Connector SA8B (*C)",8,N],[13,R[703],E,"SDBCR8A - Sun Detector, Connector SA8A (W/m^2)",8,N],[13,R[704],E,"SDBCR8B - Sun Detector, Connector SA8B (W/m^2)",8,N],[13,R[705],E,"VBCR9 - Voltage Feeding BCR9 (V)",8,N],[13,R[706],E,"IBCR9A - Current BC96, Connection SA9A (A)",8,N],[13,R[707],E,"IBCR9B - Current BCR9, Connector SA9B (A)",8,N],[13,R[708],E,"TBCR9A - Array Temp, Connector SA9A (*C)",8,N],[13,R[709],E,"TBCR9B - Array Temp, Connector SA9B (*C)",8,N],[13,R[710],E,"SDBCR9A - Sun Detector, Connector SA9A (W/m^2)",8,N],[13,R[711],E,"SDBCR9B - Sun Detector, Connector SA9B (W/m^2)",8,N],[13,R[84],E,"TLM_TBRD_DB - Board Temperature (*C)",8,N],[5,"parse",E,R[85],N,[[["type"]],[[R[86],["f64"]],["f64"]]]],[5,R[0],E,R[87],N,[[["type"]]]],[0,"MotherboardTelemetry",R[82],"Motherboard Telemetry",N,N],[4,"Type",R[93],R[83],N,N],[13,R[730],E,"VBCR1 - Voltage feeding BRC1 (V)",9,N],[13,R[731],E,"IBCR1A - Current BCR1, Connector SA1A (A)",9,N],[13,R[732],E,"IBCR1B - Current BCR1, Connection SA1B (A)",9,N],[13,R[733],E,"TBCR1A - Array Temp, Connector SA1A (*C)",9,N],[13,R[734],E,"TBCR1B - Array Temp, Connector SA1B (*C)",9,N],[13,R[735],E,"SDBCR1A - Sun Detector, Connector SA1A (W/m^2)",9,N],[13,R[736],E,"SDBCR1B - Sun Detector, Connector SA1B (W/m^2)",9,N],[13,R[737],E,"VBCR2 - Voltage Feeding BCR2 (V)",9,N],[13,R[738],E,"IBCR2A - Current BCR2, Connection SA2A (A)",9,N],[13,R[739],E,"IBCR2B - Current BCR2, Connector SA2B (A)",9,N],[13,R[740],E,"TBCR2A - Array Temp, Connector SA2A (*C)",9,N],[13,R[741],E,"TBCR2B - Array Temp, Connector SA2B (*C)",9,N],[13,R[742],E,"SDBCR2A - Sun Detector, Connector SA2A (W/m^2)",9,N],[13,R[743],E,"SDBCR2B - Sun Detector, Connector SA2B (W/m^2)",9,N],[13,R[744],E,"VBCR3 - Voltage Feeding BCR3 (V)",9,N],[13,R[745],E,"IBCR3A - Current BCR3, Connection SA3A (A)",9,N],[13,R[746],E,"IBCR3B - Current BCR3, Connector SA3B (A)",9,N],[13,R[747],E,"TBCR3A - Array Temp, Connector SA3A (*C)",9,N],[13,R[748],E,"TBCR3B - Array Temp, Connector SA3B (*C)",9,N],[13,R[749],E,"SDBCR3A - Sun Detector, Connector SA3A (W/m^2)",9,N],[13,R[750],E,"SDBCR3B - Sun Detector, Connector SA3B (W/m^2)",9,N],[13,R[751],E,"IIDIODE_OUT - BCR Output Current (mA)",9,N],[13,R[752],E,"VIDIODE_OUT - BCR Output Voltage (V)",9,N],[13,R[753],E,"I3V3_DRW - 3V3 Current Draw of EPS (A)",9,N],[13,R[754],E,"I5V_DRW - 5V Current Draw of EPS (A)",9,N],[13,R[755],E,"IPCM12V - Output Current of 12V bus (mA)",9,N],[13,R[756],E,"VPCM12V - Output Voltage of 12V bus (V)",9,N],[13,R[757],E,"IPCMBATV - Output Current of Battery Bus (mA)",9,N],[13,R[758],E,"VPCMBATV - Output Voltage of Battery Bus (V)",9,N],[13,R[759],E,"IPCM5V - Output Current of 5V bus (mA)",9,N],[13,R[760],E,"VPCM5V - Output Voltage of 5V bus (V)",9,N],[13,R[761],E,"IPCM3V3 - Output Current of 3.3V Bus (mA)",9,N],[13,R[762],E,"VPCM3V3 - Output Voltage of 3.3V Bus (V)",9,N],[13,R[763],E,"VSW1 - Output Voltage Switch 1 (V)",9,N],[13,R[764],E,"ISW1 - Output Current Switch 1 (A)",9,N],[13,R[765],E,"VSW2 - Output Voltage Switch 2 (V)",9,N],[13,R[766],E,"ISW2 - Output Current Switch 2 (A)",9,N],[13,R[767],E,"VSW3 - Output Voltage Switch 3 (V)",9,N],[13,R[768],E,"ISW3 - Output Current Switch 3 (A)",9,N],[13,R[769],E,"VSW4 - Output Voltage Switch 4 (V)",9,N],[13,R[770],E,"ISW4 - Output Current Switch 4 (A)",9,N],[13,R[771],E,"VSW5 - Output Voltage Switch 5 (V)",9,N],[13,R[772],E,"ISW5 - Output Current Switch 5 (A)",9,N],[13,R[773],E,"VSW6 - Output Voltage Switch 6 (V)",9,N],[13,R[774],E,"ISW6 - Output Current Switch 6 (A)",9,N],[13,R[775],E,"VSW7 - Output Voltage Switch 7 (V)",9,N],[13,R[776],E,"ISW7 - Output Current Switch 7 (A)",9,N],[13,R[777],E,"VSW8 - Output Voltage Switch 8 (V)",9,N],[13,R[778],E,"ISW8 - Output Current Switch 8 (A)",9,N],[13,R[779],E,"VSW9 - Output Voltage Switch 9 (V)",9,N],[13,R[780],E,"ISW9 - Output Current Switch 9 (A)",9,N],[13,R[781],E,"VSW10 - Output Voltage Switch 10 (V)",9,N],[13,R[782],E,"ISW10 - Output Current Switch 10 (A)",9,N],[13,R[84],E,"TBRD - Board Temperature (*C)",9,N],[5,"parse",E,R[85],N,[[["type"]],[[R[86],["f64"]],["f64"]]]],[5,R[0],E,R[87],N,[[["type"]]]],[0,"ResetTelemetry",R[82],"Reset Telemetry",N,N],[3,"Data",R[94],"Common Reset Telemetry Structure",N,N],[12,R[79],E,"Motherboard telemetry value",10,N],[12,R[80],E,"Optional daughterboard telemetry value",10,N],[4,"Type",E,"Reset Telemetry Variants",N,N],[13,"BrownOut",E,"Get Number of Brown-out Resets",11,N],[13,R[783],E,"Get Number of Automatic Software Resets If the on-board…",11,N],[13,"Manual",E,"Get Number of Manual Resets This is the count of the…",11,N],[13,"Watchdog",E,"Get Number of Communications Watchdog Resets The device…",11,N],[5,R[0],E,R[87],N,[[["type"]]]],[5,"parse",E,"Parses ResetTelemetry message",N,[[],[[R[86],["data"]],["data"]]]],[8,R[127],R[82],"Trait defining expected functionality for Clyde 3g EPS",N,N],[10,R[95],E,R[96],12,[[["self"]],[[R[86],[R[88]]],[R[88]]]]],[10,R[97],E,R[98],12,[[["self"]],[[R[89]],[R[86],[R[89]]]]]],[10,R[99],E,R[100],12,[[["self"]],[[R[90]],[R[86],[R[90]]]]]],[10,R[101],E,R[102],12,[[["self"]],[[R[91]],[R[86],[R[91]]]]]],[10,R[103],E,R[104],12,[[["self"]],[R[86]]]],[10,R[105],E,R[106],12,[[["self"]],[R[86]]]],[10,R[107],E,R[108],12,[[["self"],["type"]],[[R[86],["f64"]],["f64"]]]],[10,R[109],E,R[110],12,[[["self"],["type"]],[[R[86],["f64"]],["f64"]]]],[10,R[111],E,R[112],12,[[["self"],["type"]],[["data"],[R[86],["data"]]]]],[10,R[113],E,R[114],12,[[["self"],["u8"]],[R[86]]]],[10,R[115],E,R[116],12,[[["self"]],[[R[86],["u8"]],["u8"]]]],[10,R[117],E,R[118],12,[[["self"],["vec",["u8"]],["u8"]],[R[86]]]],[14,"make_telemetry",E,"Macro for generating `Type` enum, `parse` and `command`…",N,N],[14,"make_reset_telemetry",E,"Macro for generating `ResetType` enum and `command`…",N,N],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,R[43],R[92],E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,R[43],R[93],E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[9],E,E,9,[[[U]],[R[1]]]],[11,R[10],E,E,9,[[],[R[1]]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[24]]]],[11,R[43],R[94],E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[[U]],[R[1]]]],[11,R[10],E,E,10,[[],[R[1]]]],[11,R[11],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[24]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[[U]],[R[1]]]],[11,R[10],E,E,11,[[],[R[1]]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[24]]]],[11,R[95],R[82],R[96],7,[[["self"]],[[R[86],[R[88]]],[R[88]]]]],[11,R[97],E,R[98],7,[[["self"]],[[R[89]],[R[86],[R[89]]]]]],[11,R[99],E,R[100],7,[[["self"]],[[R[90]],[R[86],[R[90]]]]]],[11,R[101],E,R[102],7,[[["self"]],[[R[91]],[R[86],[R[91]]]]]],[11,R[103],E,R[104],7,[[["self"]],[R[86]]]],[11,R[105],E,R[106],7,[[["self"]],[R[86]]]],[11,R[107],E,R[108],7,[[["self"],["type"]],[[R[86],["f64"]],["f64"]]]],[11,R[109],E,R[110],7,[[["self"],["type"]],[[R[86],["f64"]],["f64"]]]],[11,R[111],E,R[112],7,[[["self"],["type"]],[["data"],[R[86],["data"]]]]],[11,R[113],E,R[114],7,[[["self"],["u8"]],[R[86]]]],[11,R[115],E,R[116],7,[[["self"]],[[R[86],["u8"]],["u8"]]]],[11,R[117],E,R[118],7,[[["self"],["vec",["u8"]],["u8"]],[R[86]]]],[11,R[382],E,E,6,[[],[R[81]]]],[11,R[382],E,E,1,[[],["self"]]],[11,"clone",E,E,6,[[["self"]],[R[81]]]],[11,"clone",E,E,0,[[["self"]],[R[88]]]],[11,"clone",E,E,1,[[["self"]],[R[89]]]],[11,"clone",E,E,5,[[["self"]],[R[119]]]],[11,"clone",E,E,2,[[["self"]],[R[91]]]],[11,"clone",E,E,3,[[["self"]],["version"]]],[11,"clone",E,E,4,[[["self"]],[R[90]]]],[11,"clone",R[92],E,8,[[["self"]],["type"]]],[11,"clone",R[93],E,9,[[["self"]],["type"]]],[11,"clone",R[94],E,10,[[["self"]],["data"]]],[11,"clone",E,E,11,[[["self"]],["type"]]],[11,R[387],R[82],E,6,[[["self"],[R[81]]],[[R[32],[R[120]]],[R[120]]]]],[11,"lt",E,E,6,[[["self"],[R[81]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[81]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[81]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[81]]],["bool"]]],[11,"extend",E,E,6,[[["self"],[R[121]]]]],[11,"eq",E,E,6,[[["self"],[R[81]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[81]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[88]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[88]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[89]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[89]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[119]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[91]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[91]]],["bool"]]],[11,"eq",E,E,3,[[["self"],["version"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["version"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[90]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[90]]],["bool"]]],[11,"eq",R[92],E,8,[[["self"],["type"]],["bool"]]],[11,"eq",R[93],E,9,[[["self"],["type"]],["bool"]]],[11,"eq",R[94],E,10,[[["self"],["data"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["data"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["type"]],["bool"]]],[11,"cmp",R[82],E,6,[[["self"],[R[81]]],[R[120]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",R[92],E,8,[[["self"],["__h"]]]],[11,"hash",R[93],E,9,[[["self"],["__h"]]]],[11,"hash",R[94],E,11,[[["self"],["__h"]]]],[11,"sub",R[82],R[389],6,[[[R[81]]],[R[81]]]],[11,R[390],E,R[391],6,[[["self"],[R[81]]]]],[11,"not",E,R[392],6,[[],[R[81]]]],[11,"bitand",E,R[393],6,[[[R[81]]],[R[81]]]],[11,"bitor",E,R[394],6,[[[R[81]]],[R[81]]]],[11,"bitxor",E,R[395],6,[[[R[81]]],[R[81]]]],[11,R[396],E,R[397],6,[[["self"],[R[81]]]]],[11,R[398],E,R[399],6,[[["self"],[R[81]]]]],[11,R[400],E,R[401],6,[[["self"],[R[81]]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[92],E,8,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[93],E,9,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[94],E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[19]]],[R[1]]]],[11,R[402],R[82],E,6,[[[R[121]]],[R[81]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]]],"p":[[3,R[122]],[3,R[78]],[3,R[123]],[3,"Version"],[3,R[124]],[4,R[125]],[3,R[126]],[3,"Eps"],[4,"Type"],[4,"Type"],[3,"Data"],[4,"Type"],[8,R[127]]]};
searchIndex["clyde_3g_eps_service"]={"doc":"Service for interacting with a Clyde Space 3G EPS","i":[[0,"models",R[793],"EPS system components",N,N],[3,R[805],R[669],R[668],N,N],[12,"errors",E,"Any errors which occurred during query",0,N],[12,R[555],E,"Success or fail status of query",0,N],[3,R[579],E,"System power status",N,N],[12,R[79],E,"Motherboard power status",1,N],[12,R[80],E,"Daughterboard power status",1,N],[4,R[590],E,R[668],N,N],[13,"On",E,R[608],2,N],[13,"Off",E,"System is off",2,N],[4,R[611],E,R[612],N,N],[13,R[567],E,R[613],3,N],[13,R[614],E,R[615],3,N],[0,"board_status",E,"Data returned by `boardStatus` telemetry query",N,N],[3,R[806],R[795],"Board status flags",N,N],[12,R[79],E,"Status flags for the motherboard",4,N],[12,R[80],E,"Status flags for the daughterboard",4,N],[0,"daughterboard_telemetry",R[669],"Data returned by `daughterboardTelemetry` telemetry query",N,N],[3,R[584],R[796],"Daughterboard telemetry structure",N,N],[4,"Type",E,"Daughterboard telemetry values",N,N],[13,R[670],E,"$type",5,N],[13,R[671],E,"$type",5,N],[13,R[672],E,"$type",5,N],[13,R[673],E,"$type",5,N],[13,R[674],E,"$type",5,N],[13,R[675],E,"$type",5,N],[13,R[676],E,"$type",5,N],[13,R[677],E,"$type",5,N],[13,R[678],E,"$type",5,N],[13,R[679],E,"$type",5,N],[13,R[680],E,"$type",5,N],[13,R[681],E,"$type",5,N],[13,R[682],E,"$type",5,N],[13,R[683],E,"$type",5,N],[13,R[684],E,"$type",5,N],[13,R[685],E,"$type",5,N],[13,R[686],E,"$type",5,N],[13,R[687],E,"$type",5,N],[13,R[688],E,"$type",5,N],[13,R[689],E,"$type",5,N],[13,R[690],E,"$type",5,N],[13,R[691],E,"$type",5,N],[13,R[692],E,"$type",5,N],[13,R[693],E,"$type",5,N],[13,R[694],E,"$type",5,N],[13,R[695],E,"$type",5,N],[13,R[696],E,"$type",5,N],[13,R[697],E,"$type",5,N],[13,R[698],E,"$type",5,N],[13,R[699],E,"$type",5,N],[13,R[700],E,"$type",5,N],[13,R[701],E,"$type",5,N],[13,R[702],E,"$type",5,N],[13,R[703],E,"$type",5,N],[13,R[704],E,"$type",5,N],[13,R[705],E,"$type",5,N],[13,R[706],E,"$type",5,N],[13,R[707],E,"$type",5,N],[13,R[708],E,"$type",5,N],[13,R[709],E,"$type",5,N],[13,R[710],E,"$type",5,N],[13,R[711],E,"$type",5,N],[13,R[84],E,"$type",5,N],[0,"last_error",R[669],"Data returned by `lastEpsError` query",N,N],[3,R[807],R[797],"Last command status for the EPS",N,N],[12,R[79],E,"Last command status for the motherboard",6,N],[12,R[80],E,"Last command status for the daughterboard",6,N],[4,"Error",E,"Error variants which can be returned by the EPS",N,N],[13,"None",E,"No errors were encountered",7,N],[13,"BadCRC",E,"CRC does not match data",7,N],[13,R[712],E,R[713],7,N],[13,R[714],E,R[715],7,N],[13,R[716],E,R[717],7,N],[13,R[718],E,R[719],7,N],[13,R[720],E,R[721],7,N],[13,R[722],E,"There was an error with teh ADC acquisition",7,N],[13,R[723],E,R[724],7,N],[13,R[725],E,R[726],7,N],[13,R[441],E,R[727],7,N],[13,R[728],E,R[729],7,N],[0,"motherboard_telemetry",R[669],"Data returned by `motherboardTelemetry` telemetry query",N,N],[3,R[584],R[798],"Motherboard telemetry structure",N,N],[4,"Type",E,"Motherboard telemetry values",N,N],[13,R[730],E,"$type",8,N],[13,R[731],E,"$type",8,N],[13,R[732],E,"$type",8,N],[13,R[733],E,"$type",8,N],[13,R[734],E,"$type",8,N],[13,R[735],E,"$type",8,N],[13,R[736],E,"$type",8,N],[13,R[737],E,"$type",8,N],[13,R[738],E,"$type",8,N],[13,R[739],E,"$type",8,N],[13,R[740],E,"$type",8,N],[13,R[741],E,"$type",8,N],[13,R[742],E,"$type",8,N],[13,R[743],E,"$type",8,N],[13,R[744],E,"$type",8,N],[13,R[745],E,"$type",8,N],[13,R[746],E,"$type",8,N],[13,R[747],E,"$type",8,N],[13,R[748],E,"$type",8,N],[13,R[749],E,"$type",8,N],[13,R[750],E,"$type",8,N],[13,R[751],E,"$type",8,N],[13,R[752],E,"$type",8,N],[13,R[753],E,"$type",8,N],[13,R[754],E,"$type",8,N],[13,R[755],E,"$type",8,N],[13,R[756],E,"$type",8,N],[13,R[757],E,"$type",8,N],[13,R[758],E,"$type",8,N],[13,R[759],E,"$type",8,N],[13,R[760],E,"$type",8,N],[13,R[761],E,"$type",8,N],[13,R[762],E,"$type",8,N],[13,R[763],E,"$type",8,N],[13,R[764],E,"$type",8,N],[13,R[765],E,"$type",8,N],[13,R[766],E,"$type",8,N],[13,R[767],E,"$type",8,N],[13,R[768],E,"$type",8,N],[13,R[769],E,"$type",8,N],[13,R[770],E,"$type",8,N],[13,R[771],E,"$type",8,N],[13,R[772],E,"$type",8,N],[13,R[773],E,"$type",8,N],[13,R[774],E,"$type",8,N],[13,R[775],E,"$type",8,N],[13,R[776],E,"$type",8,N],[13,R[777],E,"$type",8,N],[13,R[778],E,"$type",8,N],[13,R[779],E,"$type",8,N],[13,R[780],E,"$type",8,N],[13,R[781],E,"$type",8,N],[13,R[782],E,"$type",8,N],[13,R[84],E,"$type",8,N],[0,"reset_telemetry",R[669],"Data returned by `reset` telemetry query",N,N],[3,"Data",R[799],"Reset count telemetry structure used by each reset type",N,N],[12,R[79],E,"Motherboard reset count",9,N],[12,R[80],E,"Daughterboard reset count",9,N],[3,R[584],E,"High-level reset telemetry structure",N,N],[4,"Type",E,"Reset types",N,N],[13,"BrownOut",E,"Brown-out reset",10,N],[13,R[783],E,"Reset automatically triggered by the EPS when it…",10,N],[13,"Manual",E,R[784],10,N],[13,"Watchdog",E,"Reset triggered by the I2C watchdog",10,N],[0,R[538],R[669],"Main module used for interacting with the underlying EPS API",N,N],[3,R[808],R[800],"Main structure for controlling and accessing system…",N,N],[12,"eps",E,"Underlying EPS object",11,N],[12,"last_mutation",E,"Last mutation executed",11,N],[12,"errors",E,"Errors accumulated over all queries and mutations",11,N],[12,"watchdog_handle",E,"Watchdog kicking thread handle",11,N],[12,R[89],E,"Last known checksum of EPS ROM",11,N],[4,R[809],E,"Enum for tracking the last mutation executed",N,N],[13,"None",E,"No mutation has been run since the service was started",12,N],[13,"Noop",E,"No-op",12,N],[13,"ManualReset",E,R[784],12,N],[13,"RawCommand",E,"Raw passthrough command",12,N],[13,"ResetWatchdog",E,"Watchdog reset",12,N],[13,"SetWatchdogPeriod",E,"Set watchdog period",12,N],[13,R[562],E,"Hardware test",12,N],[11,"new",E,"Create a new subsystem instance for the service to use",11,[[["box",[R[785]]],[R[785]]],[R[86]]]],[11,R[170],E,"Create the underlying EPS object and then create a new…",11,[[["str"]],[R[86]]]],[11,R[107],E,"Get the requested telemetry item from the motherboard",11,[[["self"],["type"]],[[R[16]],[R[1],["f64",R[16]]],["f64"]]]],[11,R[109],E,"Get the requested telemetry item from the daughterboard",11,[[["self"],["type"]],[[R[16]],[R[1],["f64",R[16]]],["f64"]]]],[11,R[111],E,"Get the specific type of reset counts",11,[[["self"],["type"]],[[R[16]],["data"],[R[1],["data",R[16]]]]]],[11,R[115],E,"Get the current watchdog period setting",11,[[["self"]],[[R[1],["u8",R[16]]],[R[16]],["u8"]]]],[11,"get_version",E,"Get the system version information",11,[[["self"]],[[R[1],[R[786],R[16]]],[R[786]],[R[16]]]]],[11,R[95],E,"Get the current board status",11,[[["self"]],[[R[16]],[R[787]],[R[1],[R[787],R[16]]]]]],[11,"get_last_eps_error",E,"Get the last error the EPS encountered",11,[[["self"]],[[R[1],[R[788],R[16]]],[R[16]],[R[788]]]]],[11,"get_power",E,"Get the current power state of the EPS",11,[[["self"]],[[R[1],[R[789],R[16]]],[R[16]],[R[789]]]]],[11,R[103],E,"Trigger a manual reset of the EPS",11,[[["self"]],[[R[16]],[R[1],[R[790],R[16]]],[R[790]]]]],[11,"reset_watchdog",E,"Kick the I2C watchdog",11,[[["self"]],[[R[16]],[R[1],[R[790],R[16]]],[R[790]]]]],[11,"set_watchdog_period",E,"Set the I2C watchdog timeout period",11,[[["self"],["u8"]],[[R[16]],[R[1],[R[790],R[16]]],[R[790]]]]],[11,R[117],E,"Pass raw command values through to the EPS",11,[[["self"],["vec",["u8"]],["u8"]],[[R[16]],[R[1],[R[790],R[16]]],[R[790]]]]],[11,"test_hardware",E,"Run hardware tests to check system health",11,[[["self"]],[[R[16]],[R[1],[R[790],R[16]]],[R[790]]]]],[11,"set_last_mutation",E,"Record the last mutation executed by the service",11,[[["self"],[R[804]]]]],[11,"get_errors",E,"Fetch all errors since the last time this function was…",11,[[["self"]],[["vec",[R[16]]],[R[86],["vec"]]]]],[0,"version",R[669],"Data returned by the `version` telemetry query",N,N],[3,R[810],R[801],"Board version informaton",N,N],[12,"revision",E,"Revision number of the firmware",13,N],[12,R[791],E,"Firmware version number",13,N],[3,R[811],E,"High-level version data structure",N,N],[12,R[79],E,R[792],14,N],[12,R[80],E,"Daugtherboard version information",14,N],[0,"schema",R[793],"Service schema",N,N],[0,"mutation",R[794],"Service mutations",N,N],[3,"Root",R[802],"Top-level mutation root structure",N,N],[0,"query",R[794],"Service queries",N,N],[3,R[584],R[803],"Telemetry query structure",N,N],[3,"Root",E,"Top-level query root structure",N,N],[6,"Context",R[794],"Service context structure used to allow GraphQL requests…",N,N],[11,"into",R[669],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[43],R[795],E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,R[479],E,E,4,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,4,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,4,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,4,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",R[796],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[9],E,E,15,[[[U]],[R[1]]]],[11,R[10],E,E,15,[[],[R[1]]]],[11,R[11],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[R[24]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,R[494],E,E,5,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,5,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,5,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,5,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,5,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[43],R[797],E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,R[479],E,E,6,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,6,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,6,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,6,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,R[479],E,E,7,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,7,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,7,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,7,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[798],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[9],E,E,16,[[[U]],[R[1]]]],[11,R[10],E,E,16,[[],[R[1]]]],[11,R[11],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[R[24]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,R[494],E,E,8,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,8,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,8,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,8,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,8,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[43],R[799],E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[9],E,E,9,[[[U]],[R[1]]]],[11,R[10],E,E,9,[[],[R[1]]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[24]]]],[11,R[479],E,E,9,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,9,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,9,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,9,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[9],E,E,17,[[[U]],[R[1]]]],[11,R[10],E,E,17,[[],[R[1]]]],[11,R[11],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[R[24]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[[U]],[R[1]]]],[11,R[10],E,E,10,[[],[R[1]]]],[11,R[11],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[24]]]],[11,R[494],E,E,10,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,10,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,10,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,10,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,10,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[43],R[800],E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[[U]],[R[1]]]],[11,R[10],E,E,11,[[],[R[1]]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[24]]]],[11,R[479],E,E,11,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,11,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,11,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,11,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[9],E,E,12,[[[U]],[R[1]]]],[11,R[10],E,E,12,[[],[R[1]]]],[11,R[11],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[R[24]]]],[11,R[494],E,E,12,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,12,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[43],R[801],E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[9],E,E,13,[[[U]],[R[1]]]],[11,R[10],E,E,13,[[],[R[1]]]],[11,R[11],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[R[24]]]],[11,R[479],E,E,13,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,13,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,13,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,13,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[9],E,E,14,[[[U]],[R[1]]]],[11,R[10],E,E,14,[[],[R[1]]]],[11,R[11],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[R[24]]]],[11,R[479],E,E,14,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,14,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,14,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,14,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",R[802],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[9],E,E,18,[[[U]],[R[1]]]],[11,R[10],E,E,18,[[],[R[1]]]],[11,R[11],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[R[24]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",R[803],E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[9],E,E,19,[[[U]],[R[1]]]],[11,R[10],E,E,19,[[],[R[1]]]],[11,R[11],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[R[24]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[9],E,E,20,[[[U]],[R[1]]]],[11,R[10],E,E,20,[[],[R[1]]]],[11,R[11],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[R[24]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",R[796],E,5,[[],["daughterboardtelemetrytype"]]],[11,"into",R[798],E,8,[[],["motherboardtelemetrytype"]]],[11,"into",R[799],E,10,[[],["resettelemetrytype"]]],[11,"clone",R[795],E,4,[[["self"]],[R[787]]]],[11,"clone",R[796],E,5,[[["self"]],["type"]]],[11,"clone",R[797],E,7,[[["self"]],["error"]]],[11,"clone",E,E,6,[[["self"]],[R[788]]]],[11,"clone",R[798],E,8,[[["self"]],["type"]]],[11,"clone",R[799],E,9,[[["self"]],["data"]]],[11,"clone",E,E,10,[[["self"]],["type"]]],[11,"clone",R[800],E,12,[[["self"]],[R[804]]]],[11,"clone",E,E,11,[[["self"]],[R[538]]]],[11,"clone",R[801],E,13,[[["self"]],["versionnum"]]],[11,"clone",E,E,14,[[["self"]],[R[786]]]],[11,"eq",R[796],E,5,[[["self"],["type"]],["bool"]]],[11,"eq",R[798],E,8,[[["self"],["type"]],["bool"]]],[11,"eq",R[799],E,10,[[["self"],["type"]],["bool"]]],[11,"eq",R[800],E,12,[[["self"],[R[804]]],["bool"]]],[11,"hash",R[796],E,5,[[["self"],["__h"]]]],[11,"hash",R[798],E,8,[[["self"],["__h"]]]],[11,"hash",R[799],E,10,[[["self"],["__h"]]]],[11,"hash",R[800],E,12,[[["self"],["__h"]]]],[11,"fmt",R[795],E,4,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[796],E,5,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[797],E,7,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[798],E,8,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[799],E,9,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[800],E,12,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[801],E,13,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[19]]],[R[1]]]],[11,R[512],R[669],E,2,[[["self"]],[R[513]]]],[11,R[512],E,E,3,[[["self"]],[R[513]]]],[11,R[512],R[796],E,5,[[["self"]],[R[513]]]],[11,R[512],R[797],E,7,[[["self"]],[R[513]]]],[11,R[512],R[798],E,8,[[["self"]],[R[513]]]],[11,R[512],R[799],E,10,[[["self"]],[R[513]]]],[11,R[512],R[800],E,12,[[["self"]],[R[513]]]],[11,R[514],R[669],E,2,[[[R[513]]],[[R[32],[R[570]]],[R[570]]]]],[11,R[514],E,E,3,[[[R[513]]],[[R[626]],[R[32],[R[626]]]]]],[11,R[514],R[796],E,5,[[[R[513]]],[[R[32],["type"]],["type"]]]],[11,R[514],R[797],E,7,[[[R[513]]],[[R[32],["error"]],["error"]]]],[11,R[514],R[798],E,8,[[[R[513]]],[[R[32],["type"]],["type"]]]],[11,R[514],R[799],E,10,[[[R[513]]],[[R[32],["type"]],["type"]]]],[11,R[514],R[800],E,12,[[[R[513]]],[[R[32],[R[804]]],[R[804]]]]],[11,"name",R[669],E,0,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,0,[[["self"]],[R[16]]]],[11,"meta",E,E,0,[[[R[515]]],[R[516]]]],[11,R[547],E,E,0,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,2,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,2,[[[R[515]]],[R[516]]]],[11,R[576],E,E,2,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,1,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,1,[[["self"]],[R[16]]]],[11,"meta",E,E,1,[[[R[515]]],[R[516]]]],[11,R[547],E,E,1,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,3,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,3,[[[R[515]]],[R[516]]]],[11,R[576],E,E,3,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",R[795],E,4,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,4,[[["self"]],[R[16]]]],[11,"meta",E,E,4,[[[R[515]]],[R[516]]]],[11,R[547],E,E,4,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",R[796],E,5,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,5,[[[R[515]]],[R[516]]]],[11,R[576],E,E,5,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,15,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,15,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,15,[[["self"]],[R[16]]]],[11,R[547],E,E,15,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]],[11,"name",R[797],E,7,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,7,[[[R[515]]],[R[516]]]],[11,R[576],E,E,7,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,6,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,6,[[["self"]],[R[16]]]],[11,"meta",E,E,6,[[[R[515]]],[R[516]]]],[11,R[547],E,E,6,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",R[798],E,8,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,8,[[[R[515]]],[R[516]]]],[11,R[576],E,E,8,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,16,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,16,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,16,[[["self"]],[R[16]]]],[11,R[547],E,E,16,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]],[11,"name",R[799],E,9,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,9,[[["self"]],[R[16]]]],[11,"meta",E,E,9,[[[R[515]]],[R[516]]]],[11,R[547],E,E,9,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,10,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,10,[[[R[515]]],[R[516]]]],[11,R[576],E,E,10,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,17,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,17,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,17,[[["self"]],[R[16]]]],[11,R[547],E,E,17,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]],[11,"name",R[800],E,12,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,12,[[[R[515]]],[R[516]]]],[11,R[576],E,E,12,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",R[801],E,13,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,13,[[["self"]],[R[16]]]],[11,"meta",E,E,13,[[[R[515]]],[R[516]]]],[11,R[547],E,E,13,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,14,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,14,[[["self"]],[R[16]]]],[11,"meta",E,E,14,[[[R[515]]],[R[516]]]],[11,R[547],E,E,14,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",R[802],E,18,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,18,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,18,[[["self"]],[R[16]]]],[11,R[547],E,E,18,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]],[11,"name",R[803],E,19,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,19,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,19,[[["self"]],[R[16]]]],[11,R[547],E,E,19,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]],[11,"name",E,E,20,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,20,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,20,[[["self"]],[R[16]]]],[11,R[547],E,E,20,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]]],"p":[[3,R[805]],[3,R[579]],[4,R[590]],[4,R[611]],[3,R[806]],[4,"Type"],[3,R[807]],[4,"Error"],[4,"Type"],[3,"Data"],[4,"Type"],[3,R[808]],[4,R[809]],[3,R[810]],[3,R[811]],[3,R[584]],[3,R[584]],[3,R[584]],[3,"Root"],[3,R[584]],[3,"Root"]]};
searchIndex["comms_service"]={"doc":"This library allows users to define and start…","i":[[3,R[827],"comms_service","Struct that holds configuration data to allow users to set…",N,N],[12,"read",E,"Function pointer to a function that defines how to read…",0,N],[12,"write",E,"Function pointers to functions that define methods for…",0,N],[12,"read_conn",E,"Gateway connection to read from.",0,N],[12,"write_conn",E,"Gateway connection to write to.",0,N],[12,R[812],E,"Maximum number of concurrent message handlers allowed.",0,N],[12,"timeout",E,R[815],0,N],[12,"ip",E,"IP address of the computer that is running the…",0,N],[12,R[813],E,R[814],0,N],[3,R[832],E,"Struct that enables users to start the Communication…",N,N],[3,R[828],E,"Generic telemetry collected by the communication service.",N,N],[12,"errors",E,"Errors that have occured within the communication service.",1,N],[12,"failed_packets_up",E,"Number of bad uplink packets.",1,N],[12,"failed_packets_down",E,"Number of bad downlink packets.",1,N],[12,"packets_up",E,"Number of packets successfully uplinked.",1,N],[12,"packets_down",E,"Number of packets successfully downlinked.",1,N],[3,R[829],E,"A struct that holds useful configuration options to use in…",N,N],[12,R[812],E,"The maximum number of concurrent message handlers allowed…",2,N],[12,R[813],E,R[814],2,N],[12,"timeout",E,R[815],2,N],[12,"ip",E,"Required. IP address on which comms service will listen.",2,N],[3,R[834],E,"Structure used to implement SpacePacket version of…",N,N],[4,R[830],E,"This enum defines all errors that can occur within the…",N,N],[13,R[523],E,"A component of the service's configuration was incorrect",3,N],[13,"MutexPoisoned",E,"The mutex guarding the telemetry cache has been poisoned.",3,N],[13,"HeaderParsing",E,"A UDP header was unable to be correctly parsed.",3,N],[13,R[835],E,"The checksum of a UDP packet does not match the one found…",3,N],[13,"ParameterLengthMismatch",E,"The number of `write` methods and the number of downlink…",3,N],[13,"NoAvailablePorts",E,"All of the ports allocated for handling packets are binded…",3,N],[13,"NoReadData",E,"No data available for reading",3,N],[13,"ParsingError",E,"An error was encountered when parsing a packet",3,N],[13,R[33],E,"Generic error encountered",3,N],[13,"UnknownPayloadType",E,"Unknown payload type encountered",3,N],[4,R[831],E,"Enum representing the different payload types handled by…",N,N],[13,"GraphQL",E,"Packet intended for GraphQL request/response",4,N],[13,"UDP",E,"Packet intended for UDP passthrough",4,N],[13,"Unknown",E,"Unknown type",4,N],[11,"new",E,"Builds a new configuration for a specific `comms-service`.…",2,[[["config"]],[R[816]]]],[11,"new",E,"Creates a new instance of the CommsControlBlock",0,[[["arc",["readfn"]],[R[32],["arc"]],["vec",["arc"]],["arc",["writefn"]],[R[821]],[R[70]]],[R[816]]]],[11,"start",E,"Starts an instance of the Communication Service and its…",5,[[[R[822]],["arc"],["send"],["clone"]],[R[816]]]],[6,"ReadFn",E,"Type definition for a \"read\" function pointer.",N,N],[6,"WriteFn",E,"Type definition for a \"write\" function pointer.",N,N],[6,"CommsResult",E,"Result returned by the `comms-service`.",N,N],[17,"DEFAULT_MAX_HANDLERS",E,"Default maximum number of message handlers",N,N],[17,"DEFAULT_TIMEOUT",E,"Default message handler timeout",N,N],[8,R[833],E,"Generic LinkPacket trait which defines the internal packet…",N,N],[10,"parse",E,"Parse packet from raw bytes",6,[[],[[R[816],["box"]],["box"]]]],[10,"build",E,"Build packet from necessary parts",6,[[[R[817]],["u16"],["u64"]],[[R[816],["box"]],["box"]]]],[10,"to_bytes",E,"Create a bytes representation of the packet",6,[[["self"]],[[R[816],["vec"]],["vec",["u8"]]]]],[10,R[818],E,"The Command ID of the packet",6,[[["self"]],["u64"]]],[10,"payload",E,"The payload or data of the packet",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[10,R[819],E,"The type of payload contained in the packet",6,[[["self"]],[R[817]]]],[10,R[820],E,"The Destination port of the packet",6,[[["self"]],["u16"]]],[11,"validate",E,R[825],6,[[["self"]],["bool"]]],[11,"max_size",E,R[826],6,[[],[R[7]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[479],E,E,0,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[479],E,E,2,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[31],E,E,3,[[["self"]],[R[16]]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,R[45],E,E,3,[[["self"]],["fail"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"build",E,E,7,[[[R[817]],["u16"],["u64"]],[[R[816],["box"]],["box"]]]],[11,"parse",E,E,7,[[],[[R[816],["box"]],["box"]]]],[11,"to_bytes",E,E,7,[[["self"]],[[R[816],["vec"]],["vec",["u8"]]]]],[11,R[818],E,E,7,[[["self"]],["u64"]]],[11,"payload",E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[819],E,E,7,[[["self"]],[R[817]]]],[11,R[820],E,E,7,[[["self"]],["u16"]]],[11,R[382],E,E,1,[[],["commstelemetry"]]],[11,"clone",E,E,2,[[["self"]],[R[821]]]],[11,"clone",E,E,0,[[["self"]],[R[822]]]],[11,"eq",E,E,3,[[["self"],[R[823]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[823]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[824]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[824]]],["bool"]]],[11,"from",E,E,4,[[["u16"]],[R[817]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,1,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,1,[[["self"]],[R[16]]]],[11,"meta",E,E,1,[[[R[515]]],[R[516]]]],[11,R[547],E,E,1,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,R[198],E,E,2,[[["__d"]],[R[1]]]],[11,"name",E,E,3,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,3,[[["self"]],[["fail"],[R[32],["fail"]]]]],[11,R[29],E,E,3,[[["self"]],[[R[29]],[R[32],[R[29]]]]]],[11,"validate",E,R[825],6,[[["self"]],["bool"]]],[11,"max_size",E,R[826],6,[[],[R[7]]]]],"p":[[3,R[827]],[3,R[828]],[3,R[829]],[4,R[830]],[4,R[831]],[3,R[832]],[8,R[833]],[3,R[834]]]};
searchIndex["db_test"]={"doc":E,"i":[],"p":[]};
searchIndex["eps_api"]={"doc":"High level EPS API functions","i":[[4,R[25],R[27],R[25],N,N],[13,R[33],E,"Generic error condition",0,N],[13,R[473],E,R[34],0,N],[12,"cause",R[26],R[35],0,N],[12,R[36],E,R[37],0,N],[13,"ParsingFailure",R[27],"Error resulting from receiving invalid data from EPS",0,N],[12,"source",R[26],"Source where invalid data was received",0,N],[13,"CommandFailure",R[27],"Error resulting from a failure with an EPS command",0,N],[12,R[0],R[26],"EPS command which failed",0,N],[6,R[489],R[27],R[490],N,N],[11,"parsing_failure",E,"Convience function for creating an EpsError::ParsingFailure",0,[[["str"]],[R[28]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[31],E,E,0,[[["self"]],[R[16]]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[45],E,E,0,[[["self"]],["fail"]]],[11,"eq",E,E,0,[[["self"],[R[28]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[28]]],["bool"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,0,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[4,R[25]]]};
searchIndex["example_rust_c_service"]={"doc":E,"i":[],"p":[]};
searchIndex["example_rust_service"]={"doc":E,"i":[],"p":[]};
searchIndex["extern_lib"]={"doc":E,"i":[[5,"k_init_device","extern_lib",E,N,[[]]],[5,"k_terminate_device",E,E,N,[[]]],[5,"init_device",E,E,N,N],[5,"terminate_device",E,E,N,N]],"p":[]};
searchIndex["file_protocol"]={"doc":"Kubos File Transfer Protocol","i":[[4,R[133],R[134],"Errors which occur when using FileProtocol",N,N],[13,"CorruptFile",E,"A file in storage was corrupt",0,N],[13,R[152],E,"An error was encountered by the cbor protocol",0,N],[12,"err",R[135],"The specific cbor protocol error",0,N],[13,"FinalizeError",R[134],"An error was encountered when finalizing the file",0,N],[12,"cause",R[135],"The cause of the finalizing failure",0,N],[13,"HashMismatch",R[134],"A hash mismatch was found when finalizing the file",0,N],[13,"InvalidParam",E,"An invalid value was found when parsing a message",0,N],[13,R[180],E,R[181],0,N],[12,R[153],R[135],"The message which failed creation",0,N],[12,"err",E,"The underlying serde error encountered",0,N],[13,R[154],R[134],R[155],0,N],[12,"err",R[135],R[136],0,N],[13,"MissingParam",R[134],"A value was missing when parsing a message",0,N],[13,R[156],E,R[157],0,N],[12,"err",R[135],R[136],0,N],[13,"Serialize",R[134],"An error was encountered when serializing data",0,N],[12,"err",R[135],"Underlying serde error",0,N],[13,"StorageError",R[134],"An error was encountered when writing to or reading from…",0,N],[12,"action",R[135],"The action which generated the error",0,N],[12,"err",E,"The underlying std::io::Error",0,N],[13,"StorageParseError",R[134],"An error was encountered when parsing file storage data",0,N],[13,R[158],E,R[159],0,N],[13,"TransmissionError",E,"An error was encountered when transmitting",0,N],[12,R[140],R[135],"Channel where the error occurred",0,N],[12,"error_message",E,"Message from underlying error",0,N],[4,"Message",R[134],"File protocol message types",N,N],[13,"Sync",E,"TODO: Decide whether or not to keep this",1,N],[13,"Metadata",E,"Receiver should prepare a new temporary storage folder…",1,N],[13,"ReceiveChunk",E,"File data chunk message",1,N],[13,"ACK",E,"Receiver has successfully gotten all data chunks of the…",1,N],[13,"NAK",E,"Receiver is missing the specified file data chunks",1,N],[13,"ReqReceive",E,"(Client Only) Message requesting the recipient to receive…",1,N],[13,"ReqTransmit",E,"(Client Only) Message requesting the recipient to transmit…",1,N],[13,"SuccessReceive",E,"(Server Only) Recipient has successfully processed a…",1,N],[13,"SuccessTransmit",E,"(Server Only) Recipient has successfully prepared to…",1,N],[13,"Failure",E,"(Server Only) The transmit or receive request has failed…",1,N],[13,"Cleanup",E,"Request Cleanup of either whole storage directory or…",1,N],[5,R[160],E,R[161],N,[[["value"]],[[R[1],["u32",R[131]]],["u32"],[R[131]]]]],[0,"protocol",E,"File transfer protocol module",N,N],[3,R[146],R[138],"Configuration data for Protocol",N,N],[3,R[137],E,"File protocol information structure",N,N],[4,"State",E,"Current state of the file protocol transaction",N,N],[13,"Holding",E,"Neutral state, neither transmitting nor receiving",2,N],[12,"count",R[139],"Number of consecutive times the holding state has been hit",2,N],[12,"prev_state",E,"Previous state to return to once we exit the holding state",2,N],[13,"StartReceive",R[138],"Preparing to receive file chunks",2,N],[12,"path",R[139],R[141],2,N],[13,"Receiving",R[138],"Currently receiving a file",2,N],[12,R[140],R[139],R[142],2,N],[12,"hash",E,R[143],2,N],[12,"path",E,R[141],2,N],[12,"mode",E,R[144],2,N],[13,"ReceivingDone",R[138],"All file chunks have been received",2,N],[12,R[140],R[139],R[142],2,N],[12,"hash",E,R[143],2,N],[12,"path",E,R[141],2,N],[12,"mode",E,R[144],2,N],[13,"Transmitting",R[138],"Currenty transmitting a file",2,N],[13,"TransmittingDone",E,"All file chunks have been transmitted",2,N],[13,"Done",E,"Finished transmitting/receiving, thread or process may end",2,N],[11,"new",E,"Creates new ProtocolConfig struct",3,[[[R[32],["u32"]],["u32"],[R[16]],["u64"],[R[7]],["u16"],[R[32],[R[16]]]],["self"]]],[11,"new",E,"Create a new file protocol instance using an automatically…",4,[[["str"],[R[145]]],["self"]]],[11,"send",E,R[162],4,[[["self"]],[[R[1],[R[131]]],[R[131]]]]],[11,"recv",E,"Receive a file protocol message",4,[[["self"],[R[32],[R[8]]],[R[8]]],[[R[1],["value",R[131]]],["value"],[R[131]]]]],[11,R[163],E,R[164],4,[[["self"]],[[R[1],["u32",R[131]]],["u32"],[R[131]]]]],[11,"send_metadata",E,"Send a file's metadata information to the remote target",4,[[["self"],["u32"],["str"]],[[R[1],[R[131]]],[R[131]]]]],[11,"send_cleanup",E,"Send a request to cleanup the remote storage folder",4,[[["self"],["u32"],[R[16]],[R[32],[R[16]]]],[[R[1],[R[131]]],[R[131]]]]],[11,"send_export",E,"Request remote target to receive file from host",4,[[["self"],["u32"],["str"]],[[R[1],[R[131]]],[R[131]]]]],[11,"send_import",E,"Request a file from a remote target",4,[[["self"],["u32"],["str"]],[[R[1],[R[131]]],[R[131]]]]],[11,"initialize_file",E,"Prepare a file for transfer",4,[[["self"],["str"]],[[R[1],[R[131]]],[R[131]]]]],[11,R[195],E,"Listen for and process file protocol messages",4,[[["self"],[R[8]],["f"],["state"]],[[R[1],[R[131]]],[R[131]]]]],[11,"process_message",E,"Process a file protocol message",4,[[["self"],["value"],["state"]],[[R[1],["state",R[131]]],["state"],[R[131]]]]],[11,"into",R[134],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[31],E,E,0,[[["self"]],[R[16]]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[45],E,E,0,[[["self"]],["fail"]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[43],R[138],E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"clone",E,E,3,[[["self"]],[R[145]]]],[11,"clone",E,E,2,[[["self"]],["state"]]],[11,"clone",R[134],E,1,[[["self"]],[R[153]]]],[11,"eq",R[138],E,2,[[["self"],["state"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["state"]],["bool"]]],[11,"eq",R[134],E,1,[[["self"],[R[153]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[153]]],["bool"]]],[11,"from",E,E,0,[[[R[131]]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[138],E,2,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[134],E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,0,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[4,R[133]],[4,"Message"],[4,"State"],[3,R[146]],[3,R[137]]]};
searchIndex["file_service"]={"doc":E,"i":[[5,R[485],"file_service",E,N,[[[R[486]]],[[R[1],["error"]],["error"]]]]],"p":[]};
searchIndex["gomspace_p31u_api"]={"doc":"Kubos API for interacting with [GomSpace EPS Systems]","i":[[3,"Eps","gomspace_p31u_api","Structure for interacting with a GomSpace EPS System",N,N],[3,R[518],E,"EPS battery configuration structure",N,N],[12,"batt_maxvoltage",E,"Battery Max level",0,N],[12,"batt_safevoltage",E,"Safe mode level",0,N],[12,"batt_criticalvoltage",E,"Critical mode level",0,N],[12,"batt_normalvoltage",E,"Nominal mode level",0,N],[12,R[487],E,R[487],0,N],[12,R[488],E,R[488],0,N],[3,"EpsHk",E,"System telemetry fields returned from [`EpsHk`]",N,N],[12,"vboost",E,"MPPT level",1,N],[12,"vbatt",E,"Battery Voltage",1,N],[12,"curin",E,"Battery input current",1,N],[12,"cursun",E,"Sun sensor current",1,N],[12,"cursys",E,"Total system current",1,N],[12,R[487],E,R[619],1,N],[12,"curout",E,"Current outputs",1,N],[12,"output",E,"output status",1,N],[12,"output_on_delta",E,"output on delay",1,N],[12,"output_off_delta",E,"output off delay",1,N],[12,"latchup",E,"Current latchup setting",1,N],[12,"wdt_i2c_time_left",E,"i2c watchdog time left",1,N],[12,"wdt_gnd_time_left",E,"GND watchdog time left",1,N],[12,"wdt_csp_pings_left",E,"CSP watchdog",1,N],[12,"counter_wdt_i2c",E,"i2c watchdog counter",1,N],[12,"counter_wdt_gnd",E,"GND watchdog counter    ",1,N],[12,"counter_wdt_csp",E,"CSP watchdog counter",1,N],[12,"counter_boot",E,"Boot counter",1,N],[12,"temp",E,"Temperature",1,N],[12,"boot_cause",E,"Bootcause",1,N],[12,"batt_mode",E,"Battery mode",1,N],[12,"ppt_mode",E,"Power point tracking mode",1,N],[12,R[488],E,R[620],1,N],[3,R[519],E,"EPS system configuration structure",N,N],[12,"ppt_mode",E,"MPPT mode: 0: Hardware default, 1: MPPT, 2 Fixed software…",2,N],[12,"battheater_mode",E,"Batter heater mode: 0 = OFF, 1 = ON",2,N],[12,"battheater_low",E,"Battery heater low",2,N],[12,"battheater_high",E,"Battery heater high",2,N],[12,"output_normal_value",E,"Nominal output level",2,N],[12,"output_safe_value",E,"Safe model output level",2,N],[12,"output_initial_on_delay",E,"Initial power on delay",2,N],[12,"output_initial_off_delay",E,"Initial Power off delay",2,N],[12,"vboost",E,"Set MPPT level",2,N],[4,R[25],E,R[25],N,N],[13,R[33],E,"Generic error condition => EPS_ERROR",3,N],[13,R[523],E,R[524],3,N],[13,"I2cError",E,R[34],3,N],[13,"InternalError",E,"Error resulting from underlying Subsystem",3,N],[4,R[520],E,"Power state enum",N,N],[13,"Off",E,"Power Off",4,N],[13,"On",E,"Power On",4,N],[4,R[521],E,"Enum for EPS power channels",N,N],[13,"Output0",E,"EPS channel 0 => H1-47",5,N],[13,"Output1",E,"EPS channel 1 => H1-49\t    ",5,N],[13,"Output2",E,"EPS channel 2 => H1-51\t    ",5,N],[13,"Output3",E,"EPS channel 3 => H1-48    ",5,N],[13,"Output4",E,"EPS channel 4 => H1-50",5,N],[13,"Output5",E,"EPS channel 5 => H1-52    ",5,N],[13,"Output6",E,"BP4 heater switch",5,N],[13,"Output7",E,"BP4 switch",5,N],[4,R[522],E,"Enum for heater selection",N,N],[13,"BP4",E,"Heater on BP4",6,N],[13,"Onboard",E,"Heater on EPS",6,N],[13,"Both",E,"Both",6,N],[6,R[489],E,R[490],N,N],[8,"GsEps",E,"Trait used to represent the GsEps object. Allows for mock…",N,N],[10,"new",E,"Construct a new GsEps instance",7,[[["str"],["u8"]],[R[86]]]],[10,"ping",E,"Ping subsystems",7,[[["self"]],[R[86]]]],[10,"reset",E,"Reset",7,[[["self"]],[R[86]]]],[10,"reboot",E,"Reboot",7,[[["self"]],[R[86]]]],[10,R[495],E,"System configuration",7,[[["self"],[R[492]]],[R[86]]]],[10,R[496],E,"Battery configuration",7,[[["self"],[R[493]]],[R[86]]]],[10,R[497],E,"Battery configuration save",7,[[["self"]],[R[86]]]],[10,R[421],E,"Batch set EPS outputs",7,[[["self"],["u8"]],[R[86]]]],[10,R[498],E,"Set a channel on/off",7,[[["self"],[R[499]],[R[491]],["u16"]],[R[86]]]],[10,R[500],E,"Set MPPT input level",7,[[["self"],["u16"]],[R[86]]]],[10,R[501],E,R[502],7,[[["self"],["u8"]],[R[86]]]],[10,R[503],E,"Set heater configuration",7,[[["self"],[R[504]],[R[491]]],[R[86]]]],[10,R[505],E,"Reset system configuration",7,[[["self"]],[R[86]]]],[10,R[506],E,"Reset battery configuration",7,[[["self"]],[R[86]]]],[10,R[507],E,"Reset conuters",7,[[["self"]],[R[86]]]],[10,R[508],E,"Get the telemetry data",7,[[["self"]],[["epshk"],[R[86],["epshk"]]]]],[10,R[509],E,"Get the system configuration",7,[[["self"]],[[R[492]],[R[86],[R[492]]]]]],[10,R[510],E,"Get battery configuration",7,[[["self"]],[[R[86],[R[493]]],[R[493]]]]],[10,R[511],E,"Get the heater status",7,[[["self"]],[[R[86],["i32"]],["i32"]]]],[10,R[57],E,R[525],7,[[["self"]],[R[86]]]],[10,R[60],E,R[526],7,[[["self"]],[R[86]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[494],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[494],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[494],E,E,2,[[["self"],["k"]],["bool"]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[31],E,E,3,[[["self"]],[R[16]]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,R[45],E,E,3,[[["self"]],["fail"]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,"new",E,R[128],8,[[["str"],["u8"]],[[R[86],["eps"]],["eps"]]]],[11,"ping",E,"Ping the EPS. Send a cmd (1) to the eps. Expect the same…",8,[[["self"]],[R[86]]]],[11,"reset",E,"Hard reset the EPS's microcontrollers",8,[[["self"]],[R[86]]]],[11,"reboot",E,"Soft reset the EPS's microcontrollers",8,[[["self"]],[R[86]]]],[11,R[495],E,"System Configuration (conf)",8,[[["self"],[R[492]]],[R[86]]]],[11,R[496],E,"Battery Configuration (conf2)",8,[[["self"],[R[493]]],[R[86]]]],[11,R[497],E,R[544],8,[[["self"]],[R[86]]]],[11,R[421],E,"Batch set EPS output",8,[[["self"],["u8"]],[R[86]]]],[11,R[498],E,"Set single EPS output",8,[[["self"],[R[499]],[R[491]],["u16"]],[R[86]]]],[11,R[500],E,"Set the MPPT value for each channel",8,[[["self"],["u16"]],[R[86]]]],[11,R[501],E,R[502],8,[[["self"],["u8"]],[R[86]]]],[11,R[503],E,"Set heater ON/OFF",8,[[["self"],[R[504]],[R[491]]],[R[86]]]],[11,R[505],E,"Reset the EPS configuration to default",8,[[["self"]],[R[86]]]],[11,R[506],E,"Reset the Battery configuration to default",8,[[["self"]],[R[86]]]],[11,R[507],E,"Reset boot counter and WDT counters (excluding the…",8,[[["self"]],[R[86]]]],[11,R[508],E,"Get Housekeeping data",8,[[["self"]],[["epshk"],[R[86],["epshk"]]]]],[11,R[509],E,"Query the system configuration (conf)",8,[[["self"]],[[R[492]],[R[86],[R[492]]]]]],[11,R[510],E,"Get the battery configuration (conf2)",8,[[["self"]],[[R[86],[R[493]]],[R[493]]]]],[11,R[511],E,"Get heater status",8,[[["self"]],[[R[86],["i32"]],["i32"]]]],[11,R[57],E,"Kick Watchdog",8,[[["self"]],[R[86]]]],[11,R[60],E,"Command pass through function. Pass the infromation through",8,[[["self"]],[R[86]]]],[11,R[382],E,E,2,[[],[R[492]]]],[11,R[382],E,E,0,[[],[R[493]]]],[11,R[382],E,E,1,[[],["epshk"]]],[11,"clone",E,E,3,[[["self"]],[R[28]]]],[11,"clone",E,E,4,[[["self"]],[R[491]]]],[11,"clone",E,E,5,[[["self"]],[R[499]]]],[11,"clone",E,E,6,[[["self"]],[R[504]]]],[11,"clone",E,E,2,[[["self"]],[R[492]]]],[11,"clone",E,E,0,[[["self"]],[R[493]]]],[11,"clone",E,E,1,[[["self"]],["epshk"]]],[11,"eq",E,E,4,[[["self"],[R[491]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[499]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[504]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[492]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[492]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[493]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[493]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["epshk"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["epshk"]],["bool"]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",E,E,3,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[19]]],[R[1]]]],[11,R[512],E,E,4,[[["self"]],[R[513]]]],[11,R[512],E,E,5,[[["self"]],[R[513]]]],[11,R[512],E,E,6,[[["self"]],[R[513]]]],[11,R[514],E,E,4,[[[R[513]]],[[R[32],[R[491]]],[R[491]]]]],[11,R[514],E,E,5,[[[R[513]]],[[R[32],[R[499]]],[R[499]]]]],[11,R[514],E,E,6,[[[R[513]]],[[R[32],[R[504]]],[R[504]]]]],[11,"name",E,E,4,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,4,[[[R[515]]],[R[516]]]],[11,R[576],E,E,4,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,5,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,5,[[[R[515]]],[R[516]]]],[11,R[576],E,E,5,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,6,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,6,[[[R[515]]],[R[516]]]],[11,R[576],E,E,6,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,3,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,3,[[["self"]],[["fail"],[R[32],["fail"]]]]],[11,R[29],E,E,3,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[3,R[518]],[3,"EpsHk"],[3,R[519]],[4,R[25]],[4,R[520]],[4,R[521]],[4,R[522]],[8,"GsEps"],[3,"Eps"]]};
searchIndex["gomspace_p31u_service"]={"doc":"Kubos Service for interacting with [GomSpace p31u EPS]","i":[[3,R[550],"gomspace_p31u_service",R[553],N,N],[12,"errors",E,R[541],0,N],[12,R[555],E,R[542],0,N],[3,R[551],E,R[556],N,N],[12,"errors",E,R[541],1,N],[12,R[555],E,R[542],1,N],[12,"response",E,R[557],1,N],[4,R[552],E,R[560],N,N],[13,"None",E,R[561],2,N],[13,"Noop",E,"No-Op",2,N],[13,"SetSystemConfig",E,R[543],2,N],[13,"SetBatteryConfig",E,R[543],2,N],[13,"Reboot",E,"Reboot EPS (Hard reboot and softreboot)",2,N],[13,"SaveBattConfig",E,R[544],2,N],[13,"SystemConfigReset",E,"Reset System configuration",2,N],[13,"BatteryConfigReset",E,"Reset Battery Configuration",2,N],[13,"ResetCounters",E,"Reset reboot and WDT counters",2,N],[13,"SetEpsChannels",E,"Set MPPT value for all three channels",2,N],[13,"EpsSetMPPTmode",E,"Set MPPT mode",2,N],[13,"EpsSetMPPTLevel",E,"Set EPS MPPT level",2,N],[13,"EpsHeaterToggle",E,"Set heater",2,N],[13,"EpsWatchDog",E,"Kick, start, stop, reset watch dog",2,N],[13,R[562],E,R[563],2,N],[13,R[564],E,R[565],2,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[479],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[480],E,E,2,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[481],E,E,2,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[482],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clone",E,E,2,[[["self"]],[R[545]]]],[11,R[512],E,E,2,[[["self"]],[R[513]]]],[11,R[514],E,E,2,[[[R[513]]],[[R[32],[R[545]]],[R[545]]]]],[11,"name",E,E,0,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,0,[[["self"]],[R[16]]]],[11,"meta",E,E,0,[[[R[515]]],[R[516]]]],[11,R[547],E,E,0,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,2,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,2,[[[R[515]]],[R[516]]]],[11,R[576],E,E,2,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,1,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,1,[[["self"]],[R[16]]]],[11,"meta",E,E,1,[[[R[515]]],[R[516]]]],[11,R[547],E,E,1,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]]],"p":[[3,R[550]],[3,R[551]],[4,R[552]]]};
searchIndex["iobc_supervisor_service"]={"doc":"Kubos Service for interacting with the ISIS-OBC Supervisor","i":[],"p":[]};
searchIndex["isis_ants"]={"doc":E,"i":[[5,"main","isis_ants",E,N,[[]]]],"p":[]};
searchIndex["isis_ants_api"]={"doc":"Kubos API for interacting with ISIS Antenna Systems","i":[[3,"AntS",R[38],"Structure for interacting with an ISIS Antenna System",N,N],[3,R[61],E,"System telemetry fields returned from…",N,N],[12,"raw_temp",E,"Current system temperature (raw value)",0,N],[12,"deploy_status",E,"Current deployment status flags",0,N],[12,"uptime",E,"System uptime (in seconds)",0,N],[3,R[62],E,"Current deployment status returned from [`get_deploy`]",N,N],[12,"sys_burn_active",E,"Whether antenna system independent burn is active",1,N],[12,"sys_ignore_deploy",E,"Whether the antenna system is ignoring the deployment…",1,N],[12,"sys_armed",E,"Whether the antenna system is armed (ready for deployment)",1,N],[12,"ant_1_not_deployed",E,"Whether antenna 1 is not deployed",1,N],[12,"ant_1_stopped_time",E,"Whether antenna 1's deployment time limit was reached…",1,N],[12,"ant_1_active",E,"Whether antenna 1's deployment system is currently active",1,N],[12,"ant_2_not_deployed",E,"Whether antenna 2 is not deployed",1,N],[12,"ant_2_stopped_time",E,"Whether antenna 2's deployment time limit was reached…",1,N],[12,"ant_2_active",E,"Whether antenna 2's deployment system is currently active",1,N],[12,"ant_3_not_deployed",E,"Whether antenna 3 is not deployed",1,N],[12,"ant_3_stopped_time",E,"Whether antenna 3's deployment time limit was reached…",1,N],[12,"ant_3_active",E,"Whether antenna 3's deployment system is currently active",1,N],[12,"ant_4_not_deployed",E,"Whether antenna 4 is not deployed",1,N],[12,"ant_4_stopped_time",E,"Whether antenna 4's deployment time limit was reached…",1,N],[12,"ant_4_active",E,"Whether antenna 4's deployment system is currently active",1,N],[4,R[63],E,"Common Error for AntS Actions",N,N],[13,R[33],E,R[203],2,N],[13,R[523],E,R[524],2,N],[13,R[473],E,R[34],2,N],[12,"cause","isis_ants_api::AntsError",R[35],2,N],[12,R[36],E,R[37],2,N],[4,R[64],R[38],"Specific antenna to control",N,N],[13,"Ant1",E,"Antenna 1",3,N],[13,"Ant2",E,"Antenna 2",3,N],[13,"Ant3",E,"Antenna 3",3,N],[13,"Ant4",E,"Antenna 4",3,N],[4,R[65],E,"Antenna microcontroller which any commands should be run…",N,N],[13,"Primary",E,"Primary microcontroller",4,N],[13,R[566],E,"Secondary/redundant microcontroller",4,N],[6,"AntSResult",E,"Custom result type for antenna operations",N,N],[8,"IAntS",E,"Trait used to represent the AntS object. Allows for mock…",N,N],[10,"new",E,"Construct a new AntS instance",5,[[["u32"],["str"],["u8"]],[R[39]]]],[10,R[46],E,"Configure which microcontroller should be used to control…",5,[[["self"],[R[47]]],[R[39]]]],[10,"reset",E,"Perform a software reset of the microcontrollers",5,[[["self"]],[R[39]]]],[10,"arm",E,"Arm the system for deployment",5,[[["self"]],[R[39]]]],[10,"disarm",E,"Disable deployment",5,[[["self"]],[R[39]]]],[10,"deploy",E,"Deploy one antenna",5,[[["self"],[R[42]],["u8"],["bool"]],[R[39]]]],[10,R[48],E,"Automatically deploy all antennas",5,[[["self"],["u8"]],[R[39]]]],[10,R[49],E,R[50],5,[[["self"]],[R[39]]]],[10,R[51],E,"Get the current deployment status of the system",5,[[["self"]],[[R[40]],[R[39],[R[40]]]]]],[10,R[52],E,"Get the system uptime",5,[[["self"]],[[R[39],["u32"]],["u32"]]]],[10,R[53],E,"Get the system telemetry data",5,[[["self"]],[[R[39],[R[41]]],[R[41]]]]],[10,R[54],E,R[55],5,[[["self"],[R[42]]],[[R[39],["u8"]],["u8"]]]],[10,R[56],E,"Get the amount of time spent attempting to deploy an antenna",5,[[["self"],[R[42]]],[["u16"],[R[39],["u16"]]]]],[10,R[57],E,R[525],5,[[["self"]],[R[39]]]],[10,R[58],E,"Start automatic watchdog kicking",5,[[["self"]],[R[39]]]],[10,R[59],E,"Stop automatic watchdog kicking",5,[[["self"]],[R[39]]]],[10,R[60],E,R[526],5,[[["self"]],[R[39]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[31],E,E,2,[[["self"]],[R[16]]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[45],E,E,2,[[["self"]],["fail"]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"new",E,R[128],6,[[["u32"],["str"],["u8"]],[["ants"],[R[39],["ants"]]]]],[11,R[46],E,"Configure the system to send future commands to the…",6,[[["self"],[R[47]]],[R[39]]]],[11,"reset",E,"Reset both of the antenna's microcontrollers",6,[[["self"]],[R[39]]]],[11,"arm",E,"Arm the antenna system for deployment",6,[[["self"]],[R[39]]]],[11,"disarm",E,"Disarm the antenna system",6,[[["self"]],[R[39]]]],[11,"deploy",E,"Deploy a particular antenna",6,[[["self"],[R[42]],["u8"],["bool"]],[R[39]]]],[11,R[48],E,"Auto-deploy all antennas sequentially.",6,[[["self"],["u8"]],[R[39]]]],[11,R[49],E,R[50],6,[[["self"]],[R[39]]]],[11,R[51],E,"Get the current deployment status",6,[[["self"]],[[R[40]],[R[39],[R[40]]]]]],[11,R[52],E,"Get the system's uptime",6,[[["self"]],[[R[39],["u32"]],["u32"]]]],[11,R[53],E,"Get the current system telemetry",6,[[["self"]],[[R[39],[R[41]]],[R[41]]]]],[11,R[54],E,R[55],6,[[["self"],[R[42]]],[[R[39],["u8"]],["u8"]]]],[11,R[56],E,"Get an antenna's activation time",6,[[["self"],[R[42]]],[["u16"],[R[39],["u16"]]]]],[11,R[57],E,"Kick both antenna system's watchdogs once",6,[[["self"]],[R[39]]]],[11,R[58],E,"Start a thread to kick the system's watchdogs at an…",6,[[["self"]],[R[39]]]],[11,R[59],E,"Stop the watchdog thread",6,[[["self"]],[R[39]]]],[11,R[60],E,"Pass a command packet directly through to the antenna…",6,[[["self"]],[R[39]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[382],E,E,0,[[],[R[41]]]],[11,R[382],E,E,1,[[],[R[40]]]],[11,"clone",E,E,2,[[["self"]],["antserror"]]],[11,"clone",E,E,3,[[["self"]],[R[42]]]],[11,"clone",E,E,4,[[["self"]],[R[47]]]],[11,"clone",E,E,0,[[["self"]],[R[41]]]],[11,"clone",E,E,1,[[["self"]],[R[40]]]],[11,"eq",E,E,3,[[["self"],[R[42]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[47]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[41]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[41]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[40]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[40]]],["bool"]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,2,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,2,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,2,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[3,R[61]],[3,R[62]],[4,R[63]],[4,R[64]],[4,R[65]],[8,"IAntS"],[3,"AntS"]]};
searchIndex["isis_ants_service"]={"doc":"Kubos Service for interacting with ISIS Antenna Systems","i":[[3,R[550],"isis_ants_service",R[553],N,N],[12,"errors",E,R[541],0,N],[12,R[555],E,R[542],0,N],[3,R[578],E,R[594],N,N],[12,"errors",E,R[541],1,N],[12,R[555],E,R[542],1,N],[12,"config",E,"Controller which is being used to issue commands to the…",1,N],[3,R[579],E,R[595],N,N],[12,"state",E,R[554],2,N],[12,"uptime",E,"System uptime, in seconds",2,N],[3,R[580],E,R[596],N,N],[12,"errors",E,R[541],3,N],[12,R[555],E,R[542],3,N],[12,"power",E,R[554],3,N],[3,R[581],E,"Response fields for 'deploymentStatus' query",N,N],[12,"status",E,"Overall deployment status",4,N],[12,"details",E,"Full deployment status",4,N],[3,R[582],E,R[597],N,N],[12,"errors",E,R[541],5,N],[12,R[555],E,R[542],5,N],[12,R[598],E,R[558],5,N],[12,R[599],E,R[559],5,N],[3,R[583],E,R[600],N,N],[12,"errors",E,R[541],6,N],[12,R[555],E,R[542],6,N],[12,"data",E,R[601],6,N],[3,R[551],E,R[556],N,N],[12,"errors",E,R[541],7,N],[12,R[555],E,R[542],7,N],[12,"response",E,R[557],7,N],[3,R[584],E,"Response fields for 'telemetry' query",N,N],[12,"nominal",E,R[558],8,N],[12,"debug",E,R[559],8,N],[3,R[585],E,"Nominal telemetry data",N,N],[12,"0",E,E,9,N],[3,R[586],E,"Debug telemetry data",N,N],[12,"ant1",E,"Antenna 1 status",10,N],[12,"ant2",E,"Antenna 2 status",10,N],[12,"ant3",E,"Antenna 3 status",10,N],[12,"ant4",E,"Antenna 4 status",10,N],[3,R[587],E,"Antenna status data",N,N],[12,"act_count",E,"Number of times deployment has been attempted without…",11,N],[12,"act_time",E,"Cummulative amount of time, in 50ms steps, which has been…",11,N],[4,R[552],E,R[560],N,N],[13,"None",E,R[561],12,N],[13,"Noop",E,"No-Op",12,N],[13,R[603],E,R[604],12,N],[13,R[605],E,R[606],12,N],[13,R[562],E,R[563],12,N],[13,R[564],E,R[565],12,N],[13,"Arm",E,"Arm state was changed",12,N],[13,"Deploy",E,"Antenna/s were deployed",12,N],[4,R[588],E,"Return field for 'armStatus' query",N,N],[13,"Armed",E,"System is armed",13,N],[13,"Disarmed",E,"System is disarmed",13,N],[4,"ArmState",E,"Input field for 'arm' mutation",N,N],[13,"Arm",E,"Arm the system",14,N],[13,"Disarm",E,"Disarm the system",14,N],[4,R[589],E,R[637],N,N],[13,"Primary",E,"Primary controller should be used",15,N],[13,R[566],E,"Secondary controller should be used",15,N],[4,R[590],E,R[607],N,N],[13,"On",E,R[608],16,N],[13,"Off",E,R[609],16,N],[13,"Reset",E,R[610],16,N],[4,R[591],E,"Enum for 'deployStatus' response field of…",N,N],[13,"Deployed",E,"All antennas have been successfully deployed",17,N],[13,"InProgress",E,"At least one antenna is currently being deployed",17,N],[13,"Partial",E,"Some, but not all, antennas have been deployed. No errors…",17,N],[13,"Stowed",E,"All antennas are stowed (not deployed)",17,N],[13,"Error",E,"At least one antenna encountered an error during its last…",17,N],[4,R[592],E,"Input field for 'deploy' mutation",N,N],[13,"All",E,"Deploy all antennas sequentially",18,N],[13,"Antenna1",E,"Deploy antenna 1",18,N],[13,"Antenna2",E,"Deploy antenna 2",18,N],[13,"Antenna3",E,"Deploy antenna 3",18,N],[13,"Antenna4",E,"Deploy antenna 4",18,N],[4,R[611],E,R[612],N,N],[13,R[567],E,R[613],19,N],[13,R[614],E,R[615],19,N],[4,R[593],E,R[616],N,N],[13,R[567],E,R[617],20,N],[13,R[614],E,R[618],20,N],[5,"get_stats",E,"Get status data for a particular antenna",N,[[[R[42]],["arc"],["arc"]],[R[568]]]],[6,"ArmResponse",E,"Response fields for 'arm' mutation",N,N],[6,"DeployResponse",E,"Response fields for 'deploy' mutation",N,N],[6,"NoopResponse",E,"Response fields for 'noop' mutation",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[9],E,E,9,[[[U]],[R[1]]]],[11,R[10],E,E,9,[[],[R[1]]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[24]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[[U]],[R[1]]]],[11,R[10],E,E,10,[[],[R[1]]]],[11,R[11],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[24]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[[U]],[R[1]]]],[11,R[10],E,E,11,[[],[R[1]]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[24]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[9],E,E,12,[[[U]],[R[1]]]],[11,R[10],E,E,12,[[],[R[1]]]],[11,R[11],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[R[24]]]],[11,R[479],E,E,12,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,12,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[9],E,E,13,[[[U]],[R[1]]]],[11,R[10],E,E,13,[[],[R[1]]]],[11,R[11],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[R[24]]]],[11,R[494],E,E,13,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[9],E,E,14,[[[U]],[R[1]]]],[11,R[10],E,E,14,[[],[R[1]]]],[11,R[11],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[R[24]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[9],E,E,15,[[[U]],[R[1]]]],[11,R[10],E,E,15,[[],[R[1]]]],[11,R[11],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[R[24]]]],[11,R[494],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,15,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,15,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[9],E,E,16,[[[U]],[R[1]]]],[11,R[10],E,E,16,[[],[R[1]]]],[11,R[11],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[R[24]]]],[11,R[494],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,16,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,16,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,16,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,16,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[44],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[9],E,E,17,[[[U]],[R[1]]]],[11,R[10],E,E,17,[[],[R[1]]]],[11,R[11],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[R[24]]]],[11,R[479],E,E,17,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,17,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,17,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,17,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[9],E,E,18,[[[U]],[R[1]]]],[11,R[10],E,E,18,[[],[R[1]]]],[11,R[11],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[R[24]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[9],E,E,19,[[[U]],[R[1]]]],[11,R[10],E,E,19,[[],[R[1]]]],[11,R[11],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[R[24]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[9],E,E,20,[[[U]],[R[1]]]],[11,R[10],E,E,20,[[],[R[1]]]],[11,R[11],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[R[24]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[382],E,E,9,[[],[R[572]]]],[11,R[382],E,E,10,[[],[R[573]]]],[11,R[382],E,E,11,[[],[R[568]]]],[11,"clone",E,E,12,[[["self"]],[R[545]]]],[11,"clone",E,E,15,[[["self"]],[R[569]]]],[11,"clone",E,E,16,[[["self"]],[R[570]]]],[11,"clone",E,E,17,[[["self"]],[R[571]]]],[11,"eq",E,E,13,[[["self"],[R[574]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[569]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[570]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[571]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[572]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[572]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[573]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[573]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[568]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[568]]],["bool"]]],[11,"fmt",E,E,13,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,15,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,16,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,17,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[19]]],[R[1]]]],[11,R[512],E,E,12,[[["self"]],[R[513]]]],[11,R[512],E,E,13,[[["self"]],[R[513]]]],[11,R[512],E,E,14,[[["self"]],[R[513]]]],[11,R[512],E,E,15,[[["self"]],[R[513]]]],[11,R[512],E,E,16,[[["self"]],[R[513]]]],[11,R[512],E,E,17,[[["self"]],[R[513]]]],[11,R[512],E,E,18,[[["self"]],[R[513]]]],[11,R[512],E,E,19,[[["self"]],[R[513]]]],[11,R[514],E,E,12,[[[R[513]]],[[R[32],[R[545]]],[R[545]]]]],[11,R[514],E,E,13,[[[R[513]]],[[R[32],[R[574]]],[R[574]]]]],[11,R[514],E,E,14,[[[R[513]]],[[R[32],["armstate"]],["armstate"]]]],[11,R[514],E,E,15,[[[R[513]]],[[R[569]],[R[32],[R[569]]]]]],[11,R[514],E,E,16,[[[R[513]]],[[R[32],[R[570]]],[R[570]]]]],[11,R[514],E,E,17,[[[R[513]]],[[R[32],[R[571]]],[R[571]]]]],[11,R[514],E,E,18,[[[R[513]]],[[R[575]],[R[32],[R[575]]]]]],[11,R[514],E,E,19,[[[R[513]]],[[R[626]],[R[32],[R[626]]]]]],[11,"name",E,E,0,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,0,[[["self"]],[R[16]]]],[11,"meta",E,E,0,[[[R[515]]],[R[516]]]],[11,R[547],E,E,0,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,12,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,12,[[[R[515]]],[R[516]]]],[11,R[576],E,E,12,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,13,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,13,[[[R[515]]],[R[516]]]],[11,R[576],E,E,13,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,14,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,14,[[[R[515]]],[R[516]]]],[11,R[576],E,E,14,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,15,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,15,[[[R[515]]],[R[516]]]],[11,R[576],E,E,15,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,1,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,1,[[["self"]],[R[16]]]],[11,"meta",E,E,1,[[[R[515]]],[R[516]]]],[11,R[547],E,E,1,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,16,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,16,[[[R[515]]],[R[516]]]],[11,R[576],E,E,16,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,2,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,2,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,2,[[["self"]],[R[16]]]],[11,R[547],E,E,2,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]],[11,"name",E,E,3,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,3,[[["self"]],[R[16]]]],[11,"meta",E,E,3,[[[R[515]]],[R[516]]]],[11,R[547],E,E,3,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,17,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,17,[[[R[515]]],[R[516]]]],[11,R[576],E,E,17,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,4,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,4,[[[R[515]]],[[R[577]],[R[516],[R[577]]]]]],[11,R[546],E,E,4,[[["self"]],[R[16]]]],[11,R[547],E,E,4,[[["self"],[R[548]],["str"],[R[517]]],[[R[577]],[R[549],[R[577]]]]]],[11,"name",E,E,18,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,18,[[[R[515]]],[R[516]]]],[11,R[576],E,E,18,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,19,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,19,[[[R[515]]],[R[516]]]],[11,R[576],E,E,19,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,20,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,20,[[[R[515]]],[R[516]]]],[11,R[546],E,E,20,[[["self"]],[R[16]]]],[11,R[627],E,E,20,[[["self"],[R[517]],[R[32]],["str"]],[R[549]]]],[11,"name",E,E,5,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,5,[[["self"]],[R[16]]]],[11,"meta",E,E,5,[[[R[515]]],[R[516]]]],[11,R[547],E,E,5,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,6,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,6,[[["self"]],[R[16]]]],[11,"meta",E,E,6,[[[R[515]]],[R[516]]]],[11,R[547],E,E,6,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,7,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,7,[[["self"]],[R[16]]]],[11,"meta",E,E,7,[[[R[515]]],[R[516]]]],[11,R[547],E,E,7,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,8,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,8,[[["self"]],[R[16]]]],[11,"meta",E,E,8,[[[R[515]]],[R[516]]]],[11,R[547],E,E,8,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,9,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,9,[[[R[515]]],[R[516]]]],[11,R[546],E,E,9,[[["self"]],[R[16]]]],[11,R[547],E,E,9,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,"name",E,E,10,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,10,[[[R[515]]],[R[516]]]],[11,R[546],E,E,10,[[["self"]],[R[16]]]],[11,R[547],E,E,10,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]]],"p":[[3,R[550]],[3,R[578]],[3,R[579]],[3,R[580]],[3,R[581]],[3,R[582]],[3,R[583]],[3,R[551]],[3,R[584]],[3,R[585]],[3,R[586]],[3,R[587]],[4,R[552]],[4,R[588]],[4,"ArmState"],[4,R[589]],[4,R[590]],[4,R[591]],[4,R[592]],[4,R[611]],[4,R[593]]]};
searchIndex["isis_imtq_api"]={"doc":"Device level API for interacting with the ISIS iMTQ","i":[[3,"Imtq","isis_imtq_api","Structure for interacting with the ISIS iMTQ",N,N],[11,"imtq",E,"Constructor - Returns an `AdcsResult<Imtq>`",0,[[["u16"],["str"],["i32"]],[R[69]]]],[11,R[60],E,"Passes a command directly to the Imtq device and returns…",0,[[["self"],["i64"],["i32"]],[["vec",["u8"]],[R[69],["vec"]]]]],[11,"reset",E,"Reboots the iMTQ. Performing a reset will revert all…",0,[[["self"]],[R[69]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"drop",E,E,0,[[["self"]]]]],"p":[[3,"Imtq"]]};
searchIndex["isis_iobc_supervisor"]={"doc":E,"i":[[3,R[20],"isis_iobc_supervisor","Structure returned by supervisor_version",N,N],[12,"dummy",E,E,0,N],[12,R[15],E,E,0,N],[12,"index_of_subsystem",E,E,0,N],[12,R[202],E,E,0,N],[12,R[201],E,E,0,N],[12,"patch_version",E,E,0,N],[12,"git_head_version",E,E,0,N],[12,"serial_number",E,E,0,N],[12,"compile_information",E,E,0,N],[12,"clock_speed",E,E,0,N],[12,"code_type",E,E,0,N],[12,"crc",E,E,0,N],[3,R[21],E,"Structure for individual enable statuses Used in…",N,N],[12,"power_obc",E,E,1,N],[12,"power_rtc",E,E,1,N],[12,"supervisor_mode",E,E,1,N],[12,"busy_rtc",E,E,1,N],[12,"power_off_rtc",E,E,1,N],[3,R[22],E,"Structure returned by supervisor_housekeeping",N,N],[12,"dummy",E,E,2,N],[12,R[15],E,E,2,N],[12,"enable_status",E,E,2,N],[12,"supervisor_uptime",E,E,2,N],[12,"iobc_uptime",E,E,2,N],[12,"iobc_reset_count",E,E,2,N],[12,"adc_data",E,E,2,N],[12,"adc_update_flag",E,E,2,N],[12,"crc8",E,E,2,N],[5,"supervisor_emergency_reset",E,"Supervisor emergency reset interface",N,[[],[[R[16]],[R[1],[R[16]]]]]],[5,"supervisor_reset",E,"Supervisor reset interface",N,[[],[[R[16]],[R[1],[R[16]]]]]],[5,"supervisor_powercycle",E,"Supervisor powercycle interface",N,[[],[[R[16]],[R[1],[R[16]]]]]],[5,"supervisor_version",E,"Interface for retrieving iOBC supervisor version data",N,[[],[[R[16]],[R[1],[R[17],R[16]]],[R[17]]]]],[5,"supervisor_housekeeping",E,"Interface for fetching iOBC supervisor housekeeping data",N,[[],[[R[18]],[R[16]],[R[1],[R[18],R[16]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"clone",E,E,1,[[["self"]],["supervisorenablestatus"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]]],"p":[[3,R[20]],[3,R[21]],[3,R[22]]]};
searchIndex["kubos_app"]={"doc":"A simple API to make standalone Rust applications with…","i":[[3,R[527],"kubos_app",R[528],N,N],[5,"setup_log",E,"Set up the logger for the program",N,[[["levelfilter"],["str"]],[["error"],[R[1],["error"]]]]],[5,"query",E,"Execute a GraphQL query against a running KubOS Service…",N,[[[R[32],[R[8]]],[R[486]],[R[8]],["str"]],[[R[1],["value","error"]],["value"],["error"]]]],[14,"logging_setup",E,"Helper macro to set up the logger for the program",N,N],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[479],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[480],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,0,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[482],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[382],E,E,0,[[],["config"]]],[11,"clone",E,E,0,[[["self"]],["config"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[[R[1],["error"]],["error"]]]],[11,"new",E,R[529],0,[[["str"]],[["error"],["config"],[R[1],["config","error"]]]]],[11,R[476],E,R[474],0,[[[R[16]],["str"]],[["error"],["config"],[R[1],["config","error"]]]]],[11,R[530],E,R[474],0,[[["str"]],[["error"],["config"],[R[1],["config","error"]]]]],[11,"hosturl",E,R[531],0,[[["self"]],[[R[16]],[R[32],[R[16]]]]]],[11,"raw",E,R[532],0,[[["self"]],["value"]]],[11,"get",E,R[533],0,[[["self"],["str"]],[["value"],[R[32],["value"]]]]]],"p":[[3,R[527]]]};
searchIndex["kubos_app_service"]={"doc":E,"i":[],"p":[]};
searchIndex["kubos_build_helper"]={"doc":E,"i":[[5,"build_module","kubos_build_helper","Performs all the setup, build and configuration neccesary…",N,[[]]]],"p":[]};
searchIndex["kubos_file_client"]={"doc":E,"i":[],"p":[]};
searchIndex["kubos_service"]={"doc":"A collection of structures and functions used to create…","i":[[0,"Logger",R[537],R[539],N,N],[5,"init","kubos_service::Logger",R[540],N,[[["str"]],[[R[1],["error"]],["error"]]]],[3,"Config",R[537],R[528],N,N],[3,"Context",E,"Context struct used by a service to provide Juniper…",N,N],[12,R[538],E,E,0,N],[12,"storage",E,E,0,N],[3,"Service",E,"This structure represents a hardware service.",N,N],[12,"filter",E,E,1,N],[11,R[538],E,"Returns a reference to the context's subsystem instance",0,[[["self"]],[T]]],[11,"get",E,"Attempts to get a value from the context's storage",0,[[["self"],["str"]],[R[16]]]],[11,"set",E,"Sets a value in the context's storage",0,[[["self"],["str"]]]],[11,"clear",E,"Clears a single key/value from storage",0,[[["self"],["str"]]]],[11,"clear_all",E,"Clears all key/value pairs from storage",0,[[["self"]]]],[11,"new",E,"Creates a new service instance",1,[[["mutation"],["config"],["query"],["s"]],["self"]]],[11,"start",E,"Starts the service's GraphQL/UDP server. This function…",1,[[]]],[14,"process_errors",E,"Iterate through a failure::Error and concatenate the error…",N,N],[14,"push_err",E,"Convenience macro to push an error string onto the master…",N,N],[14,"run",E,"Execute a function and return `Result<func_data, String>`…",N,N],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[479],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[480],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,2,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[482],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[479],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[480],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,0,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[482],E,E,0,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[382],E,E,2,[[],["config"]]],[11,"clone",E,E,2,[[["self"]],["config"]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[[R[1],["error"]],["error"]]]],[11,"clone",E,E,0,[[["self"]],["context"]]],[11,"new",E,R[529],2,[[["str"]],[["error"],[R[1],["config","error"]],["config"]]]],[11,R[476],E,R[474],2,[[[R[16]],["str"]],[["error"],[R[1],["config","error"]],["config"]]]],[11,R[530],E,R[474],2,[[["str"]],[["error"],[R[1],["config","error"]],["config"]]]],[11,"hosturl",E,R[531],2,[[["self"]],[[R[16]],[R[32],[R[16]]]]]],[11,"raw",E,R[532],2,[[["self"]],["value"]]],[11,"get",E,R[533],2,[[["self"],["str"]],[["value"],[R[32],["value"]]]]]],"p":[[3,"Context"],[3,"Service"],[3,"Config"]]};
searchIndex["kubos_shell_client"]={"doc":E,"i":[],"p":[]};
searchIndex["kubos_system"]={"doc":"KubOS System level APIs","i":[[3,"Address",R[475],"A simple address consisting of an IP address and port number",N,N],[3,"Config",E,R[528],N,N],[3,R[484],E,"A convenience wrapper for fetching UBoot variables used by…",N,N],[3,R[483],E,"Information about the version(s) of KubOS installed in the…",N,N],[12,"curr",E,"The current or \"active\" version of KubOS",0,N],[12,"prev",E,"The previous or \"inactive\" version of KubOS. If there is…",0,N],[5,"kubos_versions",E,"Fetch information about the version(s) of KubOS installed…",N,[[],["kubosversions"]]],[5,"initial_deploy",E,"Whether or not the system has been marked as deployed",N,[[],[[R[32],["bool"]],["bool"]]]],[11,"ip",E,"Returns the IP portion of this address",1,[[["self"]],["str"]]],[11,"port",E,"Returns the port of this address",1,[[["self"]],["u16"]]],[11,"new",E,R[529],2,[[["str"]],[[R[1],["error"]],["error"]]]],[11,R[476],E,R[474],2,[[[R[16]],["str"]],[[R[1],["error"]],["error"]]]],[11,R[530],E,R[474],2,[[["str"]],[[R[1],["error"]],["error"]]]],[11,"hosturl",E,R[531],2,[[["self"]],[[R[16]],[R[32],[R[16]]]]]],[11,"raw",E,R[532],2,[[["self"]],["value"]]],[11,"get",E,R[533],2,[[["self"],["str"]],[[R[32],["value"]],["value"]]]],[0,"logger",E,R[539],N,N],[5,"init","kubos_system::logger",R[540],N,[[["str"]],[["error"],[R[1],["error"]]]]],[11,"new",R[475],"Default constructor that fetches UBoot vars using…",3,[[],["self"]]],[11,R[476],E,"Constructor that fetches UBoot vars with a custom path to…",3,[[["str"]],["self"]]],[11,"get_u32",E,"Returns the value of a UBoot variable encoded as a u32",3,[[["self"],["str"]],[[R[32],["u32"]],["u32"]]]],[11,"get_str",E,"Returns the value of a UBoot variable encoded as a String",3,[[["self"],["str"]],[[R[16]],[R[32],[R[16]]]]]],[11,"get_bool",E,"Returns the value of a UBoot variable encoded as a bool",3,[[["self"],["str"]],[[R[32],["bool"]],["bool"]]]],[7,"DEFAULT_CONFIG_PATH",E,R[477],N,N],[7,"DEFAULT_PATH",E,R[477],N,N],[17,"SERVICE_APP",E,"The name of the KubOS app service that can be used to…",N,N],[17,"SERVICE_TELEMETRY",E,"The name of the KubOS telemetry db service that can be…",N,N],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[479],E,E,1,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,1,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[481],E,E,1,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,1,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[479],E,E,2,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,2,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[481],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[382],E,E,2,[[],["self"]]],[11,R[382],E,E,3,[[],["ubootvars"]]],[11,"clone",E,E,1,[[["self"]],["address"]]],[11,"clone",E,E,2,[[["self"]],["config"]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]],[11,R[198],E,E,1,[[["__d"]],[R[1]]]]],"p":[[3,R[483]],[3,"Address"],[3,"Config"],[3,R[484]]]};
searchIndex["kubos_telemetry_db"]={"doc":E,"i":[[3,"Database",R[655],E,N,N],[12,R[70],E,E,0,N],[0,"models",E,E,N,N],[3,"Entry",R[660],E,N,N],[12,R[656],E,E,1,N],[12,R[538],E,E,1,N],[12,R[657],E,E,1,N],[12,"value",E,E,1,N],[0,"telemetry",R[655],E,N,N],[3,"table",R[658],"The actual table struct",N,N],[0,"dsl",E,"Re-exports all of the columns of this table, as well as…",N,N],[0,"columns",E,"Contains all of the columns of this table",N,N],[3,"star",R[662],"Represents `table_name.*`, which is sometimes needed for…",N,N],[3,R[656],E,E,N,N],[3,R[538],E,E,N,N],[3,R[657],E,E,N,N],[3,"value",E,E,N,N],[6,"SqlType",R[658],"The SQL type of all of the columns on this table",N,N],[6,"BoxedQuery",E,"Helper type for representing a boxed query from this table",N,N],[17,R[663],E,"A tuple of all of the columns on this table",N,N],[11,"star",E,"Represents `table_name.*`, which is sometimes necessary…",2,[[["self"]],["star"]]],[11,"new",R[655],"Construct new database structure and database file if needed",0,[[["str"]],["self"]]],[11,"setup",E,"Check if database has correct table and creates table if…",0,[[["self"]]]],[11,"insert",E,E,0,[[["self"],["str"],["f64"]],[[R[659],[R[7]]],[R[7]]]]],[11,"insert_systime",E,E,0,[[["self"],["str"]],[[R[659],[R[7]]],[R[7]]]]],[11,"insert_bulk",E,E,0,[[["self"],["entry"],["vec",["entry"]]],[[R[659],[R[7]]],[R[7]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",R[660],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[43],R[658],E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"filter",E,E,2,[[[R[661]]]]],[11,"group_by",E,E,2,[[["expr"]]]],[11,R[664],E,E,2,[[["onclausewrapper"]]]],[11,R[666],E,E,2,[[],[R[667]]]],[11,"select",E,E,2,[[["selection"]]]],[11,"as_query",E,E,2,[[]]],[11,"limit",E,E,2,[[["i64"]]]],[11,"internal_load",E,E,2,[[["conn"]],[[R[1],["vec","error"]],["error"],["vec"]]]],[11,"internal_into_boxed",E,E,2,[[]]],[11,"find",E,E,2,[[["pk"]]]],[11,"order",E,E,2,[[["expr"]]]],[11,"distinct",E,E,2,[[]]],[11,"with_lock",E,E,2,[[["lock"]]]],[11,"for_update",E,E,2,[[]]],[11,"or_filter",E,E,2,[[[R[661]]]]],[11,"offset",E,E,2,[[["i64"]]]],[11,"then_order_by",E,E,2,[[["expr"]]]],[11,R[43],R[662],E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"execute",E,E,4,[[[T],["conn"]],[["error"],[R[7]],[R[1],[R[7],"error"]]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,"execute",E,E,5,[[[T],["conn"]],[["error"],[R[7]],[R[1],[R[7],"error"]]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,"execute",E,E,6,[[[T],["conn"]],[["error"],[R[7]],[R[1],[R[7],"error"]]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,"execute",E,E,7,[[[T],["conn"]],[["error"],[R[7]],[R[1],[R[7],"error"]]]]],[11,R[382],E,E,4,[[],[R[656]]]],[11,R[382],E,E,5,[[],[R[538]]]],[11,R[382],E,E,6,[[],[R[657]]]],[11,R[382],E,E,7,[[],["value"]]],[11,"clone",R[658],E,2,[[["self"]],["table"]]],[11,"clone",R[662],E,3,[[["self"]],["star"]]],[11,"clone",E,E,4,[[["self"]],[R[656]]]],[11,"clone",E,E,5,[[["self"]],[R[538]]]],[11,"clone",E,E,6,[[["self"]],[R[657]]]],[11,"clone",E,E,7,[[["self"]],["value"]]],[11,"add",E,E,4,[[["rhs"]]]],[11,"sub",E,E,4,[[["rhs"]]]],[11,"mul",E,E,4,[[["rhs"]]]],[11,"div",E,E,4,[[["rhs"]]]],[11,"fmt",R[660],E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[658],E,2,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[662],E,3,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[19]]],[R[1]]]],[11,"primary_key",R[658],E,2,[[["self"]]]],[11,R[663],E,E,2,[[]]],[11,"build",R[660],E,1,[[],["self"]]],[11,"from_clause",R[658],E,2,[[["self"]]]],[11,"default_selection",E,E,2,[[["self"]]]],[11,"eq_all",R[662],E,4,[[[T]]]],[11,"eq_all",E,E,5,[[[T]]]],[11,"eq_all",E,E,6,[[[T]]]],[11,"eq_all",E,E,7,[[[T]]]],[11,"values",R[660],E,1,[[]]],[11,"values",R[658],E,2,[[]]],[11,R[664],E,E,2,[[["join"]]]],[11,R[664],E,E,2,[[["joinon"]]]],[11,R[664],E,E,2,[[["selectstatement"]]]],[11,R[664],E,E,2,[[["boxedselectstatement"]]]],[11,"table",E,E,2,[[]]],[11,R[665],R[662],E,3,[[["self"],["astpass"]],[R[659]]]],[11,R[665],E,E,4,[[["self"],["astpass"]],[R[659]]]],[11,R[665],E,E,5,[[["self"],["astpass"]],[R[659]]]],[11,R[665],E,E,6,[[["self"],["astpass"]],[R[659]]]],[11,R[665],E,E,7,[[["self"],["astpass"]],[R[659]]]],[11,R[666],R[658],E,2,[[],[R[667]]]],[11,"as_query",E,E,2,[[]]],[11,R[198],R[660],E,1,[[["__d"]],[R[1]]]],[11,"serialize",E,E,1,[[["self"],["__s"]],[R[1]]]]],"p":[[3,"Database"],[3,"Entry"],[3,"table"],[3,"star"],[3,R[656]],[3,R[538]],[3,R[657]],[3,"value"]]};
searchIndex["large_download"]={"doc":E,"i":[[5,"download","large_download",E,N,[[["u32"],["u16"],[R[16]],["str"],[R[32],[R[16]]]],[[R[1],[R[131]]],[R[131]]]]]],"p":[]};
searchIndex["large_upload"]={"doc":E,"i":[[5,"upload","large_upload",E,N,[[["u32"],["u16"],[R[16]],["str"],[R[32],[R[16]]]],[[R[16]],[R[1],[R[16],R[131]]],[R[131]]]]]],"p":[]};
searchIndex["local_comms_service"]={"doc":"Local comms service for testing against a local system or…","i":[],"p":[]};
searchIndex["mai400"]={"doc":E,"i":[],"p":[]};
searchIndex["mai400_api"]={"doc":"Kubos API for interacting with Adcole Maryland Aerospace…","i":[[0,"mock",R[199],R[411],N,N],[3,R[175],R[381],R[412],N,N],[3,R[176],E,R[413],N,N],[3,R[174],E,R[414],N,N],[12,"write",E,R[415],0,N],[12,"read",E,R[416],0,N],[3,R[14],R[199],R[403],N,N],[12,R[2],E,R[404],1,N],[4,R[173],E,R[405],N,N],[13,R[33],E,R[406],2,N],[13,R[472],E,R[407],2,N],[13,R[473],E,R[408],2,N],[12,"cause",R[200],R[167],2,N],[12,R[36],E,R[37],2,N],[13,R[409],R[199],R[410],2,N],[12,"cause",R[200],R[167],2,N],[12,R[36],E,R[37],2,N],[3,"MAI400",R[199],"Structure for MAI-400 device instance",N,N],[12,"conn",E,R[436],3,N],[3,R[227],E,R[228],N,N],[12,R[229],E,R[230],4,N],[12,R[231],E,R[232],4,N],[12,"temp_a",E,R[233],4,N],[12,"temp_b",E,R[234],4,N],[12,R[235],E,R[236],4,N],[12,R[237],E,R[238],4,N],[12,R[239],E,R[240],4,N],[3,R[241],E,R[242],N,N],[3,"RawIMU",E,R[243],N,N],[12,"accel",E,R[244],5,N],[12,"gyro",E,R[245],5,N],[12,R[246],E,R[247],5,N],[3,R[248],E,R[249],N,N],[12,R[250],E,R[251],6,N],[12,R[252],E,R[253],6,N],[12,R[254],E,R[255],6,N],[12,R[256],E,R[257],6,N],[12,R[258],E,R[259],6,N],[12,"k_bdot",E,R[260],6,N],[12,"kp",E,R[261],6,N],[12,"kd",E,R[262],6,N],[12,"k_unload",E,R[263],6,N],[12,"css_bias",E,R[264],6,N],[12,"mag_bias",E,R[265],6,N],[12,"rws_volt",E,R[266],6,N],[12,R[267],E,"Reserved",6,N],[12,R[268],E,R[269],6,N],[12,R[270],E,R[271],6,N],[12,R[272],E,R[273],6,N],[12,R[201],E,R[274],6,N],[12,"mai_sn",E,R[275],6,N],[12,R[276],E,R[277],6,N],[12,R[278],E,R[279],6,N],[12,R[280],E,R[281],6,N],[12,R[202],E,R[282],6,N],[12,R[283],E,R[284],6,N],[12,"css_gain",E,R[285],6,N],[12,"mag_gain",E,R[286],6,N],[12,R[287],E,R[288],6,N],[12,R[289],E,R[290],6,N],[12,R[291],E,R[292],6,N],[12,R[293],E,R[294],6,N],[12,R[295],E,R[296],6,N],[12,R[297],E,R[298],6,N],[12,R[299],E,R[300],6,N],[12,R[301],E,R[302],6,N],[12,R[303],E,R[304],6,N],[12,R[305],E,R[306],6,N],[12,R[307],E,R[308],6,N],[12,R[309],E,R[310],6,N],[12,"q_sat",E,R[311],6,N],[12,R[312],E,R[313],6,N],[12,R[314],E,R[315],6,N],[12,R[316],E,R[317],6,N],[3,R[318],E,R[319],N,N],[12,R[320],E,R[321],7,N],[12,R[322],E,R[323],7,N],[12,R[324],E,R[325],7,N],[12,"raan",E,R[326],7,N],[12,R[327],E,R[328],7,N],[12,R[329],E,R[330],7,N],[3,R[331],E,R[332],N,N],[12,R[333],E,R[334],8,N],[12,"gps_time",E,R[335],8,N],[12,R[336],E,R[337],8,N],[12,R[338],E,R[339],8,N],[12,R[340],E,R[341],8,N],[12,R[342],E,R[343],8,N],[12,R[344],E,R[345],8,N],[12,"acs_mode",E,R[346],8,N],[12,"css",E,R[347],8,N],[12,R[348],E,R[349],8,N],[12,R[350],E,R[351],8,N],[12,R[352],E,R[353],8,N],[12,"bd",E,R[354],8,N],[12,R[355],E,R[356],8,N],[12,R[357],E,R[358],8,N],[12,R[359],E,R[360],8,N],[12,R[361],E,R[362],8,N],[12,R[363],E,R[364],8,N],[12,R[365],E,R[366],8,N],[12,"qbo_cmd",E,R[367],8,N],[12,"qbo_hat",E,R[368],8,N],[12,R[369],E,R[370],8,N],[12,"q_error",E,R[371],8,N],[12,"omega_b",E,R[372],8,N],[12,R[373],E,R[374],8,N],[12,R[375],E,R[376],8,N],[12,R[377],E,R[378],8,N],[12,"nb",E,R[379],8,N],[12,"neci",E,R[380],8,N],[4,"MAIError",E,"Common Error for MAI Actions",N,N],[13,R[33],E,R[203],9,N],[13,R[439],E,R[440],9,N],[13,R[443],E,R[444],9,N],[12,"id",R[204],R[446],9,N],[13,R[173],R[199],R[447],9,N],[12,"cause",R[204],R[442],9,N],[11,"new",R[199],"Constructor for MAI400 structure",3,[[["str"]],[[R[205],["mai400"]],["mai400"]]]],[11,"reset",E,"Request a hardware reset of the MAI-400",3,[[["self"]],[R[205]]]],[11,"set_mode",E,"Set the ACS mode",3,[[["self"],["u8"]],[R[205]]]],[11,"set_mode_sun",E,"Set the ACS mode (Normal-Sun or Lat/Long-Sun)",3,[[["self"],["f32"],["i16"],["u8"]],[R[205]]]],[11,"set_gps_time",E,"Set the ADACS clock with the desired GPS time",3,[[["self"],["u32"]],[R[205]]]],[11,"set_rv",E,"Set orbital position and velocity at epoch for RK4…",3,[[["self"],["u32"]],[R[205]]]],[11,R[60],E,R[455],3,[[["self"]],[R[205]]]],[11,"get_message",E,"Wait for and read a message set from the MAI-400.",3,[[["self"]],[R[205]]]],[11,"new",E,R[226],4,[[["vec",["u8"]],["u8"]],[R[32]]]],[18,"DIP_ANGLE_LIMIT",E,"Dip angle exceeded senser system limit",10,N],[18,"SUN_IN_EPHEMERIS",E,"Sun in FOV using sun ephemeris",10,N],[18,"THERMOPILE_SAT",E,"Thermopile is saturated",10,N],[18,"NO_COMM",E,"No communications",10,N],[18,"BAD_EARTH_REF",E,"Earth reference is bad",10,N],[18,"AUX_WIDE_FOV",E,"Using auxiliary wide FOV sensor",10,N],[11,"empty",E,R[206],10,[[],[R[208]]]],[11,"all",E,R[207],10,[[],[R[208]]]],[11,"bits",E,R[209],10,[[["self"]],["u8"]]],[11,R[210],E,R[211],10,[[["u8"]],[[R[208]],[R[32],[R[208]]]]]],[11,R[212],E,R[213],10,[[["u8"]],[R[208]]]],[11,R[214],E,R[215],10,[[["u8"]],[R[208]]]],[11,R[451],E,R[216],10,[[["self"]],["bool"]]],[11,"is_all",E,R[217],10,[[["self"]],["bool"]]],[11,R[218],E,R[219],10,[[["self"],[R[208]]],["bool"]]],[11,R[452],E,R[220],10,[[["self"],[R[208]]],["bool"]]],[11,"insert",E,R[221],10,[[["self"],[R[208]]]]],[11,"remove",E,R[222],10,[[["self"],[R[208]]]]],[11,"toggle",E,R[223],10,[[["self"],[R[208]]]]],[11,"set",E,R[224],10,[[["self"],[R[208]],["bool"]]]],[11,"to_vec",E,R[225],10,[[],[["vec",[R[16]]],[R[16]]]]],[11,"new",E,R[226],5,[[["vec",["u8"]],["u8"]],[R[32]]]],[11,"update",E,"Extract the self variables from a standard telemetry…",6,[[["self"],[R[383]]]]],[11,"new",E,R[226],8,[[["vec",["u8"]],["u8"]],[R[32]]]],[0,"irehs",E,"Module for receiving and processing the IREHS telemetry…",N,N],[3,R[227],"mai400_api::irehs",R[228],N,N],[12,R[229],E,R[230],4,N],[12,R[231],E,R[232],4,N],[12,"temp_a",E,R[233],4,N],[12,"temp_b",E,R[234],4,N],[12,R[235],E,R[236],4,N],[12,R[237],E,R[238],4,N],[12,R[239],E,R[240],4,N],[3,R[241],E,R[242],N,N],[0,"raw_imu",R[199],"Module for receiving and processing the raw IMU telemetry…",N,N],[3,"RawIMU","mai400_api::raw_imu",R[243],N,N],[12,"accel",E,R[244],5,N],[12,"gyro",E,R[245],5,N],[12,R[246],E,R[247],5,N],[0,R[622],R[199],"Module for extracting and saving the rotating variables…",N,N],[3,R[248],"mai400_api::rotating",R[249],N,N],[12,R[250],E,R[251],6,N],[12,R[252],E,R[253],6,N],[12,R[254],E,R[255],6,N],[12,R[256],E,R[257],6,N],[12,R[258],E,R[259],6,N],[12,"k_bdot",E,R[260],6,N],[12,"kp",E,R[261],6,N],[12,"kd",E,R[262],6,N],[12,"k_unload",E,R[263],6,N],[12,"css_bias",E,R[264],6,N],[12,"mag_bias",E,R[265],6,N],[12,"rws_volt",E,R[266],6,N],[12,R[267],E,"Reserved",6,N],[12,R[268],E,R[269],6,N],[12,R[270],E,R[271],6,N],[12,R[272],E,R[273],6,N],[12,R[201],E,R[274],6,N],[12,"mai_sn",E,R[275],6,N],[12,R[276],E,R[277],6,N],[12,R[278],E,R[279],6,N],[12,R[280],E,R[281],6,N],[12,R[202],E,R[282],6,N],[12,R[283],E,R[284],6,N],[12,"css_gain",E,R[285],6,N],[12,"mag_gain",E,R[286],6,N],[12,R[287],E,R[288],6,N],[12,R[289],E,R[290],6,N],[12,R[291],E,R[292],6,N],[12,R[293],E,R[294],6,N],[12,R[295],E,R[296],6,N],[12,R[297],E,R[298],6,N],[12,R[299],E,R[300],6,N],[12,R[301],E,R[302],6,N],[12,R[303],E,R[304],6,N],[12,R[305],E,R[306],6,N],[12,R[307],E,R[308],6,N],[12,R[309],E,R[310],6,N],[12,"q_sat",E,R[311],6,N],[12,R[312],E,R[313],6,N],[12,R[314],E,R[315],6,N],[12,R[316],E,R[317],6,N],[3,R[318],E,R[319],N,N],[12,R[320],E,R[321],7,N],[12,R[322],E,R[323],7,N],[12,R[324],E,R[325],7,N],[12,"raan",E,R[326],7,N],[12,R[327],E,R[328],7,N],[12,R[329],E,R[330],7,N],[0,"std_telem",R[199],"Module for receiving and processing the standard telemetry…",N,N],[3,R[331],"mai400_api::std_telem",R[332],N,N],[12,R[333],E,R[334],8,N],[12,"gps_time",E,R[335],8,N],[12,R[336],E,R[337],8,N],[12,R[338],E,R[339],8,N],[12,R[340],E,R[341],8,N],[12,R[342],E,R[343],8,N],[12,R[344],E,R[345],8,N],[12,"acs_mode",E,R[346],8,N],[12,"css",E,R[347],8,N],[12,R[348],E,R[349],8,N],[12,R[350],E,R[351],8,N],[12,R[352],E,R[353],8,N],[12,"bd",E,R[354],8,N],[12,R[355],E,R[356],8,N],[12,R[357],E,R[358],8,N],[12,R[359],E,R[360],8,N],[12,R[361],E,R[362],8,N],[12,R[363],E,R[364],8,N],[12,R[365],E,R[366],8,N],[12,"qbo_cmd",E,R[367],8,N],[12,"qbo_hat",E,R[368],8,N],[12,R[369],E,R[370],8,N],[12,"q_error",E,R[371],8,N],[12,"omega_b",E,R[372],8,N],[12,R[373],E,R[374],8,N],[12,R[375],E,R[376],8,N],[12,R[377],E,R[378],8,N],[12,"nb",E,R[379],8,N],[12,"neci",E,R[380],8,N],[6,"MAIResult",R[199],"Custom error type for MAI400 operations.",N,N],[17,"AUX_SYNC",E,"Sync word for raw IMU and IREHS telemetry packets",N,N],[11,"into",R[381],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[[U]],[R[1]]]],[11,R[10],E,E,11,[[],[R[1]]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[9],E,E,12,[[[U]],[R[1]]]],[11,R[10],E,E,12,[[],[R[1]]]],[11,R[11],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",R[199],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[31],E,E,2,[[["self"]],[R[16]]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[45],E,E,2,[[["self"]],["fail"]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[[U]],[R[1]]]],[11,R[10],E,E,10,[[],[R[1]]]],[11,R[11],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[24]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[31],E,E,9,[[["self"]],[R[16]]]],[11,R[9],E,E,9,[[[U]],[R[1]]]],[11,R[10],E,E,9,[[],[R[1]]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[24]]]],[11,R[45],E,E,9,[[["self"]],["fail"]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[[R[1],["error"]],["error"]]]],[11,"name",E,E,2,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"cause",E,E,2,[[["self"]],[["fail"],[R[32],["fail"]]]]],[11,R[29],E,E,2,[[["self"]],[[R[32],[R[29]]],[R[29]]]]],[11,"clone",E,E,2,[[["self"]],[R[172]]]],[11,R[382],R[381],E,0,[[],[R[457]]]],[11,"fmt",R[199],E,2,[[["self"],[R[19]]],[[R[1],["error"]],["error"]]]],[11,"write",R[381],E,0,[[["self"]],[[R[172]],[R[1],[R[172]]]]]],[11,"read",E,E,0,[[["self"],[R[7]],[R[8]]],[[R[172]],["vec",["u8"]],[R[1],["vec",R[172]]]]]],[11,"from",R[199],E,2,[[["error"]],[R[172]]]],[11,"from",E,E,2,[[["error"]],[R[172]]]],[11,"eq",E,E,2,[[["self"],[R[172]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[172]]],["bool"]]],[11,R[382],E,E,4,[[],[R[384]]]],[11,R[382],E,E,10,[[],[R[208]]]],[11,R[382],E,E,5,[[],["rawimu"]]],[11,R[382],E,E,6,[[],[R[385]]]],[11,R[382],E,E,7,[[],[R[386]]]],[11,R[382],E,E,8,[[],[R[383]]]],[11,"clone",E,E,3,[[["self"]],["mai400"]]],[11,"clone",E,E,9,[[["self"]],[R[388]]]],[11,"clone",E,E,4,[[["self"]],[R[384]]]],[11,"clone",E,E,10,[[["self"]],[R[208]]]],[11,"clone",E,E,5,[[["self"]],["rawimu"]]],[11,"clone",E,E,6,[[["self"]],[R[385]]]],[11,"clone",E,E,7,[[["self"]],[R[386]]]],[11,"clone",E,E,8,[[["self"]],[R[383]]]],[11,R[387],E,E,10,[[["self"],[R[208]]],[[R[32],[R[120]]],[R[120]]]]],[11,"lt",E,E,10,[[["self"],[R[208]]],["bool"]]],[11,"le",E,E,10,[[["self"],[R[208]]],["bool"]]],[11,"gt",E,E,10,[[["self"],[R[208]]],["bool"]]],[11,"ge",E,E,10,[[["self"],[R[208]]],["bool"]]],[11,"extend",E,E,10,[[["self"],[R[121]]]]],[11,"eq",E,E,9,[[["self"],[R[388]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[388]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[384]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[384]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[208]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[208]]],["bool"]]],[11,"eq",E,E,5,[[["self"],["rawimu"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["rawimu"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[385]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[385]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[386]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[386]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[383]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[383]]],["bool"]]],[11,"cmp",E,E,10,[[["self"],[R[208]]],[R[120]]]],[11,"from",E,E,9,[[[R[172]]],["self"]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"sub",E,R[389],10,[[[R[208]]],[R[208]]]],[11,R[390],E,R[391],10,[[["self"],[R[208]]]]],[11,"not",E,R[392],10,[[],[R[208]]]],[11,"bitand",E,R[393],10,[[[R[208]]],[R[208]]]],[11,"bitor",E,R[394],10,[[[R[208]]],[R[208]]]],[11,"bitxor",E,R[395],10,[[[R[208]]],[R[208]]]],[11,R[396],E,R[397],10,[[["self"],[R[208]]]]],[11,R[398],E,R[399],10,[[["self"],[R[208]]]]],[11,R[400],E,R[401],10,[[["self"],[R[208]]]]],[11,"fmt",E,E,9,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,8,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[19]]],[R[1]]]],[11,R[402],E,E,10,[[[R[121]]],[R[208]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,9,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,9,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,9,[[["self"]],[[R[32],[R[29]]],[R[29]]]]],[11,R[168],R[381],R[417],11,[[["self"],[R[1],[R[172]]],[R[172]]]]],[11,R[418],E,R[419],11,[[["self"],["vec",["u8"]],["u8"]]]],[11,R[168],E,R[420],12,[[["self"],[R[1],["vec",R[172]]],["vec",["u8"]],[R[172]]]]],[11,R[421],E,R[422],12,[[["self"],["vec",["u8"]],["u8"]]]],[11,"new",R[199],R[423],1,[[[R[2]],["box",[R[2]]]],[R[70]]]],[11,R[170],E,R[424],1,[[[R[425]],["str"],[R[8]]],[[R[70]],[R[1],[R[70],R[172]]],[R[172]]]]],[11,"write",E,R[426],1,[[["self"]],[[R[172]],[R[1],[R[172]]]]]],[11,"read",E,R[427],1,[[["self"],[R[7]],[R[8]]],[[R[172]],["vec",["u8"]],[R[1],["vec",R[172]]]]]]],"p":[[3,R[174]],[3,R[14]],[4,R[173]],[3,"MAI400"],[3,R[227]],[3,"RawIMU"],[3,R[248]],[3,R[318]],[3,R[331]],[4,"MAIError"],[3,R[241]],[3,R[175]],[3,R[176]]]};
searchIndex["mai400_service"]={"doc":"Kubos Service for interacting with an Adcole Maryland…","i":[[3,R[550],"mai400_service",R[553],N,N],[12,"errors",E,R[541],0,N],[12,R[555],E,R[542],0,N],[3,R[578],E,R[594],N,N],[12,"errors",E,R[541],1,N],[12,R[555],E,R[542],1,N],[3,R[579],E,R[595],N,N],[12,"state",E,R[632],2,N],[12,"uptime",E,"Number of valid commands run by the system. This…",2,N],[3,R[580],E,R[596],N,N],[12,"errors",E,R[541],3,N],[12,R[555],E,R[542],3,N],[12,"power",E,"Current power state",3,N],[3,R[582],E,R[597],N,N],[12,"errors",E,R[541],4,N],[12,R[555],E,R[542],4,N],[12,R[598],E,R[558],4,N],[12,R[599],E,R[559],4,N],[3,R[583],E,R[600],N,N],[12,"errors",E,R[541],5,N],[12,R[555],E,R[542],5,N],[12,"data",E,R[601],5,N],[3,"RVInput",E,"RV input fields for `update` mutation",N,N],[12,"eci_pos",E,"X, Y, Z ECI position values",6,N],[12,"eci_vel",E,"X, Y, Z ECI velocity values",6,N],[12,"time_epoch",E,"GPS time at Epoch",6,N],[3,"Spin",E,"Response fields for `spin` query",N,N],[12,"x",E,"X-axis",7,N],[12,"y",E,"Y-axis",7,N],[12,"z",E,"Z-axis",7,N],[3,R[584],E,R[633],N,N],[12,"nominal",E,R[558],8,N],[12,"debug",E,R[559],8,N],[3,"StdTelem",E,R[634],N,N],[12,"0",E,E,9,N],[3,R[586],E,"Response fields for 'telemetry(telem: DEBUG)' query",N,N],[12,"irehs",E,"IREHS telemetry values",10,N],[12,"raw_imu",E,R[602],10,N],[12,R[622],E,"Rotating telemetry values",10,N],[3,R[628],E,"IR Earth horizon sensor telemetry values",N,N],[12,"0",E,E,11,N],[3,R[630],E,"Thermopile telemetry values",N,N],[3,R[631],E,"Thermopile sensor telemetry values",N,N],[3,R[629],E,R[602],N,N],[12,"0",E,E,12,N],[3,"Rotating",E,"Rotating telemetry values. These values aren't updated…",N,N],[12,"0",E,E,13,N],[3,"Kepler",E,"Kepler element telemetry values",N,N],[12,"0",E,E,14,N],[4,R[552],E,R[560],N,N],[13,"None",E,R[561],15,N],[13,"Noop",E,"No-Op",15,N],[13,R[603],E,R[604],15,N],[13,R[605],E,R[606],15,N],[13,R[562],E,R[563],15,N],[13,R[564],E,R[565],15,N],[13,"SetMode",E,"System mode was changed",15,N],[13,"Update",E,"GPS time and/or rv values were updated",15,N],[4,R[590],E,R[607],N,N],[13,"On",E,R[608],16,N],[13,"Off",E,R[609],16,N],[13,"Reset",E,R[610],16,N],[4,R[611],E,R[612],N,N],[13,R[567],E,R[613],17,N],[13,R[614],E,R[615],17,N],[4,R[593],E,R[616],N,N],[13,R[567],E,R[617],18,N],[13,R[614],E,R[618],18,N],[4,"Mode",E,"System mode",N,N],[13,"TestMode",E,"Test mode",19,N],[13,"RateNulling",E,"Rate nulling",19,N],[13,R[619],E,R[621],19,N],[13,"NadirPointing",E,"Nadir pointing (normal mode)",19,N],[13,"LatLongPointing",E,"Lat/Long pointing",19,N],[13,"QbxMode",E,"QbX mode",19,N],[13,R[620],E,R[621],19,N],[13,"NormalSun",E,"Normal sun (nadir with sun rotation)",19,N],[13,"LatLongSun",E,"Lat/long sun",19,N],[13,"Qintertial",E,"Qinertial",19,N],[13,"Reserved3",E,R[621],19,N],[13,"Qtable",E,"QTable",19,N],[13,"SunRam",E,"Sun-Ram",19,N],[13,"Unknown",E,"Unknown mode detected",19,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[9],E,E,9,[[[U]],[R[1]]]],[11,R[10],E,E,9,[[],[R[1]]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[24]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[[U]],[R[1]]]],[11,R[10],E,E,10,[[],[R[1]]]],[11,R[11],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[24]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[[U]],[R[1]]]],[11,R[10],E,E,11,[[],[R[1]]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[24]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[9],E,E,20,[[[U]],[R[1]]]],[11,R[10],E,E,20,[[],[R[1]]]],[11,R[11],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[R[24]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[9],E,E,21,[[[U]],[R[1]]]],[11,R[10],E,E,21,[[],[R[1]]]],[11,R[11],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[R[24]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[9],E,E,12,[[[U]],[R[1]]]],[11,R[10],E,E,12,[[],[R[1]]]],[11,R[11],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[R[24]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[9],E,E,13,[[[U]],[R[1]]]],[11,R[10],E,E,13,[[],[R[1]]]],[11,R[11],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[R[24]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[9],E,E,14,[[[U]],[R[1]]]],[11,R[10],E,E,14,[[],[R[1]]]],[11,R[11],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[R[24]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[9],E,E,15,[[[U]],[R[1]]]],[11,R[10],E,E,15,[[],[R[1]]]],[11,R[11],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[R[24]]]],[11,R[479],E,E,15,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[9],E,E,16,[[[U]],[R[1]]]],[11,R[10],E,E,16,[[],[R[1]]]],[11,R[11],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[R[24]]]],[11,R[494],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,16,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,16,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,16,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,16,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[9],E,E,17,[[[U]],[R[1]]]],[11,R[10],E,E,17,[[],[R[1]]]],[11,R[11],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[R[24]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[9],E,E,18,[[[U]],[R[1]]]],[11,R[10],E,E,18,[[],[R[1]]]],[11,R[11],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[R[24]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"],[T]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[9],E,E,19,[[[U]],[R[1]]]],[11,R[10],E,E,19,[[],[R[1]]]],[11,R[11],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[R[24]]]],[11,R[479],E,E,19,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,19,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,19,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,19,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[382],E,E,9,[[],[R[623]]]],[11,R[382],E,E,11,[[],[R[624]]]],[11,R[382],E,E,12,[[],[R[625]]]],[11,R[382],E,E,13,[[],[R[622]]]],[11,R[382],E,E,14,[[],["kepler"]]],[11,"clone",E,E,15,[[["self"]],[R[545]]]],[11,"clone",E,E,16,[[["self"]],[R[570]]]],[11,"clone",E,E,19,[[["self"]],["mode"]]],[11,"eq",E,E,16,[[["self"],[R[570]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[623]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[624]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[624]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[625]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[625]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[622]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[622]]],["bool"]]],[11,"eq",E,E,14,[[["self"],["kepler"]],["bool"]]],[11,"ne",E,E,14,[[["self"],["kepler"]],["bool"]]],[11,"from",E,E,19,[[["u8"]],["mode"]]],[11,"fmt",E,E,16,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,9,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[19]]],[R[1]]]],[11,R[512],E,E,15,[[["self"]],[R[513]]]],[11,R[512],E,E,16,[[["self"]],[R[513]]]],[11,R[512],E,E,17,[[["self"]],[R[513]]]],[11,R[512],E,E,19,[[["self"]],[R[513]]]],[11,R[512],E,E,6,[[["self"]],[R[513]]]],[11,R[514],E,E,15,[[[R[513]]],[[R[545]],[R[32],[R[545]]]]]],[11,R[514],E,E,16,[[[R[513]]],[[R[570]],[R[32],[R[570]]]]]],[11,R[514],E,E,17,[[[R[513]]],[[R[626]],[R[32],[R[626]]]]]],[11,R[514],E,E,19,[[[R[513]]],[[R[32],["mode"]],["mode"]]]],[11,R[514],E,E,6,[[[R[513]]],[R[32]]]],[11,"name",E,E,0,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,0,[[["self"]],[R[16]]]],[11,"meta",E,E,0,[[[R[515]]],[R[516]]]],[11,R[547],E,E,0,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,15,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,15,[[[R[515]]],[R[516]]]],[11,R[576],E,E,15,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,1,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,1,[[["self"]],[R[16]]]],[11,"meta",E,E,1,[[[R[515]]],[R[516]]]],[11,R[547],E,E,1,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,16,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,16,[[[R[515]]],[R[516]]]],[11,R[576],E,E,16,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,2,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,2,[[["self"]],[R[16]]]],[11,"meta",E,E,2,[[[R[515]]],[R[516]]]],[11,R[547],E,E,2,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,3,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,3,[[["self"]],[R[16]]]],[11,"meta",E,E,3,[[[R[515]]],[R[516]]]],[11,R[547],E,E,3,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,17,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,17,[[[R[515]]],[R[516]]]],[11,R[576],E,E,17,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,18,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,18,[[[R[515]]],[R[516]]]],[11,R[546],E,E,18,[[["self"]],[R[16]]]],[11,R[627],E,E,18,[[["self"],[R[517]],[R[32]],["str"]],[R[549]]]],[11,"name",E,E,4,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,4,[[["self"]],[R[16]]]],[11,"meta",E,E,4,[[[R[515]]],[R[516]]]],[11,R[547],E,E,4,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,5,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,5,[[["self"]],[R[16]]]],[11,"meta",E,E,5,[[[R[515]]],[R[516]]]],[11,R[547],E,E,5,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,19,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,19,[[[R[515]]],[R[516]]]],[11,R[576],E,E,19,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,6,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,6,[[[R[515]]],[R[516]]]],[11,"name",E,E,7,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,7,[[["self"]],[R[16]]]],[11,"meta",E,E,7,[[[R[515]]],[R[516]]]],[11,R[547],E,E,7,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,8,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,8,[[["self"]],[R[16]]]],[11,"meta",E,E,8,[[[R[515]]],[R[516]]]],[11,R[547],E,E,8,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,9,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,9,[[[R[515]]],[R[516]]]],[11,R[546],E,E,9,[[["self"]],[R[16]]]],[11,R[547],E,E,9,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,"name",E,E,10,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,10,[[["self"]],[R[16]]]],[11,"meta",E,E,10,[[[R[515]]],[R[516]]]],[11,R[547],E,E,10,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,20,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,20,[[["self"]],[R[16]]]],[11,"meta",E,E,20,[[[R[515]]],[R[516]]]],[11,R[547],E,E,20,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,21,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,21,[[["self"]],[R[16]]]],[11,"meta",E,E,21,[[[R[515]]],[R[516]]]],[11,R[547],E,E,21,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,11,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,11,[[[R[515]]],[R[516]]]],[11,R[546],E,E,11,[[["self"]],[R[16]]]],[11,R[547],E,E,11,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,"name",E,E,12,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,12,[[[R[515]]],[R[516]]]],[11,R[546],E,E,12,[[["self"]],[R[16]]]],[11,R[547],E,E,12,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,"name",E,E,13,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,13,[[[R[515]]],[R[516]]]],[11,R[546],E,E,13,[[["self"]],[R[16]]]],[11,R[547],E,E,13,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,"name",E,E,14,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,14,[[[R[515]]],[R[516]]]],[11,R[546],E,E,14,[[["self"]],[R[16]]]],[11,R[547],E,E,14,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]]],"p":[[3,R[550]],[3,R[578]],[3,R[579]],[3,R[580]],[3,R[582]],[3,R[583]],[3,"RVInput"],[3,"Spin"],[3,R[584]],[3,"StdTelem"],[3,R[586]],[3,R[628]],[3,R[629]],[3,"Rotating"],[3,"Kepler"],[4,R[552]],[4,R[590]],[4,R[611]],[4,R[593]],[4,"Mode"],[3,R[630]],[3,R[631]]]};
searchIndex["monitor_service"]={"doc":"Service for monitoring KubOS Linux processes, memory, and…","i":[[14,"root_path","monitor_service","Generates a path from parts starting at `/`",N,N]],"p":[]};
searchIndex["novatel_oem6_api"]={"doc":"Kubos API for interacting with NovAtel OEM6 High Precision…","i":[[0,"mock",R[428],R[411],N,N],[3,R[175],R[456],R[412],N,N],[3,R[176],E,R[413],N,N],[3,R[174],E,R[414],N,N],[12,"write",E,R[415],0,N],[12,"read",E,R[416],0,N],[3,R[14],R[428],R[403],N,N],[12,R[2],E,R[404],1,N],[4,R[173],E,R[405],N,N],[13,R[33],E,R[406],2,N],[13,R[472],E,R[407],2,N],[13,R[473],E,R[408],2,N],[12,"cause",R[429],R[167],2,N],[12,R[36],E,R[37],2,N],[13,R[409],R[428],R[410],2,N],[12,"cause",R[429],R[167],2,N],[12,R[36],E,R[37],2,N],[4,"BaudRate",R[428],"Serial port baud rates.",N,N],[13,"Baud110",E,"110 baud.",3,N],[13,"Baud300",E,"300 baud.",3,N],[13,"Baud600",E,"600 baud.",3,N],[13,"Baud1200",E,"1200 baud.",3,N],[13,"Baud2400",E,"2400 baud.",3,N],[13,"Baud4800",E,"4800 baud.",3,N],[13,"Baud9600",E,"9600 baud.",3,N],[13,"Baud19200",E,"19,200 baud.",3,N],[13,"Baud38400",E,"38,400 baud.",3,N],[13,"Baud57600",E,"57,600 baud.",3,N],[13,"Baud115200",E,"115,200 baud.",3,N],[13,"BaudOther",E,"Non-standard baud rates.",3,N],[3,R[465],E,"Log message containing position information",N,N],[12,R[430],E,R[431],4,N],[12,R[432],E,R[433],4,N],[12,"week",E,R[434],4,N],[12,"ms",E,R[435],4,N],[12,"pos_status",E,"Position solution status",4,N],[12,"pos_type",E,"Position type",4,N],[12,"position",E,"Position coordinates {X, Y, Z} (m)",4,N],[12,"pos_deviation",E,"Standard deviation of position coordinates {X, Y, Z} (m)",4,N],[12,"vel_status",E,"Velocity solution status",4,N],[12,"vel_type",E,"Velocity type",4,N],[12,"velocity",E,"Velocity vector along {X, Y, Z}-axis (m/s)",4,N],[12,"vel_deviation",E,"Standard deviation of velocity vector along {X, Y, Z}-axis…",4,N],[12,"station_id",E,"Base station ID",4,N],[12,"vel_time_latency",E,"Latency of the velocity time tag",4,N],[12,"diff_age",E,"Differential age (seconds)",4,N],[12,"sol_age",E,"Solution age (seconds)",4,N],[12,"num_sats",E,"Number of satellites tracked",4,N],[12,"num_sat_vehicles",E,"Number of satellite vehicles used in solution",4,N],[12,"num_gg_l1",E,"Number of GPS plus GLONASS plus BDS L1/B1 used in solution",4,N],[12,"num_multi_sats",E,"Number of satellites with L1/E1/B1 signals used in solution",4,N],[12,"ext_sol_stat",E,"Extended solution status",4,N],[12,"gal_beidou_sig",E,"Galileo and BeiDou signals used mask",4,N],[12,"gps_glonass_sig",E,"GPS and GLONASS signals used mask",4,N],[3,R[466],E,"Event/error log message",N,N],[12,R[430],E,R[431],5,N],[12,R[432],E,R[433],5,N],[12,"week",E,R[434],5,N],[12,"ms",E,R[435],5,N],[12,"word",E,"Status word which generated the event",5,N],[12,"bit",E,"Location of the bit in the status word",5,N],[12,"event",E,"Event type",5,N],[12,R[36],E,"Text description of event/error",5,N],[3,R[467],E,"Log message containing version information",N,N],[12,R[430],E,R[431],6,N],[12,R[432],E,R[433],6,N],[12,"week",E,R[434],6,N],[12,"ms",E,R[435],6,N],[12,R[635],E,"Number of components present in this structure",6,N],[12,R[636],E,"Version information for each component present in the system",6,N],[3,R[468],E,"Version information about a specific system component",N,N],[12,"comp_type",E,"The component type which the version info is about",7,N],[12,"model",E,"Model number",7,N],[12,"serial_num",E,"Serial number",7,N],[12,"hw_version",E,"Hardware version",7,N],[12,"sw_version",E,"Software version",7,N],[12,"boot_version",E,"Boot code version",7,N],[12,"compile_date",E,"Software compilation date stamp",7,N],[12,"compile_time",E,"Software compilation time stamp",7,N],[3,R[471],E,"Receiver status flags",N,N],[3,"OEM6",E,"Structure for OEM6 device instance",N,N],[12,"conn",E,R[436],8,N],[12,"log_recv",E,"Channel for receiving log messages",8,N],[12,"response_recv",E,"Channel for receiveing response messages",8,N],[12,"response_abbrv_recv",E,"Channel for receiving abbreviated response messages",8,N],[4,R[469],E,"Response values returned after sending a command to the…",N,N],[13,"Ok",E,"Command was received correctly",9,N],[13,"LogInvalid",E,"Requested log type does not exist",9,N],[13,"OutOfResources",E,"The request has exceeded some (unspecified) limit",9,N],[13,"PacketNotVerified",E,"Data packet is not verified",9,N],[13,"CommandFailed",E,"Command was attempted, but failed",9,N],[13,"InvalidID",E,"Input message ID is not valid",9,N],[13,"InvalidField",E,"An input field was invalid. See the…",9,N],[13,R[835],E,"The checksum of the sent message was invalid",9,N],[13,"MissingField",E,"A field is missing from the sent message",9,N],[13,"ArrayOverflow",E,"An input field contains more array elements than allowed.…",9,N],[13,"ErrorField",E,"An input field's value is outside acceptable limits. See…",9,N],[13,"InvalidTrigger",E,"The requested trigger type is invalid for the requested…",9,N],[13,"AuthcodeOverflow",E,"Too many authcodes are stored in the receiver. The…",9,N],[13,"InvalidDate",E,"This error is related to the inputting of authcodes.…",9,N],[13,"InvalidAuthcode",E,"The authcode entered is not valid",9,N],[13,"NoModel",E,"The model requested for removal does not exist",9,N],[13,"InvalidModel",E,"The model attached to the authcode is not valid",9,N],[13,"InvalidChannel",E,"The selected channel is invalid",9,N],[13,"InvalidRate",E,"The requested rate is invalid",9,N],[13,"NoMask",E,"The word has no mask for this type of log",9,N],[13,"LockedChannels",E,"Channels are locked due to an error",9,N],[13,"InvalidTime",E,"The injected time is invalid",9,N],[13,"InvalidPort",E,"The COM/USB port is not supported",9,N],[13,"InvalidMessage",E,"The sent message is invalid",9,N],[13,"InvalidPRN",E,"The PRN is invalid",9,N],[13,"PRNNotLocked",E,"The PRN is not locked out",9,N],[13,"PRNLockoutOverflow",E,"The PRN lockout list is full",9,N],[13,"PRNAlreadyLocked",E,"The PRN is already locked out",9,N],[13,"Timeout",E,"Message timed out",9,N],[13,"UnknownPort",E,"Unknown COM/USB port requested",9,N],[13,"BadHex",E,"Hex string not formatted correctly",9,N],[13,"InvalidBaud",E,"The baud rate is invalid",9,N],[13,"ModelInvalidMessage",E,"The sent message is invalid for this model of receiver",9,N],[13,"RequiresFailMode",E,"Command is only valid if NVM is in fail mode",9,N],[13,"InvalidOffset",E,"The offset is invalid",9,N],[13,"MessageOverflow",E,"The maximum number of user messages has been reached",9,N],[13,"PreciseTimeAlreadyKnown",E,"GPS precise time is already known",9,N],[13,"Unknown",E,"Catch-all value for unknown response IDs",9,N],[4,"Log",E,"Supported log messages",N,N],[13,"BestXYZ",E,"Best available position and velocity in ECEF coordinates",10,N],[13,R[437],E,"Event and/or error message",10,N],[13,"Version",E,"System version information",10,N],[4,R[470],E,"Supported message types",N,N],[13,"Log",E,"Log command message",11,N],[13,"Unlog",E,"Unlog command message",11,N],[13,"UnlogAll",E,"Unlog all command message",11,N],[13,"Version",E,"Version data log",11,N],[13,R[437],E,"RX status event data log",11,N],[13,"BestXYZ",E,"Best XYZ position/velocity data log",11,N],[13,"Unknown",E,"Catch-all value for received messages with an unknown ID",11,N],[4,"OEMError",E,"Common Error for OEM Actions",N,N],[13,R[33],E,R[203],12,N],[13,"MutexError",E,"An issue occurred while attempted to obtain a mutex lock",12,N],[13,"ResponseMismatch",E,"A response message was received, but the ID doesn't match…",12,N],[13,R[438],E,"A command was sent, but we were unable to get the response",12,N],[13,R[439],E,R[440],12,N],[13,R[441],E,"A response was recieved and indicates an error with the…",12,N],[12,"id",R[445],R[442],12,N],[12,R[36],E,"Description of error encountered",12,N],[13,R[443],R[428],R[444],12,N],[12,"id",R[445],R[446],12,N],[13,R[173],R[428],R[447],12,N],[12,"cause",R[445],R[442],12,N],[5,"read_thread",R[428],"Continually read messages from the OEM6 device",N,[[[R[448]],["arc"],[R[448]]]]],[11,"new",E,R[449],4,[[[R[450]],["i32"],["u16"],["u8"]],[R[32]]]],[11,"new",E,R[449],5,[[[R[450]],["i32"],["u16"],["u8"]],[R[32]]]],[11,"new",E,R[449],6,[[[R[450]],["i32"],["u16"],["vec",["u8"]],["u8"]],[R[32]]]],[11,"new",E,R[449],10,[[[R[454]],[R[450]],["i32"],["u16"],["vec",["u8"]],["u8"]],[["log"],[R[32],["log"]]]]],[18,"ERROR_PRESENT",E,"System has encountered an error",13,N],[18,"TEMPERATURE_WARNING",E,"Temperature warning",13,N],[18,"VOLTAGE_SUPPLY_WARNING",E,"Voltage supply warning",13,N],[18,"ANTENNA_NOT_POWERED",E,"Antenna not powered",13,N],[18,"LNA_FAILURE",E,"LNA failure encountered",13,N],[18,"ANTENNA_OPEN",E,"Antenna open",13,N],[18,"ANTENNA_SHORTENED",E,"Antenna shortened",13,N],[18,"CPU_OVERLOAD",E,"CPU overloaded",13,N],[18,"COM1_BUFFER_OVERRUN",E,"The COM1 buffer has been overrun",13,N],[18,"COM2_BUFFER_OVERRUN",E,"The COM2 buffer has been overrun",13,N],[18,"COM3_BUFFER_OVERRUN",E,"The COM3 buffer has been overrun",13,N],[18,"LINK_OVERRUN",E,"Link overrun",13,N],[18,"AUX_TRANSMIT_OVERRUN",E,"Auxilliary transmit overrun",13,N],[18,"AGC_OUT_OF_RANGE",E,"AGC out of range",13,N],[18,"INS_RESET",E,"INS has been reset",13,N],[18,"GPS_ALMANAC_INVALID",E,"GPS almanac invalid and/or UTC unknown",13,N],[18,"POSITION_SOLUTION_INVALID",E,"Position solution is invalid",13,N],[18,"POSITION_FIXED",E,"A fixed position is in place",13,N],[18,"CLOCK_STEERING_DISABLED",E,"Clock steering is disabled",13,N],[18,"CLOCK_MODEL_INVALID",E,"The clock model is invalid",13,N],[18,"EXTERNAL_OSCILLATOR_LOCKED",E,"The external oscillator is locked",13,N],[18,"SOFTWARE_RESOURCE_WARNING",E,"Software resource warning",13,N],[18,"AUX3_STATUS_EVENT",E,"An auxilliary 3 status event has occurred",13,N],[18,"AUX2_STATUS_EVENT",E,"An auxilliary 2 status event has occurred",13,N],[18,"AUX1_STATUS_EVENT",E,"An auxilliary 1 status event has occurred",13,N],[11,"empty",E,R[206],13,[[],[R[450]]]],[11,"all",E,R[207],13,[[],[R[450]]]],[11,"bits",E,R[209],13,[[["self"]],["u32"]]],[11,R[210],E,R[211],13,[[["u32"]],[[R[450]],[R[32],[R[450]]]]]],[11,R[212],E,R[213],13,[[["u32"]],[R[450]]]],[11,R[214],E,R[215],13,[[["u32"]],[R[450]]]],[11,R[451],E,R[216],13,[[["self"]],["bool"]]],[11,"is_all",E,R[217],13,[[["self"]],["bool"]]],[11,R[218],E,R[219],13,[[["self"],[R[450]]],["bool"]]],[11,R[452],E,R[220],13,[[["self"],[R[450]]],["bool"]]],[11,"insert",E,R[221],13,[[["self"],[R[450]]]]],[11,"remove",E,R[222],13,[[["self"],[R[450]]]]],[11,"toggle",E,R[223],13,[[["self"],[R[450]]]]],[11,"set",E,R[224],13,[[["self"],[R[450]],["bool"]]]],[11,"to_vec",E,R[225],13,[[],[["vec",[R[16]]],[R[16]]]]],[11,"new",E,"Constructor for OEM6 structure",8,[[["receiver"],["receiver",["vec"]],["vec",["u8"]],["str"],[R[458]]],[["oem6"],[R[453],["oem6"]]]]],[11,"request_version",E,"Request the system version information",8,[[["self"]],[R[453]]]],[11,"request_position",E,"Request BestXYZ position log/s from the device",8,[[["self"],["f64"],["bool"]],[R[453]]]],[11,"request_errors",E,"Request that the device send error messages as they occur",8,[[["self"],["bool"]],[R[453]]]],[11,"request_unlog",E,"Request that automatic logging for a particular log type…",8,[[["self"],[R[454]]],[R[453]]]],[11,"request_unlog_all",E,"Request that all automatic logging be stopped",8,[[["self"],["bool"]],[R[453]]]],[11,R[60],E,R[455],8,[[["self"]],[R[453]]]],[11,"get_log",E,"Fetch a log message from the OEM6 read thread",8,[[["self"]],[["log"],[R[453],["log"]]]]],[6,"OEMResult",E,"Custom error type for OEM6 operations.",N,N],[11,"into",R[456],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[9],E,E,14,[[[U]],[R[1]]]],[11,R[10],E,E,14,[[],[R[1]]]],[11,R[11],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[R[24]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[9],E,E,15,[[[U]],[R[1]]]],[11,R[10],E,E,15,[[],[R[1]]]],[11,R[11],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",R[428],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[31],E,E,2,[[["self"]],[R[16]]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[45],E,E,2,[[["self"]],["fail"]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[9],E,E,13,[[[U]],[R[1]]]],[11,R[10],E,E,13,[[],[R[1]]]],[11,R[11],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[R[24]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[9],E,E,9,[[[U]],[R[1]]]],[11,R[10],E,E,9,[[],[R[1]]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[24]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[[U]],[R[1]]]],[11,R[10],E,E,10,[[],[R[1]]]],[11,R[11],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[24]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[[U]],[R[1]]]],[11,R[10],E,E,11,[[],[R[1]]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[24]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[31],E,E,12,[[["self"]],[R[16]]]],[11,R[9],E,E,12,[[[U]],[R[1]]]],[11,R[10],E,E,12,[[],[R[1]]]],[11,R[11],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[R[24]]]],[11,R[45],E,E,12,[[["self"]],["fail"]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[[R[1],["error"]],["error"]]]],[11,"name",E,E,2,[[["self"]],[[R[32],["str"]],["str"]]]],[11,"cause",E,E,2,[[["self"]],[["fail"],[R[32],["fail"]]]]],[11,R[29],E,E,2,[[["self"]],[[R[32],[R[29]]],[R[29]]]]],[11,"clone",E,E,2,[[["self"]],[R[172]]]],[11,R[382],R[456],E,0,[[],[R[457]]]],[11,"fmt",R[428],E,2,[[["self"],[R[19]]],[[R[1],["error"]],["error"]]]],[11,"write",R[456],E,0,[[["self"]],[[R[1],[R[172]]],[R[172]]]]],[11,"read",E,E,0,[[["self"],[R[7]],[R[8]]],[[R[1],["vec",R[172]]],["vec",["u8"]],[R[172]]]]],[11,"from",R[428],E,2,[[["error"]],[R[172]]]],[11,"from",E,E,2,[[["error"]],[R[172]]]],[11,"eq",E,E,2,[[["self"],[R[172]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[172]]],["bool"]]],[11,"fmt",E,E,3,[[["self"],[R[19]]],[[R[1],["error"]],["error"]]]],[11,"clone",E,E,3,[[["self"]],[R[458]]]],[11,"eq",E,E,3,[[["self"],[R[458]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[458]]],["bool"]]],[11,R[382],E,E,4,[[],[R[459]]]],[11,R[382],E,E,5,[[],[R[460]]]],[11,R[382],E,E,6,[[],[R[461]]]],[11,R[382],E,E,7,[[],[R[462]]]],[11,R[382],E,E,11,[[],[R[454]]]],[11,R[382],E,E,13,[[],[R[450]]]],[11,"clone",E,E,9,[[["self"]],[R[463]]]],[11,"clone",E,E,4,[[["self"]],[R[459]]]],[11,"clone",E,E,5,[[["self"]],[R[460]]]],[11,"clone",E,E,6,[[["self"]],[R[461]]]],[11,"clone",E,E,7,[[["self"]],[R[462]]]],[11,"clone",E,E,10,[[["self"]],["log"]]],[11,"clone",E,E,11,[[["self"]],[R[454]]]],[11,"clone",E,E,13,[[["self"]],[R[450]]]],[11,"clone",E,E,8,[[["self"]],["oem6"]]],[11,"clone",E,E,12,[[["self"]],[R[464]]]],[11,R[387],E,E,13,[[["self"],[R[450]]],[[R[32],[R[120]]],[R[120]]]]],[11,"lt",E,E,13,[[["self"],[R[450]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[450]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[450]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[450]]],["bool"]]],[11,"extend",E,E,13,[[["self"],[R[121]]]]],[11,"eq",E,E,9,[[["self"],[R[463]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[459]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[459]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[460]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[460]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[461]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[461]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[462]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[462]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["log"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["log"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[454]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[450]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[450]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[464]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[464]]],["bool"]]],[11,"cmp",E,E,13,[[["self"],[R[450]]],[R[120]]]],[11,"from",E,E,9,[[["u32"]],[R[463]]]],[11,"from",E,E,11,[[["u16"]],[R[454]]]],[11,"from",E,E,12,[[[R[172]]],["self"]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"sub",E,R[389],13,[[[R[450]]],[R[450]]]],[11,R[390],E,R[391],13,[[["self"],[R[450]]]]],[11,"not",E,R[392],13,[[],[R[450]]]],[11,"bitand",E,R[393],13,[[[R[450]]],[R[450]]]],[11,"bitor",E,R[394],13,[[[R[450]]],[R[450]]]],[11,"bitxor",E,R[395],13,[[[R[450]]],[R[450]]]],[11,R[396],E,R[397],13,[[["self"],[R[450]]]]],[11,R[398],E,R[399],13,[[["self"],[R[450]]]]],[11,R[400],E,R[401],13,[[["self"],[R[450]]]]],[11,"fmt",E,E,9,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,5,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,6,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,7,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,12,[[["self"],[R[19]]],[R[1]]]],[11,R[402],E,E,13,[[[R[121]]],[R[450]]]],[11,"fmt",E,E,13,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,12,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,12,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,12,[[["self"]],[[R[32],[R[29]]],[R[29]]]]],[11,R[168],R[456],R[417],14,[[["self"],[R[172]],[R[1],[R[172]]]]]],[11,R[418],E,R[419],14,[[["self"],["vec",["u8"]],["u8"]]]],[11,R[168],E,R[420],15,[[["self"],[R[1],["vec",R[172]]],["vec",["u8"]],[R[172]]]]],[11,R[421],E,R[422],15,[[["self"],["vec",["u8"]],["u8"]]]],[11,"new",R[428],R[423],1,[[[R[2]],["box",[R[2]]]],[R[70]]]],[11,R[170],E,R[424],1,[[[R[8]],["str"],[R[425]]],[[R[70]],[R[1],[R[70],R[172]]],[R[172]]]]],[11,"write",E,R[426],1,[[["self"]],[[R[1],[R[172]]],[R[172]]]]],[11,"read",E,R[427],1,[[["self"],[R[7]],[R[8]]],[[R[1],["vec",R[172]]],["vec",["u8"]],[R[172]]]]],[11,"from_speed",E,"Creates a `BaudRate` for a particular speed.",3,[[[R[7]]],[R[458]]]],[11,"speed",E,"Returns the baud rate as an integer.",3,[[["self"]],[R[7]]]]],"p":[[3,R[174]],[3,R[14]],[4,R[173]],[4,"BaudRate"],[3,R[465]],[3,R[466]],[3,R[467]],[3,R[468]],[3,"OEM6"],[4,R[469]],[4,"Log"],[4,R[470]],[4,"OEMError"],[3,R[471]],[3,R[175]],[3,R[176]]]};
searchIndex["novatel_oem6_service"]={"doc":"Kubos Service for interacting with a NovAtel OEM6 High…","i":[[3,R[550],"novatel_oem6_service",R[553],N,N],[12,"errors",E,R[541],0,N],[12,R[555],E,R[542],0,N],[3,R[646],E,"Input structure for 'configureHardware' mutation",N,N],[12,R[32],E,"Configuration option to send to the system",1,N],[12,"hold",E,"(For \"Log*\" config options) Indicates whether the logging…",1,N],[12,"interval",E,"(For \"Log*\" config options) The interval, in seconds, at…",1,N],[12,"offset",E,"(For \"Log*\" config options) The offset, in seconds, at…",1,N],[3,R[578],E,R[594],N,N],[12,"config",E,"An echo of the configuration options which were requested",2,N],[12,"errors",E,R[541],2,N],[12,R[555],E,R[542],2,N],[3,R[582],E,R[597],N,N],[12,"errors",E,R[541],3,N],[12,R[555],E,R[542],3,N],[12,R[599],E,R[558],3,N],[12,R[598],E,R[559],3,N],[3,R[583],E,R[600],N,N],[12,"errors",E,R[541],4,N],[12,R[555],E,R[542],4,N],[12,"data",E,R[601],4,N],[3,R[647],E,"Response fields for `lockStatus` query",N,N],[12,R[432],E,"Validity of time data",5,N],[12,"time",E,"Timestamp from last BestXYZ log message received",5,N],[12,"position_status",E,"Validity of position data",5,N],[12,"position_type",E,"Position data type",5,N],[12,"velocity_status",E,"Validity of velocity data",5,N],[12,"velocity_type",E,"Velocity data type",5,N],[3,"OEMTime",E,"Time structure for `lockStatus` and `lockInfo` response…",N,N],[12,"week",E,"GPS reference week number",6,N],[12,"ms",E,"Milliseconds from the beginning of the GPS reference week",6,N],[3,"LockInfo",E,"Current system lock information. Used in the response…",N,N],[12,"time",E,"Timestamp when the other fields were last updated",7,N],[12,"position",E,"Last known good position",7,N],[12,"velocity",E,"Last known good velocity",7,N],[3,R[579],E,R[595],N,N],[12,"state",E,R[632],8,N],[12,"uptime",E,"A value of 1 confirms that the system is on. A value of 0…",8,N],[3,R[648],E,"Response fields for `systemStatus` query",N,N],[12,"status",E,"Current receiver status. If all flags are present, then…",9,N],[12,"errors",E,"Error messages received from the system",9,N],[3,R[649],E,"Receiver status",N,N],[12,"0",E,E,10,N],[3,R[584],E,R[633],N,N],[12,"nominal",E,R[558],11,N],[12,"debug",E,R[559],11,N],[3,R[585],E,R[634],N,N],[12,"system_status",E,"System status",12,N],[12,"lock_status",E,"Last known lock status",12,N],[12,"lock_info",E,"Last known good lock information",12,N],[3,R[124],E,"Version information about the device, returned as the…",N,N],[12,R[635],E,"Number of system components",13,N],[12,R[636],E,"Data for each system component",13,N],[3,R[650],E,"System component data",N,N],[12,"0",E,E,14,N],[4,R[552],E,R[560],N,N],[13,"None",E,R[561],15,N],[13,"Noop",E,"No-Op",15,N],[13,R[603],E,R[604],15,N],[13,R[605],E,R[606],15,N],[13,R[562],E,R[563],15,N],[13,R[564],E,R[565],15,N],[4,R[651],E,R[637],N,N],[13,"LogErrorData",E,"Configure system to output error data when errors or…",16,N],[13,"LogPositionData",E,"Configure system to output position data at a requested…",16,N],[13,"UnlogAll",E,"Stop generation of all output data from device",16,N],[13,"UnlogErrorData",E,"Stop generation of error data from device",16,N],[13,"UnlogPositionData",E,"Stop generation of position data from device",16,N],[4,R[611],E,R[612],N,N],[13,R[567],E,R[613],17,N],[13,R[614],E,R[615],17,N],[4,R[593],E,R[616],N,N],[13,R[567],E,R[617],18,N],[13,R[614],E,R[618],18,N],[4,R[652],E,"Enum for the `positionStatus` and `velocityStatus`…",N,N],[13,"SolComputed",E,"Solution computed",19,N],[13,"InsufficientObservations",E,"Insufficient observations",19,N],[13,"NoConvergence",E,"No convergence",19,N],[13,"Singularity",E,"Singularity at parameters matrix",19,N],[13,"CovarianceTraceExceeded",E,"Covariance trace exceeds maximum (trace > 1000 m)",19,N],[13,"TestDistanceExceeded",E,"Test distance exceeded (maximum of 3 rejections if…",19,N],[13,"ColdStart",E,"Not yet converged from cold start",19,N],[13,"HeightVelocityExceeded",E,"Height or velocity limits exceeded",19,N],[13,"VarianceExceeded",E,"Variance exceeds limits",19,N],[13,"ResidualsTooLarge",E,"Residuals are too large",19,N],[13,"IntegrityWarning",E,"Large residuals make position unreliable",19,N],[13,"Pending",E,"Position being computed",19,N],[13,"InvalidFix",E,"Invalid fixed position",19,N],[13,"Unauthorized",E,"Position type is unauthorized",19,N],[13,R[639],E,"Unknown solution status value encountered",19,N],[4,R[653],E,"Enum for the `positionType` and `velocityType` response…",N,N],[13,"None",E,"No solution",20,N],[13,"FixedPos",E,R[638],20,N],[13,"FixedHeight",E,R[638],20,N],[13,"DopplerVelocity",E,"Velocity computed using instantaneous Doppler",20,N],[13,"Single",E,"Single point position",20,N],[13,"PSRDiff",E,"Pseudorange differential solution",20,N],[13,"WAAS",E,"Solution calculated using corrections from an WAAS",20,N],[13,"Propagated",E,"Propagated by a Kalman filter without new observations",20,N],[13,"Omnistar",E,"OmniSTAR VBS position",20,N],[13,"L1Float",E,"Floating L1 ambiguity solution",20,N],[13,"IonoFreeFloat",E,"Floating ionospheric-free ambiguity solution",20,N],[13,"NarrowFloat",E,"Floating narrow-lane ambiguity solution",20,N],[13,"L1Integer",E,"Integer L1 ambiguity solution",20,N],[13,"NarrowInteger",E,"Integer narrow-lane ambiguity solution",20,N],[13,"OmnistarHP",E,"OmniSTAR HP position",20,N],[13,"OmnistarXP",E,"OmniSTAR XP or G2 position",20,N],[13,"PPPConverging",E,"Converging TerraStar-C solution",20,N],[13,"PPP",E,"Converged TerraStar-C solution",20,N],[13,"Operational",E,"Solution accuracy is within UAL operational limit",20,N],[13,"Warning",E,"Solution accuracy is outside UAL operational limit but…",20,N],[13,"OutOfBounds",E,"Solution accuracy is outside UAL limits",20,N],[13,"PPPBasicConverging",E,"Converging TerraStar-L solution",20,N],[13,"PPPBasic",E,"Converged TerraStar-L solution",20,N],[13,R[639],E,"Unknown type value encountered",20,N],[4,R[654],E,"Enum for the `TimeStatus` response field of the…",N,N],[13,"Unknown",E,"Time validity is unknown",21,N],[13,"Approximate",E,"Time is set approximately",21,N],[13,"CoarseAdjusting",E,"Time is approaching coarse precision",21,N],[13,"Coarse",E,"Time is valid to coarse precision",21,N],[13,"CoarseSteering",E,"Time is coarse set and is being steered",21,N],[13,"FreeWheeling",E,"Position is lost and the range bias cannot be calculated",21,N],[13,"FineAdjusting",E,"Time is adjusting to fine precision",21,N],[13,"Fine",E,"Time has fine precision",21,N],[13,"FineBackupSteering",E,"Time is fine set and is being steered by the backup system",21,N],[13,"FineSteering",E,"Time is fine set and is being steered",21,N],[13,"SatTime",E,"Time from satellite. Only used in logs containing…",21,N],[13,R[639],E,"Unknown status value encountered",21,N],[4,R[590],E,"Response field for 'power' query",N,N],[13,"On",E,R[608],22,N],[13,"Off",E,R[609],22,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,R[479],E,E,2,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,2,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[9],E,E,5,[[[U]],[R[1]]]],[11,R[10],E,E,5,[[],[R[1]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[24]]]],[11,R[479],E,E,5,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,5,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,5,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,5,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[9],E,E,6,[[[U]],[R[1]]]],[11,R[10],E,E,6,[[],[R[1]]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[["self"]],[R[24]]]],[11,R[479],E,E,6,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,6,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,6,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,6,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[9],E,E,7,[[[U]],[R[1]]]],[11,R[10],E,E,7,[[],[R[1]]]],[11,R[11],E,E,7,[[["self"]],[T]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[12],E,E,7,[[["self"]],[R[24]]]],[11,R[479],E,E,7,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,7,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,7,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,7,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[9],E,E,8,[[[U]],[R[1]]]],[11,R[10],E,E,8,[[],[R[1]]]],[11,R[11],E,E,8,[[["self"]],[T]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[12],E,E,8,[[["self"]],[R[24]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[9],E,E,9,[[[U]],[R[1]]]],[11,R[10],E,E,9,[[],[R[1]]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[["self"]],[R[24]]]],[11,R[479],E,E,9,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,9,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,9,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,9,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[9],E,E,10,[[[U]],[R[1]]]],[11,R[10],E,E,10,[[],[R[1]]]],[11,R[11],E,E,10,[[["self"]],[T]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[12],E,E,10,[[["self"]],[R[24]]]],[11,R[479],E,E,10,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,10,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,10,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,10,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[9],E,E,11,[[[U]],[R[1]]]],[11,R[10],E,E,11,[[],[R[1]]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[["self"]],[R[24]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[9],E,E,12,[[[U]],[R[1]]]],[11,R[10],E,E,12,[[],[R[1]]]],[11,R[11],E,E,12,[[["self"]],[T]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[12],E,E,12,[[["self"]],[R[24]]]],[11,R[479],E,E,12,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,12,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[9],E,E,13,[[[U]],[R[1]]]],[11,R[10],E,E,13,[[],[R[1]]]],[11,R[11],E,E,13,[[["self"]],[T]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[12],E,E,13,[[["self"]],[R[24]]]],[11,R[479],E,E,13,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,13,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,13,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,13,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[9],E,E,14,[[[U]],[R[1]]]],[11,R[10],E,E,14,[[],[R[1]]]],[11,R[11],E,E,14,[[["self"]],[T]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[["self"]],[R[24]]]],[11,R[479],E,E,14,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,14,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,14,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,14,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[9],E,E,15,[[[U]],[R[1]]]],[11,R[10],E,E,15,[[],[R[1]]]],[11,R[11],E,E,15,[[["self"]],[T]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[12],E,E,15,[[["self"]],[R[24]]]],[11,R[479],E,E,15,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,15,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[9],E,E,16,[[[U]],[R[1]]]],[11,R[10],E,E,16,[[],[R[1]]]],[11,R[11],E,E,16,[[["self"]],[T]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[12],E,E,16,[[["self"]],[R[24]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[9],E,E,17,[[[U]],[R[1]]]],[11,R[10],E,E,17,[[],[R[1]]]],[11,R[11],E,E,17,[[["self"]],[T]]],[11,R[23],E,E,17,[[["self"]],[T]]],[11,R[12],E,E,17,[[["self"]],[R[24]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[9],E,E,18,[[[U]],[R[1]]]],[11,R[10],E,E,18,[[],[R[1]]]],[11,R[11],E,E,18,[[["self"]],[T]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[12],E,E,18,[[["self"]],[R[24]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[9],E,E,19,[[[U]],[R[1]]]],[11,R[10],E,E,19,[[],[R[1]]]],[11,R[11],E,E,19,[[["self"]],[T]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[12],E,E,19,[[["self"]],[R[24]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[9],E,E,20,[[[U]],[R[1]]]],[11,R[10],E,E,20,[[],[R[1]]]],[11,R[11],E,E,20,[[["self"]],[T]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[12],E,E,20,[[["self"]],[R[24]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[9],E,E,21,[[[U]],[R[1]]]],[11,R[10],E,E,21,[[],[R[1]]]],[11,R[11],E,E,21,[[["self"]],[T]]],[11,R[23],E,E,21,[[["self"]],[T]]],[11,R[12],E,E,21,[[["self"]],[R[24]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[9],E,E,22,[[[U]],[R[1]]]],[11,R[10],E,E,22,[[],[R[1]]]],[11,R[11],E,E,22,[[["self"]],[T]]],[11,R[23],E,E,22,[[["self"]],[T]]],[11,R[12],E,E,22,[[["self"]],[R[24]]]],[11,R[494],E,E,22,[[["self"],["k"]],["bool"]]],[11,R[479],E,E,22,[[["self"]],[[R[478]],["box",[R[478]]]]]],[11,R[480],E,E,22,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[481],E,E,22,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,R[482],E,E,22,[[["self"]],[["box",[R[478]]],[R[478]]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[382],E,E,5,[[],[R[640]]]],[11,R[382],E,E,6,[[],["oemtime"]]],[11,R[382],E,E,7,[[],["lockinfo"]]],[11,"clone",E,E,15,[[["self"]],[R[545]]]],[11,"clone",E,E,2,[[["self"]],["configurehardwareresponse"]]],[11,"clone",E,E,5,[[["self"]],[R[640]]]],[11,"clone",E,E,6,[[["self"]],["oemtime"]]],[11,"clone",E,E,7,[[["self"]],["lockinfo"]]],[11,"clone",E,E,22,[[["self"]],[R[570]]]],[11,"clone",E,E,9,[[["self"]],["systemstatus"]]],[11,"clone",E,E,10,[[["self"]],[R[645]]]],[11,"clone",E,E,12,[[["self"]],[R[572]]]],[11,"clone",E,E,13,[[["self"]],[R[90]]]],[11,"clone",E,E,14,[[["self"]],["versioncomponent"]]],[11,"eq",E,E,22,[[["self"],[R[570]]],["bool"]]],[11,"from",E,E,19,[[["u32"]],[R[642]]]],[11,"from",E,E,20,[[["u32"]],[R[643]]]],[11,"from",E,E,21,[[["u8"]],[R[644]]]],[11,"fmt",E,E,16,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,19,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,20,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,21,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,22,[[["self"],[R[19]]],[R[1]]]],[11,"from_str",E,E,10,[[["scalartoken"]],["parsescalarresult"]]],[11,R[512],E,E,15,[[["self"]],[R[513]]]],[11,R[512],E,E,1,[[["self"]],[R[513]]]],[11,R[512],E,E,16,[[["self"]],[R[513]]]],[11,R[512],E,E,17,[[["self"]],[R[513]]]],[11,R[512],E,E,19,[[["self"]],[R[513]]]],[11,R[512],E,E,20,[[["self"]],[R[513]]]],[11,R[512],E,E,21,[[["self"]],[R[513]]]],[11,R[512],E,E,22,[[["self"]],[R[513]]]],[11,R[512],E,E,10,[[["self"]],[R[513]]]],[11,R[514],E,E,15,[[[R[513]]],[[R[545]],[R[32],[R[545]]]]]],[11,R[514],E,E,1,[[[R[513]]],[R[32]]]],[11,R[514],E,E,16,[[[R[513]]],[[R[32],[R[641]]],[R[641]]]]],[11,R[514],E,E,17,[[[R[513]]],[[R[32],[R[626]]],[R[626]]]]],[11,R[514],E,E,19,[[[R[513]]],[[R[32],[R[642]]],[R[642]]]]],[11,R[514],E,E,20,[[[R[513]]],[[R[643]],[R[32],[R[643]]]]]],[11,R[514],E,E,21,[[[R[513]]],[[R[644]],[R[32],[R[644]]]]]],[11,R[514],E,E,22,[[[R[513]]],[[R[32],[R[570]]],[R[570]]]]],[11,R[514],E,E,10,[[[R[513]]],[[R[645]],[R[32],[R[645]]]]]],[11,"name",E,E,0,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,0,[[["self"]],[R[16]]]],[11,"meta",E,E,0,[[[R[515]]],[R[516]]]],[11,R[547],E,E,0,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,15,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,15,[[[R[515]]],[R[516]]]],[11,R[576],E,E,15,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,1,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,1,[[[R[515]]],[R[516]]]],[11,"name",E,E,16,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,16,[[[R[515]]],[R[516]]]],[11,R[576],E,E,16,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,2,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,2,[[["self"]],[R[16]]]],[11,"meta",E,E,2,[[[R[515]]],[R[516]]]],[11,R[547],E,E,2,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,17,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,17,[[[R[515]]],[R[516]]]],[11,R[576],E,E,17,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,18,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,18,[[[R[515]]],[R[516]]]],[11,R[546],E,E,18,[[["self"]],[R[16]]]],[11,R[627],E,E,18,[[["self"],[R[517]],[R[32]],["str"]],[R[549]]]],[11,"name",E,E,3,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,3,[[["self"]],[R[16]]]],[11,"meta",E,E,3,[[[R[515]]],[R[516]]]],[11,R[547],E,E,3,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,4,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,4,[[["self"]],[R[16]]]],[11,"meta",E,E,4,[[[R[515]]],[R[516]]]],[11,R[547],E,E,4,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,6,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,6,[[["self"]],[R[16]]]],[11,"meta",E,E,6,[[[R[515]]],[R[516]]]],[11,R[547],E,E,6,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,19,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,19,[[[R[515]]],[R[516]]]],[11,R[576],E,E,19,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,20,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,20,[[[R[515]]],[R[516]]]],[11,R[576],E,E,20,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,21,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,21,[[[R[515]]],[R[516]]]],[11,R[576],E,E,21,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,5,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,5,[[[R[515]]],[R[516]]]],[11,R[546],E,E,5,[[["self"]],[R[16]]]],[11,R[547],E,E,5,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,"name",E,E,7,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,7,[[[R[515]]],[R[516]]]],[11,R[546],E,E,7,[[["self"]],[R[16]]]],[11,R[547],E,E,7,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]],[11,"name",E,E,22,[[],[[R[32],["str"]],["str"]]]],[11,"meta",E,E,22,[[[R[515]]],[R[516]]]],[11,R[576],E,E,22,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,8,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,8,[[["self"]],[R[16]]]],[11,"meta",E,E,8,[[[R[515]]],[R[516]]]],[11,R[547],E,E,8,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,9,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,9,[[["self"]],[R[16]]]],[11,"meta",E,E,9,[[[R[515]]],[R[516]]]],[11,R[547],E,E,9,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,10,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,10,[[[R[515]]],[R[516]]]],[11,R[576],E,E,10,[[["self"],[R[32]],[R[517]]],["value"]]],[11,"name",E,E,11,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,11,[[["self"]],[R[16]]]],[11,"meta",E,E,11,[[[R[515]]],[R[516]]]],[11,R[547],E,E,11,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,12,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,12,[[["self"]],[R[16]]]],[11,"meta",E,E,12,[[[R[515]]],[R[516]]]],[11,R[547],E,E,12,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,13,[[],[["str"],[R[32],["str"]]]]],[11,R[546],E,E,13,[[["self"]],[R[16]]]],[11,"meta",E,E,13,[[[R[515]]],[R[516]]]],[11,R[547],E,E,13,[[["self"],[R[517]],[R[548]],["str"]],[R[549]]]],[11,"name",E,E,14,[[],[["str"],[R[32],["str"]]]]],[11,"meta",E,E,14,[[[R[515]]],[R[516]]]],[11,R[546],E,E,14,[[["self"]],[R[16]]]],[11,R[547],E,E,14,[[["self"],[R[548]],["str"],[R[517]]],[R[549]]]]],"p":[[3,R[550]],[3,R[646]],[3,R[578]],[3,R[582]],[3,R[583]],[3,R[647]],[3,"OEMTime"],[3,"LockInfo"],[3,R[579]],[3,R[648]],[3,R[649]],[3,R[584]],[3,R[585]],[3,R[124]],[3,R[650]],[4,R[552]],[4,R[651]],[4,R[611]],[4,R[593]],[4,R[652]],[4,R[653]],[4,R[654]],[4,R[590]]]};
searchIndex["nsl_duplex_d2"]={"doc":"Device level API for interacting with the NSL EyeStar-D2…","i":[[3,R[77],"nsl_duplex_d2","Structure for interacting with Duplex-D2 Radio API",N,N],[3,"File",E,"Structure for files",N,N],[12,"name",E,"Name of file",0,N],[12,"body",E,"Contents of file",0,N],[3,R[75],E,"Struct for storing geo-records.",N,N],[12,"lon",E,"Modem' longitude at the time of the last connection",1,N],[12,"lat",E,"Modem's latitude at the time of the last connection",1,N],[12,"time",E,"Time of modem's last connection",1,N],[12,"max_error",E,"Approximate error of location data (<300m to <100km)",1,N],[3,R[76],E,"Struct for storing state of health records",N,N],[12,"reset_count",E,"(4 byte integer) Current epoch reset count, starts at 0,…",2,N],[12,"current_time",E,"(4 byte integer) Current time (seconds) from start of most…",2,N],[12,"current_rssi",E,"(1 byte integer) Current RSSI (Received Signal Strength…",2,N],[12,"connection_status",E,"(1 byte integer) Connection status, 0 (connected) or 1…",2,N],[12,"globalstar_gateway",E,"(1 byte integer) Globalstar gateway connected to,…",2,N],[12,"last_contact_time",E,"(4 byte integer) Last contact time, seconds since latest…",2,N],[12,"last_attempt_time",E,"(4 byte integer) Last attempt time, seconds since latest…",2,N],[12,"call_attempts_since_reset",E,"(4 byte integer) Count of call attempts since latest reset",2,N],[12,"successful_connects_since_reset",E,"(4 byte integer) Count of successful connects since latest…",2,N],[12,"average_connection_duration",E,"(4 byte integer) Average connection duration (seconds)",2,N],[12,"connection_duration_std_dev",E,"(4 byte integer) Connection duration standard deviation…",2,N],[5,"serial_connection",E,"Connection for communicating with actual Duplex-D2 hardware",N,[[["str"]],[R[70]]]],[11,"new",E,"Constructor for DuplexD2 structure",3,[[[R[70]]],["duplexd2"]]],[11,"get_state_of_health_for_modem",E,"Retrieves a record of information regarding modem…",3,[[["self"]],[[R[71]],[R[67],[R[71]]]]]],[11,"get_uploaded_file_count",E,"Retrieves a count of files that have been received by the…",3,[[["self"]],[[R[67],["u32"]],["u32"]]]],[11,"get_uploaded_message_count",E,R[72],3,[[["self"]],[[R[67],["u32"]],["u32"]]]],[11,"get_download_file_count",E,R[72],3,[[["self"]],[[R[67],["u32"]],["u32"]]]],[11,"get_geolocation_position_estimate",E,"Retrieves an estimate of the modem’s latitude and…",3,[[["self"]],[[R[73]],[R[67],[R[73]]]]]],[11,"get_uploaded_file",E,"Retrieves the next file in the upload queue. File is then…",3,[[["self"]],[["file"],[R[67],["file"]]]]],[11,"get_uploaded_message",E,"Retrieves the next message in the upload queue. Message is…",3,[[["self"]],[["file"],[R[67],["file"]]]]],[11,"delete_download_files",E,"Deletes all files in the modem download queue. Returns…",3,[[["self"]],[[R[67],["u32"]],["u32"]]]],[11,"delete_uploaded_files",E,"Deletes all files in the modem upload queue. Returns…",3,[[["self"]],[[R[67],["u32"]],["u32"]]]],[11,"delete_uploaded_messages",E,"Deletes all messages in the modem upload queue. Returns…",3,[[["self"]],[[R[67],["u32"]],["u32"]]]],[11,"put_download_file",E,"Put a new file on the download queue, returns true if…",3,[[["self"],["file"]],[[R[67],["bool"]],["bool"]]]],[11,"get_alive",E,"Check if modem is powered and if it is able to respond to…",3,[[["self"]],[[R[67],["bool"]],["bool"]]]],[11,"new",E,"Create a new file object by copying name and body.",0,[[["str"]],["self"]]],[11,"parse",E,"Create a new file object by parsing raw serial data.",0,[[],[[R[74],["file"]],["file"]]]],[11,"encode",E,"Encode a file object to raw serial data.",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"parse",E,"Parse GeoRecord",1,[[],[[R[74],[R[73]]],[R[73]]]]],[11,"parse",E,"Parse StateOfHealth from the serial line.",2,[[],[[R[71]],[R[74],[R[71]]]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"eq",E,E,0,[[["self"],["file"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["file"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[73]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[73]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[71]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[71]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[19]]],[R[1]]]]],"p":[[3,"File"],[3,R[75]],[3,R[76]],[3,R[77]]]};
searchIndex["nsl_duplex_d2_comms_service"]={"doc":"Hardware service to allow for communications over a NSL…","i":[],"p":[]};
searchIndex["obc_hs"]={"doc":E,"i":[[17,"COMMS_SERVICE","obc_hs",E,N,N],[17,"DOWNLINK_PORT",E,E,N,N],[17,"CONFIG_PATH",E,E,N,N],[17,"TELEMETRY_AGE",E,E,N,N],[17,"CRITICAL_AGE",E,E,N,N],[17,"RAM_NOMINAL",E,E,N,N],[17,"RAM_HIGH",E,E,N,N],[17,"RAM_CRITICAL",E,E,N,N],[17,"DISK_NOMINAL",E,E,N,N],[17,"DISK_HIGH",E,E,N,N],[17,"DISK_CRITICAL",E,E,N,N],[17,"QUERY_TIMEOUT",E,E,N,N]],"p":[]};
searchIndex["radio_api"]={"doc":"A high level interface for interacting with radios","i":[[3,R[14],R[66],"A connection is like a stream, but allowed parsed reads…",N,N],[4,R[68],E,"Common Error for Radio Actions",N,N],[13,"ParseError",E,"There was a problem parsing the result data",0,N],[12,R[153],"radio_api::RadioError","The message from original error",0,N],[13,"NoData",R[66],"No data available",0,N],[6,"RadioResult",E,"Custom error type for radio operations.",N,N],[6,"ParseFn",E,"The signature of parse functions used in Connection read…",N,N],[8,"Stream",E,"Connections expect a struct instance with this trait to…",N,N],[10,"write",E,"Write raw bytes to the stream.",1,[[["self"]],[R[67]]]],[10,"read",E,"Read raw bytes from the stream.",1,[[["self"]],[["vec",["u8"]],[R[67],["vec"]]]]],[11,"new",E,"Convenience constructor to create connection from stream.",2,[[[R[2]],["box",[R[2]]]],[R[70]]]],[11,"write",E,"Write out raw bytes to the underlying stream.",2,[[["self"]],[R[67]]]],[11,"read",E,"Read the next object using provided parser.",2,[[["self"],["parsefn"]],[R[67]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[31],E,E,0,[[["self"]],[R[16]]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[45],E,E,0,[[["self"]],["fail"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,0,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,0,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,0,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[4,R[68]],[8,"Stream"],[3,R[14]]]};
searchIndex["rust_i2c"]={"doc":"I2C device connection abstractions","i":[[3,R[13],"rust_i2c","An implementation of `i2c_hal::Stream` which uses the…",N,N],[3,"Command",E,"Struct for abstracting I2C command/data structure",N,N],[12,"cmd",E,"I2C command or registry",0,N],[12,"data",E,"Data to write to registry",0,N],[3,R[14],E,"Struct for communicating with an I2C device",N,N],[8,"Stream",E,"High level read/write trait for I2C connections to implement",N,N],[10,"write",E,R[3],1,[[["self"],[R[0]]],[R[1]]]],[10,"read",E,R[4],1,[[["self"],[R[7]],[R[0]]],[["vec",["u8"]],[R[1],["vec"]]]]],[10,R[5],E,R[6],1,[[["self"],[R[7]],[R[0]],[R[8]]],[["vec",["u8"]],[R[1],["vec"]]]]],[11,"new",E,"Creates new I2CStream instance",2,[[["u16"],["str"]],["self"]]],[11,"new",E,"I2C connection constructor",3,[[["box",[R[2]]],[R[2]]],["self"]]],[11,R[170],E,"Convenience constructor for creating a Connection with an…",3,[[["u16"],["str"]],["self"]]],[11,"write",E,R[3],3,[[["self"],[R[0]]],[R[1]]]],[11,"read",E,R[4],3,[[["self"],[R[7]],[R[0]]],[["vec",["u8"]],[R[1],["vec"]]]]],[11,R[5],E,R[6],3,[[["self"],[R[7]],[R[0]],[R[8]]],[["vec",["u8"]],[R[1],["vec"]]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"write",E,"Writing",2,[[["self"],[R[0]]],[R[1]]]],[11,"read",E,"Reading",2,[[["self"],[R[7]],[R[0]]],[["vec",["u8"]],[R[1],["vec"]]]]],[11,R[5],E,"Read/Write transaction",2,[[["self"],[R[7]],[R[0]],[R[8]]],[["vec",["u8"]],[R[1],["vec"]]]]],[11,"eq",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]]],"p":[[3,"Command"],[8,"Stream"],[3,R[13]],[3,R[14]]]};
searchIndex["rust_mission_app"]={"doc":E,"i":[],"p":[]};
searchIndex["rust_uart"]={"doc":"A generalized HAL for communicating over serial ports","i":[[3,R[14],R[165],R[403],N,N],[12,R[2],E,R[404],0,N],[4,R[173],E,R[405],N,N],[13,R[33],E,R[406],1,N],[13,R[472],E,R[407],1,N],[13,R[473],E,R[408],1,N],[12,"cause",R[166],R[167],1,N],[12,R[36],E,R[37],1,N],[13,R[409],R[165],R[410],1,N],[12,"cause",R[166],R[167],1,N],[12,R[36],E,R[37],1,N],[0,"mock",R[165],R[411],N,N],[3,R[175],R[171],R[412],N,N],[3,R[176],E,R[413],N,N],[3,R[174],E,R[414],N,N],[12,"write",E,R[415],2,N],[12,"read",E,R[416],2,N],[11,R[168],E,R[417],3,[[["self"],[R[169]]]]],[11,R[418],E,R[419],3,[[["self"],["vec",["u8"]],["u8"]]]],[11,R[168],E,R[420],4,[[["self"],["vec",["u8"]],[R[169],["vec"]]]]],[11,R[421],E,R[422],4,[[["self"],["vec",["u8"]],["u8"]]]],[6,"UartResult",R[165],"Errors that occur while reading from and writing to stream",N,N],[8,"Stream",E,"This trait is used to represent streams and allows for…",N,N],[10,"write",E,"Write raw bytes to stream",5,[[["self"]],[R[169]]]],[10,"read",E,"Read upto a specified amount of raw bytes from the stream",5,[[["self"],[R[7]],[R[8]]],[["vec",["u8"]],[R[169],["vec"]]]]],[11,"new",E,R[423],0,[[["box",[R[2]]],[R[2]]],[R[70]]]],[11,R[170],E,R[424],0,[[[R[425]],["str"],[R[8]]],[[R[169],[R[70]]],[R[70]]]]],[11,"write",E,R[426],0,[[["self"]],[R[169]]]],[11,"read",E,R[427],0,[[["self"],[R[7]],[R[8]]],[["vec",["u8"]],[R[169],["vec"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[31],E,E,1,[[["self"]],[R[16]]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[45],E,E,1,[[["self"]],["fail"]]],[11,"into",R[171],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[9],E,E,4,[[[U]],[R[1]]]],[11,R[10],E,E,4,[[],[R[1]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"write",E,E,2,[[["self"]],[R[169]]]],[11,"read",E,E,2,[[["self"],[R[7]],[R[8]]],[["vec",["u8"]],[R[169],["vec"]]]]],[11,R[382],E,E,2,[[],["self"]]],[11,"clone",R[165],E,1,[[["self"]],[R[172]]]],[11,"eq",E,E,1,[[["self"],[R[172]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[172]]],["bool"]]],[11,"from",E,E,1,[[["error"]],["self"]]],[11,"from",E,E,1,[[["error"]],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,1,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,1,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[3,R[14]],[4,R[173]],[3,R[174]],[3,R[175]],[3,R[176]],[8,"Stream"]]};
searchIndex["scheduler_service"]={"doc":"Service for scheduling tasks in the KubOS system.","i":[],"p":[]};
searchIndex["serial_comms_service"]={"doc":"Hardware service to allow for serial communications. This…","i":[],"p":[]};
searchIndex["shell_protocol"]={"doc":"Kubos Shell Protocol","i":[[3,R[196],R[183],"Structure to handle lifetime and communications with child…",N,N],[12,"stdout_reader",E,"Buffered timeout reader pointed to stdout pipe",0,N],[12,"stderr_reader",E,"Buffered timeout reader pointed to stderr pipe",0,N],[3,R[197],E,"Shell Service Protocol structure",N,N],[0,"error",E,"Shell protocol errors",N,N],[4,R[133],R[178],"Errors which occur when using ShellProtocol",N,N],[13,R[152],E,"An error was raised by the cbor protocol",1,N],[12,"err",R[179],R[177],1,N],[13,"ChannelError",R[178],"An error was encountered in the channel protocol",1,N],[12,"err",R[179],"The specific channel protocol error",1,N],[13,"KillError",R[178],"An error was encountered when killing a process",1,N],[12,"err",R[179],R[136],1,N],[13,R[180],R[178],R[181],1,N],[12,R[153],R[179],"Message which was being created",1,N],[12,"err",E,"Underlying serde_cbor error",1,N],[13,R[154],R[178],R[155],1,N],[12,"err",R[179],R[136],1,N],[13,"ProcesssError",R[178],"A general error was raised by the process",1,N],[12,"action",R[179],"Action which caused error",1,N],[12,"err",E,R[182],1,N],[13,R[158],R[178],R[159],1,N],[13,R[156],E,R[157],1,N],[12,"err",R[179],R[136],1,N],[13,"SpawnError",R[178],"An error was encountered when spawning a process",1,N],[12,"cmd",R[179],"Command spawned",1,N],[12,"err",E,R[182],1,N],[13,"ReadTimeout",R[178],"A timeout was encountered when reading data",1,N],[0,"messages",R[183],"Shell protocol messages",N,N],[4,"Message",R[184],"Messages available in shell protocol",N,N],[13,"Exit",E,R[187],2,N],[12,R[140],R[185],R[186],2,N],[12,"code",E,"Exit code",2,N],[12,"signal",E,"Exit signal",2,N],[13,"Error",R[184],"This message is sent when an error occurs within the shell…",2,N],[12,R[140],R[185],R[186],2,N],[12,R[153],E,"Error condition encountered",2,N],[13,"Kill",R[184],"This message is sent to the shell service to send a kill…",2,N],[12,R[140],R[185],R[186],2,N],[12,"signal",E,"Optional signal to use. Default is SIGKILL",2,N],[13,"List",R[184],"This message is used to request and respond with the lists…",2,N],[12,R[140],R[185],R[186],2,N],[12,"process_list",E,"Optional list of processes. No list is sent when a request…",2,N],[13,"Pid",R[184],"This message is sent by the shell service after a process…",2,N],[12,R[140],R[185],R[186],2,N],[12,"pid",E,"PID of remote process",2,N],[13,"Spawn",R[184],"This message is sent to the shell service to request a…",2,N],[12,R[140],R[185],R[186],2,N],[12,R[0],E,"Process command to spawn",2,N],[12,"args",E,"Optional arguments to pass into command when spawning",2,N],[13,"Stdout",R[184],R[187],2,N],[12,R[140],R[185],R[186],2,N],[12,"data",E,R[188],2,N],[13,"Stderr",R[184],R[187],2,N],[12,R[140],R[185],R[186],2,N],[12,"data",E,R[188],2,N],[13,"Stdin",R[184],"This message is sent by the shell client with stdin for a…",2,N],[12,R[140],R[185],R[186],2,N],[12,"data",E,"Optional stdin data",2,N],[5,R[189],R[184],"Parse a ChannelMessage into a ShellMessage",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[0,"error",E,"Helper functions for Message::Error",N,N],[5,R[191],"shell_protocol::messages::error","CBOR -> Message::Error",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,"Error -> CBOR",N,[[["u32"],["str"]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"exit",R[184],"Helper functions for Message::Exit",N,N],[5,R[191],"shell_protocol::messages::exit","CBOR -> Message::Exit",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,"Exit -> CBOR",N,[[["u32"]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"kill",R[184],"Helper functions for Message::Kill",N,N],[5,R[191],"shell_protocol::messages::kill","CBOR -> Message::Kill",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,"Kill -> CBOR",N,[[["u32"],[R[32],["u32"]]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"list",R[184],"Helper functions for Message::List",N,N],[5,R[191],"shell_protocol::messages::list","CBOR -> Message::List",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,R[193],N,[[[R[32],["hashmap"]],["u32"],["hashmap",["u32"]]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"pid",R[184],"Helper functions for Message::Pid",N,N],[5,R[191],"shell_protocol::messages::pid","CBOR -> Message::Pid",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,"Pid -> CBOR",N,[[["u32"]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"spawn",R[184],"Helper functions for Message::Spawn",N,N],[5,R[191],"shell_protocol::messages::spawn","CBOR -> Message::Spawn",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,"Spawn -> CBOR",N,[[["u32"],[R[32]],["str"]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"stderr",R[184],"Helper functions for Message::Stderr",N,N],[5,R[191],"shell_protocol::messages::stderr","CBOR -> Message::Stderr",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,"Stderr -> CBOR",N,[[["u32"],["str"],[R[32],["str"]]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"stdin",R[184],"Helper functions for Message::Stdin",N,N],[5,R[191],"shell_protocol::messages::stdin","CBOR -> Message::Stdin",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,"Stdin -> CBOR",N,[[["u32"],["str"],[R[32],["str"]]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[0,"stdout",R[184],"Helper functions for Message::Stdout",N,N],[5,R[191],"shell_protocol::messages::stdout","CBOR -> Message::Stdout",N,[[[R[190]]],[[R[131]],[R[153]],[R[1],[R[153],R[131]]]]]],[5,R[192],E,R[193],N,[[["u32"],["str"],[R[32],["str"]]],[[R[1],["vec",R[131]]],["vec",["u8"]],[R[131]]]]],[11,"spawn",R[183],"Spawn a process and setup handler structure",0,[[["vec",[R[16]]],["str"],[R[32],["vec"]]],[[R[1],[R[194],R[131]]],[R[194]],[R[131]]]]],[11,"read_stdout",E,"Attempt to read from stdout",0,[[["self"]],[[R[1],[R[32],R[131]]],[R[32],[R[16]]],[R[131]]]]],[11,"read_stderr",E,"Attempt to read from stderr",0,[[["self"]],[[R[1],[R[32],R[131]]],[R[32],[R[16]]],[R[131]]]]],[11,"write_stdin",E,"Attempt to write to stdin",0,[[["self"]],[[R[1],[R[131]]],[R[131]]]]],[11,"close_stdin",E,"Close process' stdin pipe",0,[[["self"]],[[R[1],[R[131]]],[R[131]]]]],[11,"id",E,"Retrieve ID of process",0,[[["self"]],["u32"]]],[11,"status",E,"Check to see if a process has exited and if the exit…",0,[[["self"]],[[R[1],[R[32],R[131]]],[R[131]],[R[32]]]]],[11,"kill",E,"Send killing signal to process",0,[[["self"],[R[32],["u32"]],["u32"]],[[R[1],[R[131]]],[R[131]]]]],[11,"new",E,"Create new instance of shell protocol structure",3,[[["channelprotocol"],["u32"],["box",[R[194]]],[R[194]]],["self"]]],[11,R[195],E,"Listen for and process shell protocol messages",3,[[["self"],["f"],[R[8]]],[[R[1],[R[131]]],[R[131]]]]],[17,"CHUNK_SIZE",E,"Default chunk size used by shell protocol",N,N],[17,"PORT",E,"Default port used by shell protocol",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[9],E,E,3,[[[U]],[R[1]]]],[11,R[10],E,E,3,[[],[R[1]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[24]]]],[11,"into",R[178],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[31],E,E,1,[[["self"]],[R[16]]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,R[45],E,E,1,[[["self"]],["fail"]]],[11,"into",R[184],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"eq",E,E,2,[[["self"],[R[153]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[153]]],["bool"]]],[11,"from",R[178],E,1,[[[R[131]]],["self"]]],[11,"from",E,E,1,[[[R[131]]],["self"]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[184],E,2,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",R[178],E,1,[[["self"],[R[19]]],[R[1]]]],[11,"name",E,E,1,[[["self"]],[["str"],[R[32],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[[R[32],["fail"]],["fail"]]]],[11,R[29],E,E,1,[[["self"]],[[R[32],[R[29]]],[R[29]]]]]],"p":[[3,R[196]],[4,R[133]],[4,"Message"],[3,R[197]]]};
searchIndex["shell_service"]={"doc":E,"i":[[5,R[485],"shell_service",E,N,[[[R[486]]],[[R[1],["error"]],["error"]]]]],"p":[]};
searchIndex["telemetry_service"]={"doc":"Kubos Service for interacting with the telemetry database.","i":[],"p":[]};
searchIndex["uart_comms_client"]={"doc":E,"i":[],"p":[]};
searchIndex["udp_client"]={"doc":E,"i":[[3,"Address","udp_client",E,N,N],[3,"Config",E,E,N,N],[5,"available",E,E,N,[[["c_int"]],[["c_int"],[R[1],["c_int"]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[19]]],[R[1]]]],[11,R[198],E,E,0,[[["__d"]],[R[1]]]],[11,R[198],E,E,1,[[["__d"]],[R[1]]]]],"p":[[3,"Address"],[3,"Config"]]};
searchIndex["utils"]={"doc":"This crate is a generically named grab bag of utilities…","i":[[0,"testing","utils",E,N,N],[3,R[534],"utils::testing",E,N,N],[3,R[535],E,"This structure allows the creation of an instance of an…",N,N],[3,R[536],E,E,N,N],[5,"service_query",E,E,N,[[["u16"],["str"]],["value"]]],[11,"new",E,E,0,[[["str"],["str"],["vec",["str"]]],["testcommand"]]],[11,"spawn",E,"Ask Cargo to run the command. This is not a blocking…",0,[[["self"]]]],[11,"new",E,"Create config for TestService and return basic struct",1,[[["u16"],["str"]],["testservice"]]],[11,"config",E,"Appends additional configuration data to service's config",1,[[["self"],["str"]]]],[11,"build",E,"Ask Cargo to build the service binary. This is a blocking…",1,[[["self"]]]],[11,"spawn",E,"Ask Cargo to run the service binary. This is not a…",1,[[["self"]]]],[11,"kill",E,"Kill the running process.",1,[[["self"]]]],[11,"spawn",E,"Spawns a new dummy service listener This listener will…",2,[[["u16"],["str"]],["servicelistener"]]],[11,"get_request",E,"Pops a request body from the collected queue These are…",2,[[["self"]],[[R[16]],[R[32],[R[16]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[9],E,E,0,[[[U]],[R[1]]]],[11,R[10],E,E,0,[[],[R[1]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[24]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[9],E,E,1,[[[U]],[R[1]]]],[11,R[10],E,E,1,[[],[R[1]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[24]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[9],E,E,2,[[[U]],[R[1]]]],[11,R[10],E,E,2,[[],[R[1]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[24]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"drop",E,E,1,[[["self"]]]]],"p":[[3,R[534]],[3,R[535]],[3,R[536]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);